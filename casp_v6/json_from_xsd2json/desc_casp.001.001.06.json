{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "additionalProperties": false,
    "description": "JSON Schema generated by LorealConsulting from ISO20022 repository",
    "allOf": [
        {
            "$ref": "#/$defs/Document"
        }
    ],
    "$defs": {
		"Document": {
            "description": "General information that unambiguously identifies a document, such as identification number and issue date time.",
            "properties": {
                "SaleToPOISvcReq": {
                    "$ref": "#/$defs/SaleToPOIServiceRequestV06"
                }
            },
            "required": [
                "SaleToPOISvcReq"
            ],
            "type": "object"
        },
        "Acquirer10": {
            "description": "Acquirer involved in the card payment.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/GenericIdentification177"
                },
                "ParamsVrsn": {
                    "$ref": "#/$defs/Max256Text"
                }
            },
            "type": "object"
        },
        "ActionMessage11": {
            "description": "Information to display, print or store.",
            "properties": {
                "Frmt": {
                    "$ref": "#/$defs/OutputFormat3Code"
                },
                "InfQlfr": {
                    "$ref": "#/$defs/InformationQualify1Code"
                },
                "MinDispTm": {
                    "$ref": "#/$defs/Number"
                },
                "MsgCntt": {
                    "$ref": "#/$defs/Max20000Text"
                },
                "MsgCnttSgntr": {
                    "$ref": "#/$defs/ContentInformationType38"
                },
                "MsgDstn": {
                    "$ref": "#/$defs/UserInterface4Code"
                },
                "OutptBrcd": {
                    "$ref": "#/$defs/OutputBarcode2"
                },
                "RspnReqrdFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                }
            },
            "required": [
                "MsgDstn"
            ],
            "type": "object"
        },
        "ActiveCurrencyAndAmount": {
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "example": "6545.56",
            "properties": {
                "@Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "value": {
                    "$ref": "#/$defs/ActiveCurrencyAndAmount_SimpleType"
                }
            },
            "required": [
                "Ccy",
                "value"
            ],
            "type": "object"
        },
        "ActiveCurrencyAndAmount_SimpleType": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                    "exclusiveMinimum": false,
                    "minimum": 0
                }
            ]
        },
        "ActiveCurrencyCode": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[A-Z]{3,3}"
                }
            ],
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "example": "EUR"
        },
        "AddressType2Code": {
            "type": "string",
            "description": "Specifies the type of address.\nCode: HOME:\tResidential:\tDefinition: Address is the home address.\nCode: BIZZ:\tBusiness:\tDefinition: Address is the business address.\nCode: ADDR:\tPostal:\tDefinition: Address is the complete postal address.\nCode: PBOX:\tPOBox:\tDefinition: Address is a postal office (PO) box.\nCode: MLTO:\tMailTo:\tDefinition: Address is the address to which mail is sent.\nCode: DLVY:\tDeliveryTo:\tDefinition: Address is the address to which delivery is to take place.",
            "enum": [
                "ADDR",
                "PBOX",
                "HOME",
                "BIZZ",
                "MLTO",
                "DLVY"
            ],
            "example": "ADDR"
        },
        "AddressVerification1": {
            "description": "Numeric characters of the cardholder's address for verification.",
            "properties": {
                "AdrDgts": {
                    "$ref": "#/$defs/Max5NumericText"
                },
                "PstlCdDgts": {
                    "$ref": "#/$defs/Max5NumericText"
                }
            },
            "type": "object"
        },
        "AggregationTransaction3": {
            "description": "Payment transaction with an aggregated amount.",
            "properties": {
                "FrstPmtDtTm": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "IndvPmt": {
                    "items": {
                        "$ref": "#/$defs/DetailedAmount21"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "LastPmtDtTm": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "NbOfPmts": {
                    "$ref": "#/$defs/Number"
                }
            },
            "type": "object"
        },
        "Algorithm26Code": {
            "type": "string",
            "description": "Identification of a digest algorithm.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "HS25",
                "HS38",
                "HS51",
                "HS01",
                "SH31",
                "SH32",
                "SH33",
                "SH35",
                "SHK1",
                "SHK2",
                "SMS3"
            ],
            "example": "HS25"
        },
        "Algorithm27Code": {
            "type": "string",
            "description": "Cryptographic algorithms for the MAC (Message Authentication Code).\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "MACC",
                "MCCS",
                "CMA1",
                "MCC1",
                "CMA9",
                "CMA5",
                "CMA2",
                "CM31",
                "CM32",
                "CM33",
                "MCS3",
                "CCA1",
                "CCA2",
                "CCA3",
                "S34C",
                "S34R"
            ],
            "example": "MACC"
        },
        "Algorithm28Code": {
            "type": "string",
            "description": "Cryptographic algorithms for the protection of transported keys.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "EA2C",
                "E3DC",
                "DKP9",
                "UKPT",
                "UKA2",
                "EA9C",
                "EA5C",
                "DA12",
                "DA19",
                "DA25",
                "N108",
                "EA5R",
                "EA9R",
                "EA2R",
                "E3DR",
                "E36C",
                "E36R",
                "SD5C",
                "UKA1",
                "UKA3",
                "SM4C",
                "SM4R"
            ],
            "example": "EA2C"
        },
        "Algorithm29Code": {
            "type": "string",
            "description": "Cryptographic algorithms for digital signatures.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "ERS2",
                "ERS1",
                "RPSS",
                "ERS3",
                "ED32",
                "ED33",
                "ED35",
                "ED23",
                "ED25",
                "ES22",
                "ES32",
                "ES33",
                "ES35",
                "ES23",
                "ES25",
                "ED22",
                "EF32",
                "EF22",
                "EF33",
                "EF35",
                "EF23",
                "EO33",
                "EF25",
                "EO32",
                "EO22",
                "EO35",
                "EO23",
                "EO25",
                "DD22",
                "DD32",
                "DD33",
                "DD35",
                "DD23",
                "DD25",
                "SM22",
                "SM33",
                "SM32",
                "SM35",
                "SM23",
                "SM25",
                "S2S3"
            ],
            "example": "ERS2"
        },
        "Algorithm7Code": {
            "type": "string",
            "description": "Asymmetric encryption algorithm of a transport key.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "ERSA",
                "RSAO"
            ],
            "example": "ERSA"
        },
        "Algorithm8Code": {
            "type": "string",
            "description": "Mask generator functions of the RSAES-OAEP encryption algorithm (RSA Encryption Scheme: Optimal Asymmetric Encryption Padding).\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "MGF1"
            ],
            "example": "MGF1"
        },
        "AlgorithmIdentification31": {
            "description": "Identification of a cryptographic algorithm and parameters for the MAC computation.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm27Code"
                },
                "Param": {
                    "$ref": "#/$defs/Parameter7"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "AlgorithmIdentification32": {
            "description": "Cryptographic algorithm and parameters for the protection of the transported key.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm28Code"
                },
                "Param": {
                    "$ref": "#/$defs/Parameter12"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "AlgorithmIdentification33": {
            "description": "Identification of a cryptographic algorithm and parameters for digital signatures.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm29Code"
                },
                "Param": {
                    "$ref": "#/$defs/Parameter16"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "AlgorithmIdentification34": {
            "description": "Mask generator function cryptographic algorithm and parameters.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm8Code"
                },
                "Param": {
                    "$ref": "#/$defs/Parameter18"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "AlgorithmIdentification35": {
            "description": "Cryptographic algorithms and parameters for the protection of transported keys by an asymmetric key.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm7Code"
                },
                "Param": {
                    "$ref": "#/$defs/Parameter17"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "AlgorithmIdentification36": {
            "description": "Cryptographic algorithm and parameters of digests.",
            "properties": {
                "Algo": {
                    "$ref": "#/$defs/Algorithm26Code"
                }
            },
            "required": [
                "Algo"
            ],
            "type": "object"
        },
        "Amount5": {
            "description": "Signed amount in a given numeric currency",
            "properties": {
                "Amt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Sgn": {
                    "$ref": "#/$defs/PlusOrMinusIndicator"
                }
            },
            "required": [
                "Amt"
            ],
            "type": "object"
        },
        "AmountUnit1Code": {
            "type": "string",
            "description": "Unit of a amount (for loyalty or account).\nCode: POIN:\tPoint:\tDefinition: The amount is expressed in point.\nCode: MONE:\tMonetary:\tDefinition: The amount is expressed in a monetary value in a currency.",
            "enum": [
                "MONE",
                "POIN"
            ]
        },
        "AnyBICDec2014Identifier": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}"
                }
            ],
            "description": "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".",
            "example": "CHASUS33"
        },
        "AttendanceContext1Code": {
            "type": "string",
            "description": "Human attendance at the POI location during the transaction.\nCode: ATTD:\tAttended:\tDefinition: Attended payment, with an attendant.\nCode: SATT:\tSemiAttended:\tDefinition: Semi-attended, including self checkout. An attendant supervises several payment, and could be called to help the cardholder.\nCode: UATT:\tUnattended:\tDefinition: Unattended payment, no attendant present.\nCode: ATTL:\tAttendantDelivery:\tDefinition: Delivery by an attendant.\nCode: CUST:\tCustomerDelivery:\tDefinition: Delivery by the customer.\nCode: CARR:\tCarrierDelivery:\tDefinition: Delivery by a carrier.\nCode: FULL:\tFullServe:\tDefinition: Full service for fuel distribution.\nCode: SELF:\tSelfServe:\tDefinition: Self service for fuel distribution.",
            "enum": [
                "ATTD",
                "SATT",
                "UATT"
            ],
            "example": "ATTD"
        },
        "AttendanceContext2Code": {
            "type": "string",
            "description": "Identify the method of delivery or distribution.\nCode: ATTD:\tAttended:\tDefinition: Attended payment, with an attendant.\nCode: SATT:\tSemiAttended:\tDefinition: Semi-attended, including self checkout. An attendant supervises several payment, and could be called to help the cardholder.\nCode: UATT:\tUnattended:\tDefinition: Unattended payment, no attendant present.\nCode: ATTL:\tAttendantDelivery:\tDefinition: Delivery by an attendant.\nCode: CUST:\tCustomerDelivery:\tDefinition: Delivery by the customer.\nCode: CARR:\tCarrierDelivery:\tDefinition: Delivery by a carrier.\nCode: FULL:\tFullServe:\tDefinition: Full service for fuel distribution.\nCode: SELF:\tSelfServe:\tDefinition: Self service for fuel distribution.",
            "enum": [
                "ATTL",
                "CARR",
                "CUST",
                "FULL",
                "SELF"
            ]
        },
        "AttributeType1Code": {
            "type": "string",
            "description": "Type of attribute of a distinguished name (DN).\nCode: CNAT:\tCommonName:\tDefinition: Common name of the attribute (ASN.1 Object Identifier: id-at-commonName).\nCode: LATT:\tLocality:\tDefinition: Locality of the attribute (ASN.1 Object Identifier: id-at-localityName).\nCode: OATT:\tOrganisationName:\tDefinition: Organization name of the attribute (ASN.1 Object Identifier: id-at-organizationName).\nCode: OUAT:\tOrganisationUnitName:\tDefinition: Organization unit name of the attribute (ASN.1 Object Identifier: id-at-organizationalUnitName).\nCode: CATT:\tCountryName:\tDefinition: Country name of the attribute (ASN.1 Object Identifier: id-at-countryName).\nCode: EMAL:\tEmailAddress:\tDefinition: Email address of the certificate subject.\nCode: CHLG:\tChallengePassword:\tDefinition: Password by which an entity may request certificate revocation.",
            "enum": [
                "CNAT",
                "LATT",
                "OATT",
                "OUAT",
                "CATT"
            ],
            "example": "CNAT"
        },
        "AuthenticatedData10": {
            "description": "Message authentication code (MAC), computed on the data to protect with an encryption key.",
            "properties": {
                "MAC": {
                    "$ref": "#/$defs/Max140Binary"
                },
                "MACAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification31"
                },
                "NcpsltdCntt": {
                    "$ref": "#/$defs/EncapsulatedContent3"
                },
                "Rcpt": {
                    "items": {
                        "$ref": "#/$defs/Recipient15Choice"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "Rcpt",
                "MACAlgo",
                "NcpsltdCntt",
                "MAC"
            ],
            "type": "object"
        },
        "AuthenticationEntity2Code": {
            "type": "string",
            "description": "Entity or device that has performed the verification.\nCode: ICCD:\tICC:\tDefinition: Application in the chip card (Integrated Circuit Card), for instance an offline PIN verification.\nCode: AGNT:\tAuthorisedAgent:\tDefinition: Authorisation agent of the issuer.\nCode: MERC:\tMerchant:\tDefinition: Merchant (for example signature verification by the attendant).\nCode: ACQR:\tAcquirer:\tDefinition: Acquirer of the transaction.\nCode: ISSR:\tIssuer:\tDefinition: Card issuer.\nCode: TRML:\tTerminal:\tDefinition: Secure application in the terminal.",
            "enum": [
                "ICCD",
                "AGNT",
                "MERC",
                "ACQR",
                "ISSR",
                "TRML"
            ],
            "example": "ICCD"
        },
        "AuthenticationMethod6Code": {
            "type": "string",
            "description": "Methods used to authenticate a person or a card.\nCode: UKNW:\tUnknownMethod:\tDefinition: Authentication method is performed unknown.\nCode: BYPS:\tBypass:\tDefinition: Authentication bypassed by the merchant.\nCode: NPIN:\tOnLinePIN:\tDefinition: On-line PIN authentication (Personal Identification Number).\nCode: FPIN:\tOfflinePIN:\tDefinition: Off-line PIN authentication (Personal Identification Number).\nCode: CPSG:\tSignatureCapture:\tDefinition: Electronic signature capture (handwritten signature).\nCode: PPSG:\tPaperSignature:\tDefinition: Handwritten paper signature.\nCode: MANU:\tManualVerification:\tDefinition: Manual verification, for example passport or drivers license.\nCode: MERC:\tMerchantAuthentication:\tDefinition: Merchant-related authentication.\nCode: SCRT:\tSecureCertificate:\tDefinition: Electronic commerce transaction secured with the X.509 certificate of a customer.\nCode: SNCT:\tSecureNoCertificate:\tDefinition: Secure electronic transaction without cardholder certificate.\nCode: SCNL:\tSecuredChannel:\tDefinition: Channel-encrypted transaction.\nCode: PSWD:\tPassword:\tDefinition: Authentication by a password.\nCode: ADDB:\tBillingAddressVerification:\tDefinition: Cardholder billing address verification.\nCode: BIOM:\tBiometry:\tDefinition: Biometric authentication of the cardholder.\nCode: CDHI:\tCardholderIdentificationData:\tDefinition: Cardholder data provided for verification, for instance social security number, driver license number, passport number.\nCode: CRYP:\tCryptogramVerification:\tDefinition: Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\nCode: CSCV:\tCSCVerification:\tDefinition: Verification of Card Security Code.\nCode: PSVE:\tPassiveAuthentication:\tDefinition: Authentication based on statistical cardholder behaviour.\nCode: CSEC:\tSecureElectronicCommerce:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: ADDS:\tShippingAddressVerification:\tDefinition: Cardholder shipping address verification.\nCode: TOKN:\tTokenAuthentication:\tDefinition: Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\nCode: TOKP:\tPaymentToken:\tDefinition: Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\nCode: TOKA:\tAuthenticationToken:\tDefinition: A token is used to verify an already performed authentication.\nCode: MOBL:\tMobile:\tDefinition: Customer mobile device.\nCode: OTHR:\tOther:\tDefinition: Other customer authentication.\nCode: ADVF:\tAddressDigits:\tDefinition: Digits of the address.\nCode: ARNB:\tAlienRegistrationNumber:\tDefinition: Number assigned by a government agency to identify foreign nationals.\nCode: ARQC:\tARQCVerification:\tDefinition: Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\nCode: BTHD:\tBirthDate:\tDefinition: Date of birth of a person.\nCode: CHDN:\tCardholderName:\tDefinition: Name of cardholder\nCode: COFB:\tCityOfBirth:\tDefinition: City of birth to authenticate a person.\nCode: CUID:\tCustomerIdentification:\tDefinition: Customer number used as a mechanism of authentication.\nCode: DRVI:\tDriverIdentification:\tDefinition: Identification of a driver in a fleet of vehicles.\nCode: DRLN:\tDriverLicenseNumber:\tDefinition: Number assigned by a driving license authority to a person driving a car.\nCode: EMAL:\tEmail:\tDefinition: Electronic mail address\nCode: EMIN:\tEmployeeIdentificationNumber:\tDefinition: Number assigned to an employee by an employer.\nCode: EMRN:\tEmployerIdentificationNumber:\tDefinition: Number assigned to an employer by a registration authority.\nCode: IDCN:\tIdentityCardNumber:\tDefinition: Number assigned by a national authority to an identity card.\nCode: OTPW:\tOneTimePassword:\tDefinition: Verification of a one-time password provided by the issuer.\nCode: OCHI:\tOtherCardholderIdentification:\tDefinition: Other cardholder data provided for identification.\nCode: OTHC:\tOtherCryptogram:\tDefinition: Verification of a cryptogram generated by a non-card form factor.\nCode: PASN:\tPassportNumber:\tDefinition: Number assigned by a passport authority to a passport.\nCode: PCDV:\tPostalCode:\tDefinition: Verification based on digits of the postal code.\nCode: SHAF:\tShippingAddressFrom:\tDefinition: Shipping address from verification.\nCode: SHAT:\tShippingAddressTo:\tDefinition: Shipping address to verification\nCode: CHSA:\tCardholderAddress:\tDefinition: Verification whether the address corresponds to the cardholder's one.\nCode: NVSC:\tNonVisibleCSC:\tDefinition: Non visible Card Security Code.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of verification defined at private level\nCode: PLOB:\tPlaceOfBirth:\tDefinition: Place of birth of a person.\nCode: SSNB:\tSocialSecurityNumber:\tDefinition: Number assigned by a social security agency.\nCode: TXIN:\tTaxIdentificationNumber:\tDefinition: Number assigned by a tax authority to an entity.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account-based digital signature authentication.\nCode: ARPC:\tARPCVerification:\tDefinition: Response Card Cryptogram (ARPC)  verification.\nCode: ATCC:\tATC:\tDefinition: Application Transaction Counter\nCode: FBIG:\tOffLineBiographics:\tDefinition: Biographics authentication in an offline mode.\nCode: FBIO:\tOffLineBiometrics:\tDefinition: Biometrics authentication in an offline mode\nCode: OLDA:\tOffLineDataAuthentication:\tDefinition: Authentication of data in an offline mode\nCode: OLDS:\tOffLineDigitisedSignatureAnalysis:\tDefinition: Analysis of signature transmitted offline\nCode: OFPE:\tOffLinePINEncrypted:\tDefinition: PIN generated offline and transmitted encrypted\nCode: FCPN:\tOffLinePINInClear:\tDefinition: PIN generated offline and transmitted in clear\nCode: NBIG:\tOnLineBiographics:\tDefinition: Biographics authentication in an online mode.\nCode: PHOM:\tPhoneHome:\tDefinition: Customer home phone number.\nCode: PWOR:\tPhoneWork:\tDefinition: Customer work phone number\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature\nCode: QWAC:\tQualifiedCertificate:\tDefinition: QualifiedCertificate\nCode: THDS:\tThreeDS:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: CHSN:\tCardholderCertificateSerialNumber:\tDefinition: Serial number of the cardholder's certificate.\nCode: ACSN:\tAcceptorCertificateSerialNumber:\tDefinition: Serial number of the acceptor's certificate.\nCode: NTID:\tNationalIdentifier:\tDefinition: Nationally assigned identifier.",
            "enum": [
                "NPIN",
                "PPSG",
                "PSWD",
                "SCRT",
                "SCNL",
                "SNCT",
                "CPSG",
                "ADDB",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "PSVE",
                "CSEC",
                "ADDS",
                "MANU",
                "FPIN",
                "TOKP"
            ],
            "example": "ADDB"
        },
        "AuthenticationMethod8Code": {
            "type": "string",
            "description": "Method to authenticate the customer or its card.\nCode: UKNW:\tUnknownMethod:\tDefinition: Authentication method is performed unknown.\nCode: BYPS:\tBypass:\tDefinition: Authentication bypassed by the merchant.\nCode: NPIN:\tOnLinePIN:\tDefinition: On-line PIN authentication (Personal Identification Number).\nCode: FPIN:\tOfflinePIN:\tDefinition: Off-line PIN authentication (Personal Identification Number).\nCode: CPSG:\tSignatureCapture:\tDefinition: Electronic signature capture (handwritten signature).\nCode: PPSG:\tPaperSignature:\tDefinition: Handwritten paper signature.\nCode: MANU:\tManualVerification:\tDefinition: Manual verification, for example passport or drivers license.\nCode: MERC:\tMerchantAuthentication:\tDefinition: Merchant-related authentication.\nCode: SCRT:\tSecureCertificate:\tDefinition: Electronic commerce transaction secured with the X.509 certificate of a customer.\nCode: SNCT:\tSecureNoCertificate:\tDefinition: Secure electronic transaction without cardholder certificate.\nCode: SCNL:\tSecuredChannel:\tDefinition: Channel-encrypted transaction.\nCode: PSWD:\tPassword:\tDefinition: Authentication by a password.\nCode: ADDB:\tBillingAddressVerification:\tDefinition: Cardholder billing address verification.\nCode: BIOM:\tBiometry:\tDefinition: Biometric authentication of the cardholder.\nCode: CDHI:\tCardholderIdentificationData:\tDefinition: Cardholder data provided for verification, for instance social security number, driver license number, passport number.\nCode: CRYP:\tCryptogramVerification:\tDefinition: Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\nCode: CSCV:\tCSCVerification:\tDefinition: Verification of Card Security Code.\nCode: PSVE:\tPassiveAuthentication:\tDefinition: Authentication based on statistical cardholder behaviour.\nCode: CSEC:\tSecureElectronicCommerce:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: ADDS:\tShippingAddressVerification:\tDefinition: Cardholder shipping address verification.\nCode: TOKN:\tTokenAuthentication:\tDefinition: Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\nCode: TOKP:\tPaymentToken:\tDefinition: Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\nCode: TOKA:\tAuthenticationToken:\tDefinition: A token is used to verify an already performed authentication.\nCode: MOBL:\tMobile:\tDefinition: Customer mobile device.\nCode: OTHR:\tOther:\tDefinition: Other customer authentication.\nCode: ADVF:\tAddressDigits:\tDefinition: Digits of the address.\nCode: ARNB:\tAlienRegistrationNumber:\tDefinition: Number assigned by a government agency to identify foreign nationals.\nCode: ARQC:\tARQCVerification:\tDefinition: Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\nCode: BTHD:\tBirthDate:\tDefinition: Date of birth of a person.\nCode: CHDN:\tCardholderName:\tDefinition: Name of cardholder\nCode: COFB:\tCityOfBirth:\tDefinition: City of birth to authenticate a person.\nCode: CUID:\tCustomerIdentification:\tDefinition: Customer number used as a mechanism of authentication.\nCode: DRVI:\tDriverIdentification:\tDefinition: Identification of a driver in a fleet of vehicles.\nCode: DRLN:\tDriverLicenseNumber:\tDefinition: Number assigned by a driving license authority to a person driving a car.\nCode: EMAL:\tEmail:\tDefinition: Electronic mail address\nCode: EMIN:\tEmployeeIdentificationNumber:\tDefinition: Number assigned to an employee by an employer.\nCode: EMRN:\tEmployerIdentificationNumber:\tDefinition: Number assigned to an employer by a registration authority.\nCode: IDCN:\tIdentityCardNumber:\tDefinition: Number assigned by a national authority to an identity card.\nCode: OTPW:\tOneTimePassword:\tDefinition: Verification of a one-time password provided by the issuer.\nCode: OCHI:\tOtherCardholderIdentification:\tDefinition: Other cardholder data provided for identification.\nCode: OTHC:\tOtherCryptogram:\tDefinition: Verification of a cryptogram generated by a non-card form factor.\nCode: PASN:\tPassportNumber:\tDefinition: Number assigned by a passport authority to a passport.\nCode: PCDV:\tPostalCode:\tDefinition: Verification based on digits of the postal code.\nCode: SHAF:\tShippingAddressFrom:\tDefinition: Shipping address from verification.\nCode: SHAT:\tShippingAddressTo:\tDefinition: Shipping address to verification\nCode: CHSA:\tCardholderAddress:\tDefinition: Verification whether the address corresponds to the cardholder's one.\nCode: NVSC:\tNonVisibleCSC:\tDefinition: Non visible Card Security Code.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of verification defined at private level\nCode: PLOB:\tPlaceOfBirth:\tDefinition: Place of birth of a person.\nCode: SSNB:\tSocialSecurityNumber:\tDefinition: Number assigned by a social security agency.\nCode: TXIN:\tTaxIdentificationNumber:\tDefinition: Number assigned by a tax authority to an entity.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account-based digital signature authentication.\nCode: ARPC:\tARPCVerification:\tDefinition: Response Card Cryptogram (ARPC)  verification.\nCode: ATCC:\tATC:\tDefinition: Application Transaction Counter\nCode: FBIG:\tOffLineBiographics:\tDefinition: Biographics authentication in an offline mode.\nCode: FBIO:\tOffLineBiometrics:\tDefinition: Biometrics authentication in an offline mode\nCode: OLDA:\tOffLineDataAuthentication:\tDefinition: Authentication of data in an offline mode\nCode: OLDS:\tOffLineDigitisedSignatureAnalysis:\tDefinition: Analysis of signature transmitted offline\nCode: OFPE:\tOffLinePINEncrypted:\tDefinition: PIN generated offline and transmitted encrypted\nCode: FCPN:\tOffLinePINInClear:\tDefinition: PIN generated offline and transmitted in clear\nCode: NBIG:\tOnLineBiographics:\tDefinition: Biographics authentication in an online mode.\nCode: PHOM:\tPhoneHome:\tDefinition: Customer home phone number.\nCode: PWOR:\tPhoneWork:\tDefinition: Customer work phone number\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature\nCode: QWAC:\tQualifiedCertificate:\tDefinition: QualifiedCertificate\nCode: THDS:\tThreeDS:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: CHSN:\tCardholderCertificateSerialNumber:\tDefinition: Serial number of the cardholder's certificate.\nCode: ACSN:\tAcceptorCertificateSerialNumber:\tDefinition: Serial number of the acceptor's certificate.\nCode: NTID:\tNationalIdentifier:\tDefinition: Nationally assigned identifier.",
            "enum": [
                "TOKA",
                "ADDB",
                "BYPS",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "MANU",
                "MERC",
                "MOBL",
                "FPIN",
                "NPIN",
                "OTHR",
                "PPSG",
                "PSVE",
                "PSWD",
                "TOKP",
                "SCRT",
                "SCNL",
                "CSEC",
                "SNCT",
                "ADDS",
                "CPSG",
                "TOKN",
                "UKNW"
            ]
        },
        "AuthenticationResult1Code": {
            "type": "string",
            "description": "Specifies the result of authentication done.\nCode: DENY:\tDenial:\tDefinition: The authentication didn�t succeed.\nCode: CARD:\tNonParticipation:\tDefinition: The card does not participate in the authentication programme.\nCode: AUTH:\tUnableToAuthenticate:\tDefinition: The authentication couldn�t be carried out.\nCode: MRCH:\tMerchantNotEnroled:\tDefinition: Merchant not enrolled in the authentication programme.\nCode: CRPT:\tWithCryptogram:\tDefinition: Authentication succeeded with a cryptogram.\nCode: UCRP:\tWithoutCryptogram:\tDefinition: Authentication succeeded without a cryptogram.",
            "enum": [
                "DENY",
                "MRCH",
                "CARD",
                "AUTH",
                "CRPT",
                "UCRP"
            ]
        },
        "AuthorisationResult18": {
            "description": "Outcome of the authorisation.",
            "properties": {
                "AuthstnCd": {
                    "$ref": "#/$defs/Max8Text"
                },
                "AuthstnNtty": {
                    "$ref": "#/$defs/GenericIdentification90"
                },
                "RspnToAuthstn": {
                    "$ref": "#/$defs/ResponseType10"
                }
            },
            "required": [
                "RspnToAuthstn"
            ],
            "type": "object"
        },
        "BalanceInquiryRequest7": {
            "description": "Specifies data element nexessary to request balance information.",
            "properties": {
                "LltyAcctReq": {
                    "$ref": "#/$defs/LoyaltyAccountRequest3"
                },
                "PmtAcctReq": {
                    "$ref": "#/$defs/PaymentAccountRequest1"
                },
                "SaleTxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "StordValAcctReq": {
                    "$ref": "#/$defs/StoredValueRequest7"
                }
            },
            "type": "object"
        },
        "BarcodeType1Code": {
            "type": "string",
            "description": "Type of BarCode coding.\nCode: EAN8:\tBarcodeEncodedAsEAN8:\tDefinition: Barcode encoded according to the EAN8 standard.\nCode: EA13:\tBarcodeEncodedAsEA13:\tDefinition: Barcode encoded according to the EAN13 standard.\nCode: C039:\tBarcodeEncodedAsCode39:\tDefinition: Barcode encoded according to the Code 39 standard.\nCode: UPCA:\tBarcodeEncodedAsUPCA:\tDefinition: Barcode encoded according to the UPCA standard.\nCode: C025:\tBarcodeEncodedAsCode25:\tDefinition: Barcode encoded according to the Code 25 standard.\nCode: C128:\tBarcodeEncodedAsCode128:\tDefinition: Barcode encoded according to the Code 128 standard.\nCode: P417:\tBarcodeEncodedAsPDF417:\tDefinition: Barcode encoded according to the PDF417 standard.\nCode: COQR:\tBarcodeEncodedAs2DQRCode:\tDefinition: Barcode encoded according to the 2Dimensions Quick Response Code Standard.",
            "enum": [
                "COQR",
                "C128",
                "C025",
                "C039",
                "EA13",
                "EAN8",
                "P417",
                "UPCA"
            ]
        },
        "BaseOneRate": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                }
            ],
            "description": "Rate expressed as a decimal, for example, 0.7 is 7/10 and 70%.",
            "example": "0.60"
        },
        "BatchRequest6": {
            "description": "Data to request a batch service.",
            "properties": {
                "RmvAllFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "SaleBtchId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "TxToPrfrm": {
                    "items": {
                        "$ref": "#/$defs/TransactionToPerform6Choice"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "BBANIdentifier": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[a-zA-Z0-9]{1,30}"
                }
            ],
            "description": "Basic Bank Account Number (BBAN). Identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), which uniquely identifies the account of a customer.",
            "example": "BARC12345612345678"
        },
        "BinRange1": {
            "description": "Specifies a set of cards which shares the same functionalities.",
            "properties": {
                "HghrBin": {
                    "$ref": "#/$defs/Max15NumericText"
                },
                "LwrBin": {
                    "$ref": "#/$defs/Max15NumericText"
                }
            },
            "required": [
                "LwrBin",
                "HghrBin"
            ],
            "type": "object"
        },
        "BusinessArea2Code": {
            "type": "string",
            "description": "Specifies the business context of the transaction\nCode: PPAY:\tPlainPayment:\tDefinition: The card is used to perform a plain payment.\nCode: OPMT:\tOpenpayment:\tDefinition: The card is used in a Transit business case where the fare amount is not known when the transaction is initiated.\nCode: TKNF:\tTransitKnownFare:\tDefinition: The card is used in a Transit business case where the fare amount is known when the transaction is initiated.\nCode: AIBD:\tArtificialIntelligenceBasedDecision:\tDefinition: The payment is initiated by an artificial intelligence based decision.\nCode: EOPT:\tEnergyOpenPayment:\tDefinition: Indicates when the card is used in an energy business case where the amount could not be assessed when the transaction is initiated.\nCode: TOPT:\tTransitOpenPayment:\tDefinition: Indicates when the card is used in a transit business case where the fare amount is not known when the transaction is initiated.",
            "enum": [
                "AIBD",
                "PPAY",
                "TKNF",
                "EOPT",
                "TOPT"
            ]
        },
        "BytePadding1Code": {
            "type": "string",
            "description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit.\nCode: LNGT:\tLengthPadding:\tDefinition: Message to encrypt is completed by a byte value containing the total number of added bytes.\nCode: NUL8:\tNull80Padding:\tDefinition: Message to encrypt is completed by one bit of value 1, followed by null bits until the encryption block length is reached.\nCode: NULG:\tNullLengthPadding:\tDefinition: Message to encrypt is completed by null byte values, the last byte containing the total number of added bytes.\nCode: NULL:\tNullPadding:\tDefinition: Message to encrypt is completed by null bytes.\nCode: RAND:\tRandomPadding:\tDefinition: Message to encrypt is completed by random value, the last byte containing the total number of added bytes.",
            "enum": [
                "LNGT",
                "NUL8",
                "NULG",
                "NULL",
                "RAND"
            ]
        },
        "CardAccountType3Code": {
            "type": "string",
            "description": "Type of cardholder account used for the transaction.\nCode: DFLT:\tDefault:\tDefinition: Default account.\nCode: SVNG:\tSavings:\tDefinition: Savings account.\nCode: CHCK:\tChecking:\tDefinition: Checking account.\nCode: CRDT:\tCreditCard:\tDefinition: Credit card account.\nCode: UVRL:\tUniversal:\tDefinition: Universal account.\nCode: INVS:\tInvestment:\tDefinition: Investment account.\nCode: EPRS:\tEpurseCard:\tDefinition: Electronic purse card account.\nCode: CTDP:\tCertificateOfDeposit:\tDefinition: Certificate of deposit saving account.\nCode: CURR:\tCurrent:\tDefinition: Current account.\nCode: CDBT:\tDebitCard:\tDefinition: Debit card account.\nCode: HEQL:\tHomeEquityLoan:\tDefinition: Home equity loan credit account.\nCode: ISTL:\tInstalmentLoan:\tDefinition: Instalment loan credit account.\nCode: LCDT:\tLineOfCredit:\tDefinition: Line of credit account.\nCode: MBNW:\tMobilePhoneAccount:\tDefinition: Mobile Station Integrated Services Digital Network Number (MSISDN).\nCode: MNMK:\tMoneyMarket:\tDefinition: Money market saving account.\nCode: MNMC:\tMoneyMarketChecking:\tDefinition: Money market checking account.\nCode: MTGL:\tMortgageLoan:\tDefinition: Mortgage loan credit account.\nCode: RTRM:\tRetirementAccount:\tDefinition: Retirement account.\nCode: RVLV:\tRevolvingLoanAccount:\tDefinition: Revolving loan account.\nCode: STBD:\tStockOrBond:\tDefinition: Stock or bond investment account.\nCode: PRPD:\tPrePaid:\tDefinition: Pre-paid account.\nCode: FLTC:\tFleetCard:\tDefinition: Fleet card account.\nCode: CASH:\tCash:\tDefinition: Cash as a source type  to perform the transaction.\nCode: DBAC:\tDebitAccount:\tDefinition: Account for debiting funds.\nCode: CRAC:\tCreditAccount:\tDefinition: Account for crediting funds.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of account defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of account defined at private level.\nCode: BENE:\tBenefit:\tDefinition: Benefit account type",
            "enum": [
                "CTDP",
                "CHCK",
                "CRDT",
                "CURR",
                "CDBT",
                "DFLT",
                "EPRS",
                "HEQL",
                "ISTL",
                "INVS",
                "LCDT",
                "MBNW",
                "MNMK",
                "MNMC",
                "MTGL",
                "RTRM",
                "RVLV",
                "SVNG",
                "STBD",
                "UVRL",
                "PRPD",
                "FLTC"
            ]
        },
        "CardAcquisitionRequest3": {
            "description": "Data to request to card data acquisition.",
            "properties": {
                "AllwdLltyBrnd": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "AllwdPmtBrnd": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CshBckFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "ForceCstmrSelctnFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "PmtTp": {
                    "$ref": "#/$defs/CardPaymentServiceType13Code"
                },
                "SaleToAcqrrData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SaleToIssrData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SaleToPOIData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SaleTxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "TtlAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                }
            },
            "type": "object"
        },
        "CardDataReading5Code": {
            "type": "string",
            "description": "Type of reading of the card data.\nCode: TAGC:\tTag:\tDefinition: Tag reading capabilities (RFID, etc.).\nCode: PHYS:\tPhysical:\tDefinition: Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.\nCode: BRCD:\tBarCode:\tDefinition: Bar code.\nCode: MGST:\tMagneticStripe:\tDefinition: Magnetic stripe.\nCode: CICC:\tICC:\tDefinition: ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.\nCode: DFLE:\tAccountData:\tDefinition: Account data on file.\nCode: CTLS:\tProximityReader:\tDefinition: Contactless proximity reader.\nCode: ECTL:\tEMVProximityReader:\tDefinition: Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).\nCode: CDFL:\tCardOnFile:\tDefinition: Card information are stored on a file.\nCode: UNKW:\tUnknown:\tDefinition: Unknown card reading capability.\nCode: SICC:\tSynchronousIntegratedCircuitCard:\tDefinition: Synchronous ICC - (Integrated Circuit Card) with contact.\nCode: ICCY:\tICCContact:\tDefinition: ICC contact capability\nCode: ICPY:\tICCProximity:\tDefinition: ICC contactless proximity\nCode: MICR:\tMagneticInkCharacterRecognition:\tDefinition: Recognition of magnetic ink characters\nCode: MLEY:\tManualEntry:\tDefinition: Manual, no terminal used.\nCode: MSIP:\tMSIProximity:\tDefinition: Magstripe image contactless proximity\nCode: OCRR:\tOpticalCharacterRecognition:\tDefinition: OCR either at time of transaction or after the event.\nCode: OPTC:\tOpticalCode:\tDefinition: Optical coded reading capabilities (e.g. barcode, QR code, etc.)\nCode: OTHN:\tOtherNational:\tDefinition: Other national capability type assigned at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card reading capability assigned on a private basis.\nCode: RFID:\tRFIDTag:\tDefinition: Radio Frequency Identification tag capabilities.\nCode: UNSP:\tUnspecified:\tDefinition: Unspecified capability.\nCode: KEEN:\tKeyEntered:\tDefinition: Key entered.\nCode: QRCD:\tQRCode:\tDefinition: Quick response code.\nCode: CAMR:\tCamera:\tDefinition: Card details captured via camera.\nCode: MBNK:\tMobileBankingApplication:\tDefinition: Card details were obtained via a mobile banking application.\nCode: TOKN:\tToken:\tDefinition: Card details were obtained via a token.",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL"
            ],
            "example": "TAGC"
        },
        "CardDataReading8Code": {
            "type": "string",
            "description": "Type of reading of the card data.\nCode: TAGC:\tTag:\tDefinition: Tag reading capabilities (RFID, etc.).\nCode: PHYS:\tPhysical:\tDefinition: Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.\nCode: BRCD:\tBarCode:\tDefinition: Bar code.\nCode: MGST:\tMagneticStripe:\tDefinition: Magnetic stripe.\nCode: CICC:\tICC:\tDefinition: ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.\nCode: DFLE:\tAccountData:\tDefinition: Account data on file.\nCode: CTLS:\tProximityReader:\tDefinition: Contactless proximity reader.\nCode: ECTL:\tEMVProximityReader:\tDefinition: Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).\nCode: CDFL:\tCardOnFile:\tDefinition: Card information are stored on a file.\nCode: UNKW:\tUnknown:\tDefinition: Unknown card reading capability.\nCode: SICC:\tSynchronousIntegratedCircuitCard:\tDefinition: Synchronous ICC - (Integrated Circuit Card) with contact.\nCode: ICCY:\tICCContact:\tDefinition: ICC contact capability\nCode: ICPY:\tICCProximity:\tDefinition: ICC contactless proximity\nCode: MICR:\tMagneticInkCharacterRecognition:\tDefinition: Recognition of magnetic ink characters\nCode: MLEY:\tManualEntry:\tDefinition: Manual, no terminal used.\nCode: MSIP:\tMSIProximity:\tDefinition: Magstripe image contactless proximity\nCode: OCRR:\tOpticalCharacterRecognition:\tDefinition: OCR either at time of transaction or after the event.\nCode: OPTC:\tOpticalCode:\tDefinition: Optical coded reading capabilities (e.g. barcode, QR code, etc.)\nCode: OTHN:\tOtherNational:\tDefinition: Other national capability type assigned at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card reading capability assigned on a private basis.\nCode: RFID:\tRFIDTag:\tDefinition: Radio Frequency Identification tag capabilities.\nCode: UNSP:\tUnspecified:\tDefinition: Unspecified capability.\nCode: KEEN:\tKeyEntered:\tDefinition: Key entered.\nCode: QRCD:\tQRCode:\tDefinition: Quick response code.\nCode: CAMR:\tCamera:\tDefinition: Card details captured via camera.\nCode: MBNK:\tMobileBankingApplication:\tDefinition: Card details were obtained via a mobile banking application.\nCode: TOKN:\tToken:\tDefinition: Card details were obtained via a token.",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL",
                "SICC",
                "UNKW",
                "QRCD",
                "OPTC"
            ],
            "example": "TAGC"
        },
        "CardDirectDebit2": {
            "description": "Element containing all information needed for a card initiating direct debit.",
            "properties": {
                "CdtrId": {
                    "$ref": "#/$defs/Creditor4"
                },
                "DbtrId": {
                    "$ref": "#/$defs/Debtor4"
                },
                "MndtRltdInf": {
                    "$ref": "#/$defs/MandateRelatedInformation13"
                }
            },
            "required": [
                "CdtrId",
                "MndtRltdInf"
            ],
            "type": "object"
        },
        "CardFallback1Code": {
            "type": "string",
            "description": "Information about card entry mode fallback.\nCode: NFLB:\tNoFallback:\tDefinition: No card fall-back during the transaction in progress.\nCode: SFLB:\tFallbackAfterSuccess:\tDefinition: Card fall-back occurred during the transaction in progress. The previous transaction on the terminal was successful.\nCode: FFLB:\tFallbackAfterFailure:\tDefinition: Card fall-back occurred during the transaction in progress. The previous transaction on the terminal failed.",
            "enum": [
                "FFLB",
                "SFLB",
                "NFLB"
            ]
        },
        "Cardholder21": {
            "description": "Data related to the cardholder.",
            "properties": {
                "Authntcn": {
                    "items": {
                        "$ref": "#/$defs/CardholderAuthentication17"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "BllgAdr": {
                    "$ref": "#/$defs/PostalAddress22"
                },
                "Id": {
                    "$ref": "#/$defs/PersonIdentification15"
                },
                "Lang": {
                    "$ref": "#/$defs/LanguageCode"
                },
                "MobData": {
                    "items": {
                        "$ref": "#/$defs/MobileData6"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Nm": {
                    "$ref": "#/$defs/Max45Text"
                },
                "PrsnlData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "ShppgAdr": {
                    "$ref": "#/$defs/PostalAddress22"
                },
                "TripNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TxVrfctnRslt": {
                    "items": {
                        "$ref": "#/$defs/TransactionVerificationResult4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Vhcl": {
                    "$ref": "#/$defs/Vehicle1"
                }
            },
            "type": "object"
        },
        "CardholderAuthentication17": {
            "description": "Data related to the authentication of the cardholder.",
            "properties": {
                "AdrVrfctn": {
                    "$ref": "#/$defs/AddressVerification1"
                },
                "AuthntcnAddtlInf": {
                    "$ref": "#/$defs/ExternallyDefinedData5"
                },
                "AuthntcnLvl": {
                    "$ref": "#/$defs/Max35Text"
                },
                "AuthntcnMtd": {
                    "$ref": "#/$defs/AuthenticationMethod8Code"
                },
                "AuthntcnRslt": {
                    "$ref": "#/$defs/AuthenticationResult1Code"
                },
                "AuthntcnTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "AuthntcnVal": {
                    "$ref": "#/$defs/Max5000Binary"
                },
                "AuthntcnXmptn": {
                    "$ref": "#/$defs/Exemption1Code"
                },
                "CrdhldrId": {
                    "$ref": "#/$defs/PersonIdentification15"
                },
                "CrdhldrOnLinePIN": {
                    "$ref": "#/$defs/OnLinePIN11"
                },
                "PrtctdAuthntcnVal": {
                    "$ref": "#/$defs/ContentInformationType40"
                }
            },
            "type": "object"
        },
        "CardholderVerificationCapability4Code": {
            "type": "string",
            "description": "Cardholder verification capabilities by the terminal.\nCode: MNSG:\tManualSignature:\tDefinition: Manual signature verification.\nCode: NPIN:\tOnLinePIN:\tDefinition: Online PIN (Personal Identification Number).\nCode: FCPN:\tOfflinePINClear:\tDefinition: Offline PIN in clear (Personal Identification Number).\nCode: FEPN:\tOfflinePINEncrypted:\tDefinition: Offline PIN encrypted (Personal Identification Number).\nCode: FDSG:\tOfflineDigitalSignature:\tDefinition: Offline digital signature analysis.\nCode: FBIO:\tOfflineBiometrics:\tDefinition: Offline biometrics.\nCode: MNVR:\tManualVerification:\tDefinition: Other manual verification, for example passport or drivers license.\nCode: FBIG:\tOfflineBiographics:\tDefinition: Offline biographics.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account based digital signature.\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature.\nCode: CHDT:\tCardholderData:\tDefinition: Cardholder authentication data.\nCode: SCEC:\tSecureElectronicCommerce:\tDefinition: Three domain secure (three domain secure authentication of the cardholder).\nCode: UNKW:\tUnknown:\tDefinition: Unknown cardholder verification capability.\nCode: PCOD:\tPersonalCode:\tDefinition: Personal code of the customer for banking services.\nCode: NOVF:\tNoCapabilities:\tDefinition: No cardholder verification capability.\nCode: NBIO:\tOnLineBiometrics:\tDefinition: Online biometrics.\nCode: OTHR:\tOther:\tDefinition: Other cardholder verification capabilities.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of cardholder verification defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of cardholder verification defined in a private manner.\nCode: SIGN:\tSignature:\tDefinition: Handwritten signature verification\nCode: UNSP:\tUnspecified:\tDefinition: Cardholder verification capability unspecified.\nCode: VORN:\tVoiceRecognition:\tDefinition: Recognition by voice.\nCode: NOPN:\tNoPINEntry:\tDefinition: Device has no pin entry capability.\nCode: NOOP:\tNoOnLinePINEntry:\tDefinition: Device has no online pin entry capability.",
            "enum": [
                "APKI",
                "CHDT",
                "MNSG",
                "MNVR",
                "FBIG",
                "FBIO",
                "FDSG",
                "FCPN",
                "FEPN",
                "NPIN",
                "PKIS",
                "SCEC",
                "NBIO",
                "NOVF",
                "OTHR"
            ]
        },
        "CardIdentificationType1Code": {
            "type": "string",
            "description": "Type of account identification.\nCode: CPAN:\tPrimaryAccountNumber:\tDefinition: Standard card identification (card number).\nCode: ISO2:\tISOTrack2:\tDefinition: ISO Track 2 including identification.\nCode: BARC:\tBarCode:\tDefinition: Bar-code with a specific form of identification.\nCode: ACCT:\tAccountNumber:\tDefinition: Account identification.\nCode: PHON:\tPhoneNumber:\tDefinition: A phone number identifies the account on which the phone card is assigned.\nCode: UUID:\tUniversalUniqueIdentification:\tDefinition: A Universal Unique Identification code is set for identification.\nCode: PRIV:\tPrivativeNumbering:\tDefinition: An identification set by a privative application.",
            "enum": [
                "ACCT",
                "BARC",
                "ISO2",
                "PHON",
                "CPAN",
                "PRIV",
                "UUID"
            ]
        },
        "CardPaymentContext30": {
            "description": "Context in which the transaction is performed (payment and sale).",
            "properties": {
                "DrctDbtCntxt": {
                    "$ref": "#/$defs/CardDirectDebit2"
                },
                "PmtCntxt": {
                    "$ref": "#/$defs/PaymentContext29"
                },
                "SaleCntxt": {
                    "$ref": "#/$defs/SaleContext4"
                }
            },
            "type": "object"
        },
        "CardPaymentEnvironment80": {
            "description": "Environment of the transaction.",
            "properties": {
                "Acqrr": {
                    "$ref": "#/$defs/Acquirer10"
                },
                "Card": {
                    "$ref": "#/$defs/PaymentCard35"
                },
                "Chck": {
                    "$ref": "#/$defs/Check1"
                },
                "Crdhldr": {
                    "$ref": "#/$defs/Cardholder21"
                },
                "CstmrDvc": {
                    "$ref": "#/$defs/CustomerDevice3"
                },
                "LltyAcct": {
                    "items": {
                        "$ref": "#/$defs/LoyaltyAccount3"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Mrchnt": {
                    "$ref": "#/$defs/Organisation41"
                },
                "MrchntTkn": {
                    "$ref": "#/$defs/MerchantToken2"
                },
                "PmtTkn": {
                    "$ref": "#/$defs/Token1"
                },
                "POI": {
                    "$ref": "#/$defs/PointOfInteraction14"
                },
                "PrtctdCrdhldrData": {
                    "$ref": "#/$defs/ContentInformationType40"
                },
                "SaleEnvt": {
                    "$ref": "#/$defs/RetailerSaleEnvironment2"
                },
                "StordValAcct": {
                    "items": {
                        "$ref": "#/$defs/StoredValueAccount2"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SvcPrvdr": {
                    "$ref": "#/$defs/Acquirer10"
                },
                "Wllt": {
                    "$ref": "#/$defs/CustomerDevice3"
                }
            },
            "type": "object"
        },
        "CardPaymentServiceType13Code": {
            "type": "string",
            "description": "Additional attribute of the service type.\nCode: CAFT:\tCardsFundTransfer:\tDefinition: Transfer of funds to and/or from a card account.\nCode: ORCR:\tOriginalCredit:\tDefinition: Original credit.\nCode: CRDP:\tCardPayment:\tDefinition: Card payment.\nCode: CSHB:\tCashBack:\tDefinition: Card payment with cash-back.\nCode: CSHW:\tCashAdvance:\tDefinition: Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.\nCode: CSHD:\tCashDeposit:\tDefinition: Cash deposit.\nCode: DEFR:\tDeferredPayment:\tDefinition: Deferred payment.\nCode: RESA:\tReservation:\tDefinition: Reservation (pre-authorisation).\nCode: LOAD:\tLoading:\tDefinition: Loading or reloading non-financial account.\nCode: RFND:\tRefund:\tDefinition: Refund transaction.\nCode: QUCH:\tQuasiCash:\tDefinition: Quasi-cash.\nCode: BALC:\tBalance:\tDefinition: Balance enquiry.\nCode: CACT:\tCardActivation:\tDefinition: Card activation.\nCode: CAVR:\tCardVerification:\tDefinition: Card verification.\nCode: PINC:\tPINChange:\tDefinition: PIN (Personal Identification Number) change.\nCode: VALC:\tValidityCheck:\tDefinition: Card validity check.\nCode: AGGR:\tAggregation:\tDefinition: Aggregation of low payments.\nCode: DCCV:\tDCC:\tDefinition: Dynamic currency conversion (DCC).\nCode: GRTT:\tGratuity:\tDefinition: Card payment with gratuity.\nCode: INSP:\tInstalment:\tDefinition: Instalment payment.\nCode: LOYT:\tLoyalty:\tDefinition: Loyalty services.\nCode: NRES:\tNoShow:\tDefinition: No show after reservation.\nCode: PUCO:\tPurchaseCorporate:\tDefinition: Purchase and corporate data.\nCode: RECP:\tRecurringPayment:\tDefinition: Recurring payment.\nCode: SOAF:\tSolicitedAvailableFunds:\tDefinition: Solicited available funds.\nCode: UNAF:\tUnsolicitedAvailableFunds:\tDefinition: Unsolicited available funds.\nCode: VCAU:\tVoiceAuthorisation:\tDefinition: Voice authorisation.\nCode: IRES:\tInitialReservation:\tDefinition: Initial reservation.\nCode: URES:\tUpdateReservation:\tDefinition: Update reservation.\nCode: PRES:\tPaymentReservation:\tDefinition: Payment after reservation.\nCode: ARES:\tAdditionalPayment:\tDefinition: Additional payment after reservation.\nCode: FREC:\tFirstRecurring:\tDefinition: Initial recurring payment.\nCode: RREC:\tFollowingRecurring:\tDefinition: Repeat recurring payment.\nCode: TP2B:\tPersonToBusiness:\tDefinition: Card payment transaction transfer from person to business.\nCode: TP2P:\tPersonToPerson:\tDefinition: Card payment transaction transfer from person to person.\nCode: INSA:\tAcceptorInstalment:\tDefinition: Instalment payment transaction performed by the acceptor or the acquirer.\nCode: INSI:\tIssuerInstalment:\tDefinition: Instalment payment transaction performed by the card issuer.\nCode: UNLD:\tUnloading:\tDefinition: Unloading non-financial account.\nCode: CAFH:\tCardsFundTransferPush:\tDefinition: Transfer of funds to a card or an account.\nCode: CAFL:\tCardsFundTransferPull:\tDefinition: Transfer of funds from a card or an account.\nCode: CHWD:\tCashWithdrawal:\tDefinition: Withdrawal of cash on an ATM.\nCode: PINU:\tPINUnblock:\tDefinition: Unblock the cardholder PIN.\nCode: CSWD:\tChosenWithdrawal:\tDefinition: Amount and notes values are chosen by the customer.\nCode: AUWS:\tPreAuthorisedWithdrawal:\tDefinition: Withdrawal transaction was pre-authorised by another channel (amount could be absent).\nCode: PFWD:\tProfileWithdrawal:\tDefinition: Amount and Notes Values are pre-defined by the customer profile.\nCode: SDWD:\tStandardWithdrawal:\tDefinition: Customer pressed a button associated with a withdrawal of unique amount and notes mix.\nCode: TFBL:\tTransferCardBillPayment:\tDefinition: Transfer for payment of bills.\nCode: TFCS:\tTransferFromCash:\tDefinition: Transfer from cash deposit.\nCode: TFCH:\tTransferFromCheque:\tDefinition: Transfer from cheque deposit.\nCode: TFDB:\tTransferFundsDisbursementGeneral:\tDefinition: Transfer for general disbursement.\nCode: TFGD:\tTransferGovernmentDisbursement:\tDefinition: Transfer for government disbursement.\nCode: TFMD:\tTransferMerchantDisbursement:\tDefinition: Transfer for merchant disbursement.\nCode: TFPD:\tTransferPayrollPensionDisbursement:\tDefinition: Transfer for payroll pension disbursement.\nCode: NRFD:\tNonRefundable:\tDefinition: Payment of goods or services which are not refundable, for instance low cost airline tickets.\nCode: INST:\tInstant:\tDefinition: Instant transaction.\nCode: CADJ:\tCreditAdjustement:\tDefinition: Credit adjustment to a previous transaction.\nCode: DADJ:\tDebitAdjustement:\tDefinition: Debit adjustment to a previous transaction.\nCode: CRTC:\tCreateCertificate:\tDefinition: Creation of an X.509 certificate with the public key and the information of the owner of the asymmetric key provided by the requestor.\nCode: CRTR:\tRenewCerificate:\tDefinition: Renewal of an X.509 certificate, protected by the certificate to renew.\nCode: CRTK:\tRevokeCertificate:\tDefinition: Revocation of an active X.509 certificate.\nCode: WLSA:\tAddWhiteList:\tDefinition: Add a POI in the white list of the terminal manager.\nCode: WLSR:\tRemoveWhiteList:\tDefinition: Remove a POI from the white list of the terminal manager.\nCode: CIDD:\tCardInitiatingDirectDebit:\tDefinition: Direct Debit initiated by Card.\nCode: GOPT:\tGuaranteeOfPayment:\tDefinition: Acceptor claims for guarantee of payment.",
            "enum": [
                "CRDP",
                "CSHW",
                "CSHD",
                "IRES",
                "DEFR",
                "URES",
                "PRES",
                "RECP",
                "INSP",
                "INSI",
                "RFND",
                "VCAU"
            ]
        },
        "CardPaymentServiceType14Code": {
            "type": "string",
            "description": "Additional attributes of the service provided by the card payment transaction.\nCode: CAFT:\tCardsFundTransfer:\tDefinition: Transfer of funds to and/or from a card account.\nCode: ORCR:\tOriginalCredit:\tDefinition: Original credit.\nCode: CRDP:\tCardPayment:\tDefinition: Card payment.\nCode: CSHB:\tCashBack:\tDefinition: Card payment with cash-back.\nCode: CSHW:\tCashAdvance:\tDefinition: Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.\nCode: CSHD:\tCashDeposit:\tDefinition: Cash deposit.\nCode: DEFR:\tDeferredPayment:\tDefinition: Deferred payment.\nCode: RESA:\tReservation:\tDefinition: Reservation (pre-authorisation).\nCode: LOAD:\tLoading:\tDefinition: Loading or reloading non-financial account.\nCode: RFND:\tRefund:\tDefinition: Refund transaction.\nCode: QUCH:\tQuasiCash:\tDefinition: Quasi-cash.\nCode: BALC:\tBalance:\tDefinition: Balance enquiry.\nCode: CACT:\tCardActivation:\tDefinition: Card activation.\nCode: CAVR:\tCardVerification:\tDefinition: Card verification.\nCode: PINC:\tPINChange:\tDefinition: PIN (Personal Identification Number) change.\nCode: VALC:\tValidityCheck:\tDefinition: Card validity check.\nCode: AGGR:\tAggregation:\tDefinition: Aggregation of low payments.\nCode: DCCV:\tDCC:\tDefinition: Dynamic currency conversion (DCC).\nCode: GRTT:\tGratuity:\tDefinition: Card payment with gratuity.\nCode: INSP:\tInstalment:\tDefinition: Instalment payment.\nCode: LOYT:\tLoyalty:\tDefinition: Loyalty services.\nCode: NRES:\tNoShow:\tDefinition: No show after reservation.\nCode: PUCO:\tPurchaseCorporate:\tDefinition: Purchase and corporate data.\nCode: RECP:\tRecurringPayment:\tDefinition: Recurring payment.\nCode: SOAF:\tSolicitedAvailableFunds:\tDefinition: Solicited available funds.\nCode: UNAF:\tUnsolicitedAvailableFunds:\tDefinition: Unsolicited available funds.\nCode: VCAU:\tVoiceAuthorisation:\tDefinition: Voice authorisation.\nCode: IRES:\tInitialReservation:\tDefinition: Initial reservation.\nCode: URES:\tUpdateReservation:\tDefinition: Update reservation.\nCode: PRES:\tPaymentReservation:\tDefinition: Payment after reservation.\nCode: ARES:\tAdditionalPayment:\tDefinition: Additional payment after reservation.\nCode: FREC:\tFirstRecurring:\tDefinition: Initial recurring payment.\nCode: RREC:\tFollowingRecurring:\tDefinition: Repeat recurring payment.\nCode: TP2B:\tPersonToBusiness:\tDefinition: Card payment transaction transfer from person to business.\nCode: TP2P:\tPersonToPerson:\tDefinition: Card payment transaction transfer from person to person.\nCode: INSA:\tAcceptorInstalment:\tDefinition: Instalment payment transaction performed by the acceptor or the acquirer.\nCode: INSI:\tIssuerInstalment:\tDefinition: Instalment payment transaction performed by the card issuer.\nCode: UNLD:\tUnloading:\tDefinition: Unloading non-financial account.\nCode: CAFH:\tCardsFundTransferPush:\tDefinition: Transfer of funds to a card or an account.\nCode: CAFL:\tCardsFundTransferPull:\tDefinition: Transfer of funds from a card or an account.\nCode: CHWD:\tCashWithdrawal:\tDefinition: Withdrawal of cash on an ATM.\nCode: PINU:\tPINUnblock:\tDefinition: Unblock the cardholder PIN.\nCode: CSWD:\tChosenWithdrawal:\tDefinition: Amount and notes values are chosen by the customer.\nCode: AUWS:\tPreAuthorisedWithdrawal:\tDefinition: Withdrawal transaction was pre-authorised by another channel (amount could be absent).\nCode: PFWD:\tProfileWithdrawal:\tDefinition: Amount and Notes Values are pre-defined by the customer profile.\nCode: SDWD:\tStandardWithdrawal:\tDefinition: Customer pressed a button associated with a withdrawal of unique amount and notes mix.\nCode: TFBL:\tTransferCardBillPayment:\tDefinition: Transfer for payment of bills.\nCode: TFCS:\tTransferFromCash:\tDefinition: Transfer from cash deposit.\nCode: TFCH:\tTransferFromCheque:\tDefinition: Transfer from cheque deposit.\nCode: TFDB:\tTransferFundsDisbursementGeneral:\tDefinition: Transfer for general disbursement.\nCode: TFGD:\tTransferGovernmentDisbursement:\tDefinition: Transfer for government disbursement.\nCode: TFMD:\tTransferMerchantDisbursement:\tDefinition: Transfer for merchant disbursement.\nCode: TFPD:\tTransferPayrollPensionDisbursement:\tDefinition: Transfer for payroll pension disbursement.\nCode: NRFD:\tNonRefundable:\tDefinition: Payment of goods or services which are not refundable, for instance low cost airline tickets.\nCode: INST:\tInstant:\tDefinition: Instant transaction.\nCode: CADJ:\tCreditAdjustement:\tDefinition: Credit adjustment to a previous transaction.\nCode: DADJ:\tDebitAdjustement:\tDefinition: Debit adjustment to a previous transaction.\nCode: CRTC:\tCreateCertificate:\tDefinition: Creation of an X.509 certificate with the public key and the information of the owner of the asymmetric key provided by the requestor.\nCode: CRTR:\tRenewCerificate:\tDefinition: Renewal of an X.509 certificate, protected by the certificate to renew.\nCode: CRTK:\tRevokeCertificate:\tDefinition: Revocation of an active X.509 certificate.\nCode: WLSA:\tAddWhiteList:\tDefinition: Add a POI in the white list of the terminal manager.\nCode: WLSR:\tRemoveWhiteList:\tDefinition: Remove a POI from the white list of the terminal manager.\nCode: CIDD:\tCardInitiatingDirectDebit:\tDefinition: Direct Debit initiated by Card.\nCode: GOPT:\tGuaranteeOfPayment:\tDefinition: Acceptor claims for guarantee of payment.",
            "enum": [
                "IRES",
                "URES",
                "PRES",
                "ARES",
                "FREC",
                "RREC",
                "GOPT"
            ],
            "example": "IRES"
        },
        "CardPaymentServiceType5Code": {
            "type": "string",
            "description": "Main service provided during the card payment transaction.\nCode: CAFT:\tCardsFundTransfer:\tDefinition: Transfer of funds to and/or from a card account.\nCode: ORCR:\tOriginalCredit:\tDefinition: Original credit.\nCode: CRDP:\tCardPayment:\tDefinition: Card payment.\nCode: CSHB:\tCashBack:\tDefinition: Card payment with cash-back.\nCode: CSHW:\tCashAdvance:\tDefinition: Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.\nCode: CSHD:\tCashDeposit:\tDefinition: Cash deposit.\nCode: DEFR:\tDeferredPayment:\tDefinition: Deferred payment.\nCode: RESA:\tReservation:\tDefinition: Reservation (pre-authorisation).\nCode: LOAD:\tLoading:\tDefinition: Loading or reloading non-financial account.\nCode: RFND:\tRefund:\tDefinition: Refund transaction.\nCode: QUCH:\tQuasiCash:\tDefinition: Quasi-cash.\nCode: BALC:\tBalance:\tDefinition: Balance enquiry.\nCode: CACT:\tCardActivation:\tDefinition: Card activation.\nCode: CAVR:\tCardVerification:\tDefinition: Card verification.\nCode: PINC:\tPINChange:\tDefinition: PIN (Personal Identification Number) change.\nCode: VALC:\tValidityCheck:\tDefinition: Card validity check.\nCode: AGGR:\tAggregation:\tDefinition: Aggregation of low payments.\nCode: DCCV:\tDCC:\tDefinition: Dynamic currency conversion (DCC).\nCode: GRTT:\tGratuity:\tDefinition: Card payment with gratuity.\nCode: INSP:\tInstalment:\tDefinition: Instalment payment.\nCode: LOYT:\tLoyalty:\tDefinition: Loyalty services.\nCode: NRES:\tNoShow:\tDefinition: No show after reservation.\nCode: PUCO:\tPurchaseCorporate:\tDefinition: Purchase and corporate data.\nCode: RECP:\tRecurringPayment:\tDefinition: Recurring payment.\nCode: SOAF:\tSolicitedAvailableFunds:\tDefinition: Solicited available funds.\nCode: UNAF:\tUnsolicitedAvailableFunds:\tDefinition: Unsolicited available funds.\nCode: VCAU:\tVoiceAuthorisation:\tDefinition: Voice authorisation.\nCode: IRES:\tInitialReservation:\tDefinition: Initial reservation.\nCode: URES:\tUpdateReservation:\tDefinition: Update reservation.\nCode: PRES:\tPaymentReservation:\tDefinition: Payment after reservation.\nCode: ARES:\tAdditionalPayment:\tDefinition: Additional payment after reservation.\nCode: FREC:\tFirstRecurring:\tDefinition: Initial recurring payment.\nCode: RREC:\tFollowingRecurring:\tDefinition: Repeat recurring payment.\nCode: TP2B:\tPersonToBusiness:\tDefinition: Card payment transaction transfer from person to business.\nCode: TP2P:\tPersonToPerson:\tDefinition: Card payment transaction transfer from person to person.\nCode: INSA:\tAcceptorInstalment:\tDefinition: Instalment payment transaction performed by the acceptor or the acquirer.\nCode: INSI:\tIssuerInstalment:\tDefinition: Instalment payment transaction performed by the card issuer.\nCode: UNLD:\tUnloading:\tDefinition: Unloading non-financial account.\nCode: CAFH:\tCardsFundTransferPush:\tDefinition: Transfer of funds to a card or an account.\nCode: CAFL:\tCardsFundTransferPull:\tDefinition: Transfer of funds from a card or an account.\nCode: CHWD:\tCashWithdrawal:\tDefinition: Withdrawal of cash on an ATM.\nCode: PINU:\tPINUnblock:\tDefinition: Unblock the cardholder PIN.\nCode: CSWD:\tChosenWithdrawal:\tDefinition: Amount and notes values are chosen by the customer.\nCode: AUWS:\tPreAuthorisedWithdrawal:\tDefinition: Withdrawal transaction was pre-authorised by another channel (amount could be absent).\nCode: PFWD:\tProfileWithdrawal:\tDefinition: Amount and Notes Values are pre-defined by the customer profile.\nCode: SDWD:\tStandardWithdrawal:\tDefinition: Customer pressed a button associated with a withdrawal of unique amount and notes mix.\nCode: TFBL:\tTransferCardBillPayment:\tDefinition: Transfer for payment of bills.\nCode: TFCS:\tTransferFromCash:\tDefinition: Transfer from cash deposit.\nCode: TFCH:\tTransferFromCheque:\tDefinition: Transfer from cheque deposit.\nCode: TFDB:\tTransferFundsDisbursementGeneral:\tDefinition: Transfer for general disbursement.\nCode: TFGD:\tTransferGovernmentDisbursement:\tDefinition: Transfer for government disbursement.\nCode: TFMD:\tTransferMerchantDisbursement:\tDefinition: Transfer for merchant disbursement.\nCode: TFPD:\tTransferPayrollPensionDisbursement:\tDefinition: Transfer for payroll pension disbursement.\nCode: NRFD:\tNonRefundable:\tDefinition: Payment of goods or services which are not refundable, for instance low cost airline tickets.\nCode: INST:\tInstant:\tDefinition: Instant transaction.\nCode: CADJ:\tCreditAdjustement:\tDefinition: Credit adjustment to a previous transaction.\nCode: DADJ:\tDebitAdjustement:\tDefinition: Debit adjustment to a previous transaction.\nCode: CRTC:\tCreateCertificate:\tDefinition: Creation of an X.509 certificate with the public key and the information of the owner of the asymmetric key provided by the requestor.\nCode: CRTR:\tRenewCerificate:\tDefinition: Renewal of an X.509 certificate, protected by the certificate to renew.\nCode: CRTK:\tRevokeCertificate:\tDefinition: Revocation of an active X.509 certificate.\nCode: WLSA:\tAddWhiteList:\tDefinition: Add a POI in the white list of the terminal manager.\nCode: WLSR:\tRemoveWhiteList:\tDefinition: Remove a POI from the white list of the terminal manager.\nCode: CIDD:\tCardInitiatingDirectDebit:\tDefinition: Direct Debit initiated by Card.\nCode: GOPT:\tGuaranteeOfPayment:\tDefinition: Acceptor claims for guarantee of payment.",
            "enum": [
                "BALC",
                "CACT",
                "CRDP",
                "CAFH",
                "CAVR",
                "CSHW",
                "CSHD",
                "DEFR",
                "LOAD",
                "ORCR",
                "PINC",
                "QUCH",
                "RFND",
                "RESA",
                "VALC",
                "UNLD",
                "CAFT",
                "CAFL"
            ],
            "example": "CRDP"
        },
        "CardPaymentServiceType9Code": {
            "type": "string",
            "description": "Service provided by the card payment transaction, in addition to the main service.\nCode: CAFT:\tCardsFundTransfer:\tDefinition: Transfer of funds to and/or from a card account.\nCode: ORCR:\tOriginalCredit:\tDefinition: Original credit.\nCode: CRDP:\tCardPayment:\tDefinition: Card payment.\nCode: CSHB:\tCashBack:\tDefinition: Card payment with cash-back.\nCode: CSHW:\tCashAdvance:\tDefinition: Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.\nCode: CSHD:\tCashDeposit:\tDefinition: Cash deposit.\nCode: DEFR:\tDeferredPayment:\tDefinition: Deferred payment.\nCode: RESA:\tReservation:\tDefinition: Reservation (pre-authorisation).\nCode: LOAD:\tLoading:\tDefinition: Loading or reloading non-financial account.\nCode: RFND:\tRefund:\tDefinition: Refund transaction.\nCode: QUCH:\tQuasiCash:\tDefinition: Quasi-cash.\nCode: BALC:\tBalance:\tDefinition: Balance enquiry.\nCode: CACT:\tCardActivation:\tDefinition: Card activation.\nCode: CAVR:\tCardVerification:\tDefinition: Card verification.\nCode: PINC:\tPINChange:\tDefinition: PIN (Personal Identification Number) change.\nCode: VALC:\tValidityCheck:\tDefinition: Card validity check.\nCode: AGGR:\tAggregation:\tDefinition: Aggregation of low payments.\nCode: DCCV:\tDCC:\tDefinition: Dynamic currency conversion (DCC).\nCode: GRTT:\tGratuity:\tDefinition: Card payment with gratuity.\nCode: INSP:\tInstalment:\tDefinition: Instalment payment.\nCode: LOYT:\tLoyalty:\tDefinition: Loyalty services.\nCode: NRES:\tNoShow:\tDefinition: No show after reservation.\nCode: PUCO:\tPurchaseCorporate:\tDefinition: Purchase and corporate data.\nCode: RECP:\tRecurringPayment:\tDefinition: Recurring payment.\nCode: SOAF:\tSolicitedAvailableFunds:\tDefinition: Solicited available funds.\nCode: UNAF:\tUnsolicitedAvailableFunds:\tDefinition: Unsolicited available funds.\nCode: VCAU:\tVoiceAuthorisation:\tDefinition: Voice authorisation.\nCode: IRES:\tInitialReservation:\tDefinition: Initial reservation.\nCode: URES:\tUpdateReservation:\tDefinition: Update reservation.\nCode: PRES:\tPaymentReservation:\tDefinition: Payment after reservation.\nCode: ARES:\tAdditionalPayment:\tDefinition: Additional payment after reservation.\nCode: FREC:\tFirstRecurring:\tDefinition: Initial recurring payment.\nCode: RREC:\tFollowingRecurring:\tDefinition: Repeat recurring payment.\nCode: TP2B:\tPersonToBusiness:\tDefinition: Card payment transaction transfer from person to business.\nCode: TP2P:\tPersonToPerson:\tDefinition: Card payment transaction transfer from person to person.\nCode: INSA:\tAcceptorInstalment:\tDefinition: Instalment payment transaction performed by the acceptor or the acquirer.\nCode: INSI:\tIssuerInstalment:\tDefinition: Instalment payment transaction performed by the card issuer.\nCode: UNLD:\tUnloading:\tDefinition: Unloading non-financial account.\nCode: CAFH:\tCardsFundTransferPush:\tDefinition: Transfer of funds to a card or an account.\nCode: CAFL:\tCardsFundTransferPull:\tDefinition: Transfer of funds from a card or an account.\nCode: CHWD:\tCashWithdrawal:\tDefinition: Withdrawal of cash on an ATM.\nCode: PINU:\tPINUnblock:\tDefinition: Unblock the cardholder PIN.\nCode: CSWD:\tChosenWithdrawal:\tDefinition: Amount and notes values are chosen by the customer.\nCode: AUWS:\tPreAuthorisedWithdrawal:\tDefinition: Withdrawal transaction was pre-authorised by another channel (amount could be absent).\nCode: PFWD:\tProfileWithdrawal:\tDefinition: Amount and Notes Values are pre-defined by the customer profile.\nCode: SDWD:\tStandardWithdrawal:\tDefinition: Customer pressed a button associated with a withdrawal of unique amount and notes mix.\nCode: TFBL:\tTransferCardBillPayment:\tDefinition: Transfer for payment of bills.\nCode: TFCS:\tTransferFromCash:\tDefinition: Transfer from cash deposit.\nCode: TFCH:\tTransferFromCheque:\tDefinition: Transfer from cheque deposit.\nCode: TFDB:\tTransferFundsDisbursementGeneral:\tDefinition: Transfer for general disbursement.\nCode: TFGD:\tTransferGovernmentDisbursement:\tDefinition: Transfer for government disbursement.\nCode: TFMD:\tTransferMerchantDisbursement:\tDefinition: Transfer for merchant disbursement.\nCode: TFPD:\tTransferPayrollPensionDisbursement:\tDefinition: Transfer for payroll pension disbursement.\nCode: NRFD:\tNonRefundable:\tDefinition: Payment of goods or services which are not refundable, for instance low cost airline tickets.\nCode: INST:\tInstant:\tDefinition: Instant transaction.\nCode: CADJ:\tCreditAdjustement:\tDefinition: Credit adjustment to a previous transaction.\nCode: DADJ:\tDebitAdjustement:\tDefinition: Debit adjustment to a previous transaction.\nCode: CRTC:\tCreateCertificate:\tDefinition: Creation of an X.509 certificate with the public key and the information of the owner of the asymmetric key provided by the requestor.\nCode: CRTR:\tRenewCerificate:\tDefinition: Renewal of an X.509 certificate, protected by the certificate to renew.\nCode: CRTK:\tRevokeCertificate:\tDefinition: Revocation of an active X.509 certificate.\nCode: WLSA:\tAddWhiteList:\tDefinition: Add a POI in the white list of the terminal manager.\nCode: WLSR:\tRemoveWhiteList:\tDefinition: Remove a POI from the white list of the terminal manager.\nCode: CIDD:\tCardInitiatingDirectDebit:\tDefinition: Direct Debit initiated by Card.\nCode: GOPT:\tGuaranteeOfPayment:\tDefinition: Acceptor claims for guarantee of payment.",
            "enum": [
                "AGGR",
                "DCCV",
                "GRTT",
                "LOYT",
                "NRES",
                "PUCO",
                "RECP",
                "SOAF",
                "VCAU",
                "INSI",
                "INSA",
                "CSHB",
                "INST",
                "NRFD"
            ],
            "example": "AGGR"
        },
        "CardPaymentToken5": {
            "description": "Payment token information.",
            "properties": {
                "CardSeqNb": {
                    "$ref": "#/$defs/Min2Max3NumericText"
                },
                "Tkn": {
                    "$ref": "#/$defs/Min8Max28NumericText"
                },
                "TknAssrncData": {
                    "$ref": "#/$defs/Max500Binary"
                },
                "TknAssrncLvl": {
                    "$ref": "#/$defs/Number"
                },
                "TknAssrncMtd": {
                    "$ref": "#/$defs/Max2NumericText"
                },
                "TknChrtc": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "TknInittdInd": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "TknRqstr": {
                    "$ref": "#/$defs/PaymentTokenIdentifiers1"
                },
                "TknXpryDt": {
                    "$ref": "#/$defs/Max10Text"
                }
            },
            "type": "object"
        },
        "CardPaymentTransaction131": {
            "description": "Identification of the original transaction.",
            "properties": {
                "CcyConvs": {
                    "$ref": "#/$defs/CurrencyConversion31"
                },
                "POIId": {
                    "$ref": "#/$defs/GenericIdentification32"
                },
                "SaleRefId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                }
            },
            "required": [
                "TxId",
                "POIId"
            ],
            "type": "object"
        },
        "CardPaymentTransaction136": {
            "description": "Data associated with the transaction for a potential currency conversion.",
            "properties": {
                "AddtlSvc": {
                    "items": {
                        "$ref": "#/$defs/CardPaymentServiceType9Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "AddtlTxData": {
                    "items": {
                        "$ref": "#/$defs/Max70Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "AuthstnRslt": {
                    "$ref": "#/$defs/AuthorisationResult18"
                },
                "CardPrgrmmApld": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CardPrgrmmPropsd": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CstmrCnsnt": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                },
                "CstmrTkn": {
                    "$ref": "#/$defs/CardPaymentToken5"
                },
                "IssrCITId": {
                    "$ref": "#/$defs/Max140Text"
                },
                "IssrRefData": {
                    "$ref": "#/$defs/Max140Text"
                },
                "LastTxFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "MrchntCITId": {
                    "$ref": "#/$defs/Max140Text"
                },
                "MrchntCtgyCd": {
                    "$ref": "#/$defs/Min3Max4Text"
                },
                "MrchntRefData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "OrgnlTx": {
                    "$ref": "#/$defs/CardPaymentTransaction131"
                },
                "RcncltnId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SaleRefId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SaleToAcqrrData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SaleToIssrData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SaleToPOIData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SvcAttr": {
                    "$ref": "#/$defs/CardPaymentServiceType14Code"
                },
                "TxCaptr": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "TxDtls": {
                    "$ref": "#/$defs/CardPaymentTransactionDetails53"
                },
                "TxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "TxTp": {
                    "$ref": "#/$defs/CardPaymentServiceType5Code"
                }
            },
            "required": [
                "TxTp",
                "TxId",
                "TxDtls"
            ],
            "type": "object"
        },
        "CardPaymentTransactionDetails53": {
            "description": "Details of the transaction in the authorisation request in a batch.",
            "properties": {
                "AcctTp": {
                    "$ref": "#/$defs/CardAccountType3Code"
                },
                "AddtlInf": {
                    "items": {
                        "$ref": "#/$defs/ExternallyDefinedData5"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "AggtnTx": {
                    "$ref": "#/$defs/AggregationTransaction3"
                },
                "AmtQlfr": {
                    "$ref": "#/$defs/TypeOfAmount8Code"
                },
                "AuthrsdAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "CcyConvsRslt": {
                    "$ref": "#/$defs/CurrencyConversion30"
                },
                "CmltvAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "CmpltnSeqCntr": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "CmpltnSeqNb": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "DlvryLctn": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DtldAmt": {
                    "$ref": "#/$defs/DetailedAmount15"
                },
                "ICCRltdData": {
                    "$ref": "#/$defs/Max10000Binary"
                },
                "Instlmt": {
                    "items": {
                        "$ref": "#/$defs/Instalment5"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "InvcAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "OnLineRsn": {
                    "items": {
                        "$ref": "#/$defs/OnLineReason2Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PdctCdSetId": {
                    "$ref": "#/$defs/Max10Text"
                },
                "Rcrng": {
                    "$ref": "#/$defs/RecurringTransaction6"
                },
                "ReqdAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "ReSubmissnCntr": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "SaleItm": {
                    "items": {
                        "$ref": "#/$defs/Product6"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "TtlAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "TtlAuthrsdAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "UattnddLvlCtgy": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "VldtyDt": {
                    "$ref": "#/$defs/ISODate"
                }
            },
            "required": [
                "TtlAmt"
            ],
            "type": "object"
        },
        "CardProductType1Code": {
            "type": "string",
            "description": "Type of card product.\nCode: COMM:\tCommercialCard:\tDefinition: Cards issued as a means of business expenditure, for instance business card or corporate card. The user could be a company, an individual for business expenses or a self employed for business purposes.\nCode: CONS:\tConsumerCard:\tDefinition: Cards issued as a means of personal expenditure. The user is always an individual.",
            "enum": [
                "COMM",
                "CONS"
            ]
        },
        "CashAccountIdentification7Choice": {
            "description": "Choice between formats for the identification of a cash account.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
					"type": "object",
					"properties" {
						"IBAN": {
							"$ref": "#/$defs/IBAN2007Identifier"
						}
					},
					"required": [
						"IBAN"
					],
				},
				{
				"type": "object",
					"properties" {
						"BBAN": {
							"$ref": "#/$defs/BBANIdentifier"
						}
					},
					"required": [
						"BBAN"
					],
				},
				{
				"type": "object",
					"properties" {
						"UPIC": {
							"$ref": "#/$defs/UPICIdentifier"
						}
					},
					"required": [
						"UPIC"
					],
				},				
				{
				"type": "object",
					"properties" {
						"DmstAcct": {
							"$ref": "#/$defs/SimpleIdentificationInformation4"
						}
					},
					"required": [
						"DmstAcct"
					],
				},				
			],
        },
        "CertificateIssuer1": {
            "description": "Certificate issuer name (see X.509).",
            "properties": {
                "RltvDstngshdNm": {
                    "items": {
                        "$ref": "#/$defs/RelativeDistinguishedName1"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "RltvDstngshdNm"
            ],
            "type": "object"
        },
        "Check1": {
            "description": "Identification of check as payment instrument.",
            "properties": {
                "AcctNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "BkId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ChckCardNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ChckNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ChckTp": {
                    "$ref": "#/$defs/CheckType1Code"
                },
                "ChckTrckData2": {
                    "$ref": "#/$defs/TrackData2"
                },
                "Ctry": {
                    "$ref": "#/$defs/Max3Text"
                }
            },
            "type": "object"
        },
        "CheckType1Code": {
            "type": "string",
            "description": "Type of bank check.\nCode: PERS:\tPersonalCheck:\tDefinition: The check belongs to an individual.\nCode: BUSI:\tBusinessCheck:\tDefinition: The check belongs to a Company or a professional entity.\nCode: BANK:\tBankCheck:\tDefinition: The check is guaranteed by a bank.\nCode: PAYR:\tPayrollCheck:\tDefinition: Check issued by a company for the employees.\nCode: GOVC:\tGovernmentCheck:\tDefinition: Check issued by Government.",
            "enum": [
                "BANK",
                "BUSI",
                "GOVC",
                "PAYR",
                "PERS"
            ]
        },
        "Commission18": {
            "description": "Amount of money due to a party as compensation for a service.",
            "properties": {
                "AddtlInf": {
                    "$ref": "#/$defs/Max350Text"
                },
                "Rate": {
                    "$ref": "#/$defs/PercentageRate"
                }
            },
            "required": [
                "Rate"
            ],
            "type": "object"
        },
        "Commission19": {
            "description": "Amount of money due to a party as compensation for a service.",
            "properties": {
                "AddtlInf": {
                    "$ref": "#/$defs/Max350Text"
                },
                "Amt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                }
            },
            "required": [
                "Amt"
            ],
            "type": "object"
        },
        "CommunicationAddress9": {
            "description": "Communication information.",
            "properties": {
                "AddtlCtctInf": {
                    "$ref": "#/$defs/Max256Text"
                },
                "CstmrSvc": {
                    "$ref": "#/$defs/PhoneNumber"
                },
                "Email": {
                    "$ref": "#/$defs/Max256Text"
                },
                "Phne": {
                    "$ref": "#/$defs/PhoneNumber"
                },
                "PstlAdr": {
                    "$ref": "#/$defs/PostalAddress22"
                },
                "URLAdr": {
                    "$ref": "#/$defs/Max256Text"
                }
            },
            "type": "object"
        },
        "CommunicationCharacteristics5": {
            "description": "Low level communication of the hardware or software component toward another component or an external entity.",
            "properties": {
                "Actv": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "ComTp": {
                    "$ref": "#/$defs/POICommunicationType2Code"
                },
                "Params": {
                    "$ref": "#/$defs/NetworkParameters7"
                },
                "PhysIntrfc": {
                    "$ref": "#/$defs/PhysicalInterfaceParameter1"
                },
                "RmotPty": {
                    "items": {
                        "$ref": "#/$defs/PartyType7Code"
                    },
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "ComTp",
                "RmotPty",
                "Actv"
            ],
            "type": "object"
        },
        "ContentInformationType38": {
            "description": "General cryptographic message syntax (CMS) containing data. protected by a MAC or a digital signature.",
            "properties": {
                "AuthntcdData": {
                    "$ref": "#/$defs/AuthenticatedData10"
                },
                "CnttTp": {
                    "$ref": "#/$defs/ContentType2Code"
                },
                "SgndData": {
                    "$ref": "#/$defs/SignedData9"
                }
            },
            "required": [
                "CnttTp"
            ],
            "type": "object"
        },
        "ContentInformationType39": {
            "description": "General cryptographic message syntax (CMS) containing protected data.",
            "properties": {
                "AuthntcdData": {
                    "$ref": "#/$defs/AuthenticatedData10"
                },
                "CnttTp": {
                    "$ref": "#/$defs/ContentType2Code"
                },
                "DgstdData": {
                    "$ref": "#/$defs/DigestedData6"
                },
                "EnvlpdData": {
                    "$ref": "#/$defs/EnvelopedData11"
                },
                "SgndData": {
                    "$ref": "#/$defs/SignedData9"
                }
            },
            "required": [
                "CnttTp"
            ],
            "type": "object"
        },
        "ContentInformationType40": {
            "description": "General cryptographic message syntax (CMS) containing encrypted data.",
            "properties": {
                "CnttTp": {
                    "$ref": "#/$defs/ContentType2Code"
                },
                "EnvlpdData": {
                    "$ref": "#/$defs/EnvelopedData11"
                }
            },
            "required": [
                "CnttTp",
                "EnvlpdData"
            ],
            "type": "object"
        },
        "ContentType2Code": {
            "type": "string",
            "description": "Identification of the type of a Cryptographic Message Syntax (CMS) data structure.\nCode: DATA:\tPlainData:\tDefinition: Generic, non cryptographic, or unqualified data content - (ASN.1 Object Identifier: id-data).\nCode: SIGN:\tSignedData:\tDefinition: Digital signature - (ASN.1 Object Identifier: id-signedData).\nCode: EVLP:\tEnvelopedData:\tDefinition: Encrypted data, with encryption key - (ASN.1 Object Identifier: id-envelopedData).\nCode: DGST:\tDigestedData:\tDefinition: Message digest - (ASN.1 Object Identifier: id-digestedData).\nCode: ECRP:\tEncryptedData:\tDefinition: Encrypted data - (ASN.1 Object Identifier: id-encryptedData).\nCode: AUTH:\tAuthenticatedData:\tDefinition: MAC (Message Authentication Code), with encryption key - (ASN.1 Object Identifier: id-ct-authData).\nCode: IFSE:\tISOFinancialServicesDataEncryption:\tDefinition: General data encryption that conforms to the ISO 13492 standard.",
            "enum": [
                "DATA",
                "SIGN",
                "EVLP",
                "DGST",
                "AUTH"
            ],
            "example": "DATA"
        },
        "CountryCode": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[A-Z]{2,2}"
                }
            ],
            "description": "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).",
            "example": "BE"
        },
        "Creditor4": {
            "description": "Information about the creditor.",
            "properties": {
                "Cdtr": {
                    "$ref": "#/$defs/PartyIdentification178Choice"
                },
                "RegnId": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Cdtr"
            ],
            "type": "object"
        },
        "CryptographicKey18": {
            "description": "Cryptographic Key.",
            "properties": {
                "ActvtnDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "AddtlId": {
                    "$ref": "#/$defs/Max35Binary"
                },
                "AddtlMgmtInf": {
                    "items": {
                        "$ref": "#/$defs/GenericInformation1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CmpntWthAuthrsdAccs": {
                    "items": {
                        "$ref": "#/$defs/GenericIdentification186"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "DeactvtnDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "Fctn": {
                    "items": {
                        "$ref": "#/$defs/KeyUsage1Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Id": {
                    "$ref": "#/$defs/Max350Text"
                },
                "ItmNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "KeyChckVal": {
                    "$ref": "#/$defs/Max35Binary"
                },
                "KeyVal": {
                    "$ref": "#/$defs/ContentInformationType39"
                },
                "Nm": {
                    "$ref": "#/$defs/Max256Text"
                },
                "PrtctdCmpntWthAuthrsdAccs": {
                    "items": {
                        "$ref": "#/$defs/ContentInformationType39"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SctyPrfl": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/CryptographicKeyType3Code"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Max256Text"
                }
            },
            "required": [
                "Id",
                "Vrsn"
            ],
            "type": "object"
        },
        "CryptographicKeyType3Code": {
            "type": "string",
            "description": "Codes for qualifying the type of cryptographic keys.\nCode: DESC:\tDES:\tDefinition: Data encryption standard.\nCode: AESC:\tAES:\tDefinition: Advanced encryption standard.\nCode: RSAC:\tRSA:\tDefinition: Rivest, Shamir and Adleman.\nCode: ECCC:\tECC:\tDefinition: Elliptic-curve cryptography.\nCode: AES2:\tAES128:\tDefinition: AES (Advanced Encryption Standard) 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EDE3:\tDES112:\tDefinition: Data encryption standard key of 112 bits (without the parity bits).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) key, as specified in ANSI X9.24-2009 Annex A.\nCode: AES9:\tAES192:\tDefinition: AES (Advanced Encryption Standard) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: AES5:\tAES256:\tDefinition: AES (Advanced Encryption Standard) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 � November 6, 2001 - Advanced Encryption Standard).\nCode: EDE4:\tDES168:\tDefinition: Data encryption standard key of 168 bits (without the parity bits).\nCode: APPL:\tApplication:\tDefinition: Key used to protect application information.\nCode: DYNC:\tDynamic:\tDefinition: Any cryptographic key that can be downloaded.\nCode: DATA:\tData:\tDefinition: Key used to protect data in the messages.\nCode: KENC:\tKeyEncryption:\tDefinition: Key used to encrypt other keys.\nCode: WRKG:\tWorking:\tDefinition: Temporary key used to download keys.\nCode: PINK:\tPIN:\tDefinition: Key used to encrypt a PIN.\nCode: MACK:\tMAC:\tDefinition: Key used to generate the MAC of a message.\nCode: DKAE:\tDUKPTAES:\tDefinition: DUKPT AES (Derived Unique Key Per Transaction) algorithm.\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using Triple DES for encryption with a double length key (112 bits). FIPS PUB 46-3.\nCode: UKA8:\tUKPTAES128:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using AES (Advanced Encryption Standard) with a 128 bits length key. \r\nFIPS 197 - 6 November 2001).\nCode: UKA6:\tUKPTAES256:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using AES (Advanced Encryption Standard) with a  256 bits length key. \r\nFIPS 197 - 6 November 2001).\nCode: ISKW:\tISO20038KeyWrap:\tDefinition: ISO 20038 - Banking and related financial services - Key wrap using symmetric keys. Method using symmetric keys as the wrapping algorithm.",
            "enum": [
                "AES2",
                "EDE3",
                "DKP9",
                "AES9",
                "AES5",
                "EDE4"
            ],
            "example": "AES2"
        },
        "CurrencyConversion29": {
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider. The currency conversion has to be accepted by the cardholder.",
            "properties": {
                "AplblBinRg": {
                    "items": {
                        "$ref": "#/$defs/BinRange1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CcyConvsId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ComssnDtls": {
                    "items": {
                        "$ref": "#/$defs/Commission19"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "DclrtnDtls": {
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "MrkUpDtls": {
                    "items": {
                        "$ref": "#/$defs/Commission18"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "NvrtdXchgRate": {
                    "$ref": "#/$defs/PercentageRate"
                },
                "OrgnlAmt": {
                    "$ref": "#/$defs/OriginalAmountDetails1"
                },
                "QtnDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "RsltgAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "SrcCcy": {
                    "$ref": "#/$defs/CurrencyDetails2"
                },
                "TrgtCcy": {
                    "$ref": "#/$defs/CurrencyDetails3"
                },
                "VldFr": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "VldUntil": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "XchgRate": {
                    "$ref": "#/$defs/PercentageRate"
                }
            },
            "required": [
                "TrgtCcy",
                "XchgRate",
                "SrcCcy"
            ],
            "type": "object"
        },
        "CurrencyConversion30": {
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider.",
            "properties": {
                "AccptdByCrdhldr": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "Convs": {
                    "$ref": "#/$defs/CurrencyConversion29"
                }
            },
            "type": "object"
        },
        "CurrencyConversion31": {
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider.",
            "properties": {
                "ConvsDtls": {
                    "items": {
                        "$ref": "#/$defs/CurrencyConversion29"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Rslt": {
                    "$ref": "#/$defs/CurrencyConversionResponse3Code"
                },
                "RsltRsn": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Rslt"
            ],
            "type": "object"
        },
        "CurrencyConversionResponse3Code": {
            "type": "string",
            "description": "Result of a requested currency conversion.\nCode: IMER:\tInvalidMerchant:\tDefinition: The card acceptor has not been recognised.\nCode: ICRD:\tInvalidCard:\tDefinition: The card is not valid for dynamic currency conversion.\nCode: IPRD:\tInvalidProduct:\tDefinition: Dynamic currency conversion service cannot be offered for this card product.\nCode: IRAT:\tNoRate:\tDefinition: Exchange rates are not available.\nCode: ODCC:\tAllowed:\tDefinition: Dynamic currency conversion may be offered to the cardholder.\nCode: DCCA:\tAssumed:\tDefinition: Transaction authorised with dynamic currency conversion.\nCode: NDCC:\tNotAvailable:\tDefinition: Dynamic currency conversion is not available for other reason.\nCode: IATM:\tInvalidATM:\tDefinition: The ATM is not valid for dynamic currency conversion.\nCode: IAMG:\tInvalidATMManager:\tDefinition: The ATM manager is not valid for dynamic currency conversion.\nCode: REST:\tRestriction:\tDefinition: Conversion accepted for the requested amount exclusively.\nCode: CATG:\tCatalogue:\tDefinition: Conversion accepted for a range of amounts.",
            "enum": [
                "ODCC",
                "DCCA",
                "ICRD",
                "IMER",
                "IPRD",
                "IRAT",
                "NDCC",
                "REST",
                "CATG"
            ]
        },
        "CurrencyDetails2": {
            "description": "Details of a currency.",
            "properties": {
                "AlphaCd": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "Dcml": {
                    "$ref": "#/$defs/Number"
                },
                "Nm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "NmrcCd": {
                    "$ref": "#/$defs/Exact3NumericText"
                }
            },
            "type": "object"
        },
        "CurrencyDetails3": {
            "description": "Details of a currency.",
            "properties": {
                "AlphaCd": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "Dcml": {
                    "$ref": "#/$defs/Number"
                },
                "Nm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "NmrcCd": {
                    "$ref": "#/$defs/Exact3NumericText"
                }
            },
            "required": [
                "AlphaCd",
                "NmrcCd",
                "Dcml"
            ],
            "type": "object"
        },
        "CustomerDevice3": {
            "description": "Device used by the customer to perform the payment.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Prvdr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/Max70Text"
                }
            },
            "type": "object"
        },
        "CustomerOrder1": {
            "description": "Customer order attached to a customer, recorded in the POI system.",
            "properties": {
                "AccsdBy": {
                    "$ref": "#/$defs/Max35Text"
                },
                "AddtlInf": {
                    "$ref": "#/$defs/Max1025Text"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "CstmrOrdrId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CurAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "EndDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "FrcstdAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "OpnOrdrStat": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "SaleRefId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "StartDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code"
                }
            },
            "required": [
                "CstmrOrdrId",
                "SaleRefId",
                "StartDt",
                "FrcstdAmt"
            ],
            "type": "object"
        },
        "DateAndPlaceOfBirth1": {
            "description": "Date and place of birth of a person.",
            "properties": {
                "BirthDt": {
                    "$ref": "#/$defs/ISODate"
                },
                "CityOfBirth": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CtryOfBirth": {
                    "$ref": "#/$defs/CountryCode"
                },
                "PrvcOfBirth": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "BirthDt",
                "CityOfBirth",
                "CtryOfBirth"
            ],
            "type": "object"
        },
        "Debtor4": {
            "description": "Information about the debtor.",
            "properties": {
                "AcctId": {
                    "$ref": "#/$defs/CashAccountIdentification7Choice"
                },
                "Dbtr": {
                    "$ref": "#/$defs/PartyIdentification178Choice"
                }
            },
            "type": "object"
        },
        "DecimalNumber": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                }
            ],
            "description": "Number of objects represented as a decimal number, for example 0.75 or 45.6.",
            "example": "123456789.123456789"
        },
        "DetailedAmount15": {
            "description": "Detailed amounts associated with the total amount of transaction.",
            "properties": {
                "AmtGoodsAndSvcs": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "CshBck": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Fees": {
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Grtty": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Rbt": {
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Srchrg": {
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "ValAddedTax": {
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "DetailedAmount21": {
            "description": "Detailed amounts associated with the total amount of transaction.",
            "properties": {
                "Amt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "CardDataNtryMd": {
                    "$ref": "#/$defs/CardDataReading8Code"
                },
                "DtTm": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "ICCRltdData": {
                    "$ref": "#/$defs/Max10000Binary"
                },
                "Labl": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "required": [
                "Amt",
                "DtTm"
            ],
            "type": "object"
        },
        "DetailedAmount4": {
            "description": "Detailed amounts associated with the total amount of transaction.",
            "properties": {
                "Amt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Labl": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "required": [
                "Amt"
            ],
            "type": "object"
        },
        "DigestedData6": {
            "description": "Digest computed on the identified data.",
            "properties": {
                "Dgst": {
                    "$ref": "#/$defs/Max140Binary"
                },
                "DgstAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification36"
                },
                "NcpsltdCntt": {
                    "$ref": "#/$defs/EncapsulatedContent3"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "DgstAlgo",
                "NcpsltdCntt",
                "Dgst"
            ],
            "type": "object"
        },
        "DisplayCapabilities4": {
            "description": "Capabilities of the display components performing the transaction.",
            "properties": {
                "AvlblFrmt": {
                    "items": {
                        "$ref": "#/$defs/OutputFormat1Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "AvlblLang": {
                    "items": {
                        "$ref": "#/$defs/LanguageCode"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Dstn": {
                    "items": {
                        "$ref": "#/$defs/UserInterface4Code"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "LineWidth": {
                    "$ref": "#/$defs/Number"
                },
                "NbOfLines": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "Dstn"
            ],
            "type": "object"
        },
        "EnableServiceRequest6": {
            "description": "Data to request to enable a service.",
            "properties": {
                "DispOutpt": {
                    "$ref": "#/$defs/ActionMessage11"
                },
                "SvcsNbld": {
                    "$ref": "#/$defs/RetailerService2Code"
                },
                "TxActn": {
                    "$ref": "#/$defs/TransactionAction1Code"
                }
            },
            "required": [
                "TxActn"
            ],
            "type": "object"
        },
        "EncapsulatedContent3": {
            "description": "Data to authenticate.",
            "properties": {
                "Cntt": {
                    "$ref": "#/$defs/Max100KBinary"
                },
                "CnttTp": {
                    "$ref": "#/$defs/ContentType2Code"
                }
            },
            "required": [
                "CnttTp"
            ],
            "type": "object"
        },
        "EncryptedContent7": {
            "description": "Encrypted data with an encryption key.",
            "properties": {
                "CnttNcrptnAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification32"
                },
                "CnttTp": {
                    "$ref": "#/$defs/ContentType2Code"
                },
                "NcrptdData": {
                    "$ref": "#/$defs/Max100KBinary"
                }
            },
            "required": [
                "CnttTp",
                "NcrptdData"
            ],
            "type": "object"
        },
        "EncryptionFormat2Code": {
            "type": "string",
            "description": "Format of data before encryption, if the format is not plaintext or implicit.\nCode: TR31:\tTR31:\tDefinition: Format of a cryptographic key specified by the ANSI X9 TR-31 standard.\nCode: TR34:\tTR34:\tDefinition: Format of a cryptographic key specified by the ANSI X9 TR-34 standard.\nCode: I238:\tISO20038KeyWrap:\tDefinition: Format of a cryptographic key specified by the ISO20038 standard.\nCode: CBCE:\tCBC:\tDefinition: Cipher Block Chaining mode of encryption\nCode: CTCE:\tCTCE:\tDefinition: CTC encryption mode.",
            "enum": [
                "TR31",
                "TR34",
                "I238"
            ]
        },
        "EnvelopedData11": {
            "description": "Encrypted data with encryption key.",
            "properties": {
                "NcrptdCntt": {
                    "$ref": "#/$defs/EncryptedContent7"
                },
                "OrgtrInf": {
                    "$ref": "#/$defs/OriginatorInformation1"
                },
                "Rcpt": {
                    "items": {
                        "$ref": "#/$defs/Recipient15Choice"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "Rcpt"
            ],
            "type": "object"
        },
        "Exact3AlphaNumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[a-zA-Z0-9]{3}"
                }
            ],
            "description": "Specifies an alphanumeric string with a length of exact 3 characters."
        },
        "Exact3NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{3}"
                }
            ],
            "description": "Specifies a numeric string with an exact length of 3 digits."
        },
        "Exact4NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{4}"
                }
            ],
            "description": "Specifies a numeric string with an exact length of 4 digits."
        },
        "Exemption1Code": {
            "type": "string",
            "description": "Strong customer authentication exemption.\nCode: MINT:\tMerchantInitiatedTransaction:\tDefinition: Transaction is initiated by the Card Acceptor.\nCode: RECP:\tRecurringPayment:\tDefinition: Transaction is one of a series of recurring payment.\nCode: LOWA:\tLowAmountExemption:\tDefinition: Transaction's amount is low and could be processed without strong customer authentication.\nCode: TRAE:\tTransactionRiskAnalysisExemption:\tDefinition: According to the transaction risk analysis the strong customer authentication is not mandated.\nCode: TMBE:\tTrustedMerchantBeneficiaryExemption:\tDefinition: Cardholder has enrolled the Card Acceptor in the exemption list of strong customer authentication.\nCode: SCAD:\tStrongCustomerAuthenticationDelegation:\tDefinition: Card Acceptor is a strong customer authentication delegate.\nCode: SCPE:\tSecureCorporatePaymentExemption:\tDefinition: Transaction is a secure corporate payment.\nCode: PKGE:\tTransportFareOrParkingFeeUnattendedPaymentExemption:\tDefinition: Payment is processed in a environment where strong customer authentication is inappropriate.\nCode: PAAC:\tPaymentAccountExemption:\tDefinition: Payment account information exemption.\nCode: CTLS:\tContactlessExemption:\tDefinition: Contactless payment at point of sale exemption.\nCode: TRSP:\tTransferSamePersonExemption:\tDefinition: Credit transfer between accounts held by the same natural or legal person exemption.",
            "enum": [
                "LOWA",
                "MINT",
                "RECP",
                "SCPE",
                "SCAD",
                "TRAE",
                "PKGE",
                "TMBE"
            ]
        },
        "ExternallyDefinedData5": {
            "description": "Data container to exchange data elements defined by another standard.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max1025Text"
                },
                "PrtctdVal": {
                    "$ref": "#/$defs/ContentInformationType39"
                },
                "Tp": {
                    "$ref": "#/$defs/Max1025Text"
                },
                "Val": {
                    "$ref": "#/$defs/Max100KBinary"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "Frequency3Code": {
            "type": "string",
            "description": "Specifies the regularity of an event.\nCode: YEAR:\tAnnual:\tDefinition: Event takes place every year or once a year.\nCode: MNTH:\tMonthly:\tDefinition: Event takes place every month or once a month.\nCode: QURT:\tQuarterly:\tDefinition: Event takes place every three months or four times a year.\nCode: MIAN:\tSemiAnnual:\tDefinition: Event takes place every six months or two times a year.\nCode: WEEK:\tWeekly:\tDefinition: Event takes place once a week.\nCode: DAIL:\tDaily:\tDefinition: Event takes place every day.\nCode: ADHO:\tAdhoc:\tDefinition: Event takes place on request or as necessary.\nCode: INDA:\tIntraDay:\tDefinition: Event takes place several times a day.\nCode: OVNG:\tOvernight:\tDefinition: Event takes place overnight.\nCode: TEND:\tTenDays:\tDefinition: Event takes place every ten business days.\nCode: FRTN:\tFortnightly:\tDefinition: Event takes place every two weeks.\nCode: MOVE:\tTriggeredByMovement:\tDefinition: Event takes place at the end of the day if there was a movement on the account, otherwise nothing is sent that day.\nCode: NEVR:\tNever:\tDefinition: Event does never take place.\nCode: RATE:\tRate:\tDefinition: Event takes place based on a change of a rate.\nCode: CRED:\tOnCreditEvent:\tDefinition: Event occurs due to a credit event occurring for an issuer.\nCode: UPFR:\tUpfront:\tDefinition: Event that takes place at the initiation of a trade or agreement.\nCode: EXPI:\tOnExpiry:\tDefinition: Event occurs on expiry of a financial contract.\nCode: HOUL:\tHourly:\tDefinition: Event takes place every hours.\nCode: TRIL:\tTriAnnual:\tDefinition: Event takes place every four months or three times a year.\nCode: BIMN:\tBimonthly:\tDefinition: Event takes place every two months or six times a year.\nCode: ODMD:\tOnDemand:\tDefinition: Event takes place on demand.\nCode: SHFT:\tShift:\tDefinition: Event associated with a shift.\nCode: TWWK:\tTwiceAWeek:\tDefinition: Two times a week",
            "enum": [
                "YEAR",
                "MNTH",
                "QURT",
                "MIAN",
                "WEEK",
                "DAIL",
                "TEND"
            ],
            "example": "YEAR"
        },
        "GenericIdentification176": {
            "description": "Identification of an entity.",
            "properties": {
                "Ctry": {
                    "$ref": "#/$defs/Min2Max3AlphaText"
                },
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/PartyType33Code"
                },
                "ShrtNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/PartyType33Code"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "GenericIdentification177": {
            "description": "Identification of an entity.",
            "properties": {
                "Ctry": {
                    "$ref": "#/$defs/Min2Max3AlphaText"
                },
                "Glctn": {
                    "$ref": "#/$defs/Geolocation1"
                },
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/PartyType33Code"
                },
                "RmotAccs": {
                    "$ref": "#/$defs/NetworkParameters7"
                },
                "ShrtNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/PartyType33Code"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "GenericIdentification186": {
            "description": "Information to identify an element in the system.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max256Text"
                },
                "Tp": {
                    "$ref": "#/$defs/PartyType7Code"
                }
            },
            "required": [
                "Id",
                "Tp"
            ],
            "type": "object"
        },
        "GenericIdentification32": {
            "description": "Identification of an entity.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/PartyType4Code"
                },
                "ShrtNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/PartyType3Code"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "GenericIdentification36": {
            "description": "Identification using a proprietary scheme.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SchmeNm": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Id",
                "Issr"
            ],
            "type": "object"
        },
        "GenericIdentification4": {
            "description": "Information related to an identification, eg, party identification or account identification.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "IdTp": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Id",
                "IdTp"
            ],
            "type": "object"
        },
        "GenericIdentification48": {
            "description": "Information related to an identification.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Id",
                "Vrsn",
                "Issr"
            ],
            "type": "object"
        },
        "GenericIdentification90": {
            "description": "Identification of an entity.",
            "properties": {
                "Ctry": {
                    "$ref": "#/$defs/Min2Max3AlphaText"
                },
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Issr": {
                    "$ref": "#/$defs/PartyType4Code"
                },
                "ShrtNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/PartyType14Code"
                }
            },
            "required": [
                "Tp"
            ],
            "type": "object"
        },
        "GenericInformation1": {
            "description": "GenericInformation exchanged with a name and value.",
            "properties": {
                "Nm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "Val": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "required": [
                "Nm"
            ],
            "type": "object"
        },
        "Geolocation1": {
            "description": "Geographic location specified by geographic or UTM coordinates.",
            "properties": {
                "GeogcCordints": {
                    "$ref": "#/$defs/GeolocationGeographicCoordinates1"
                },
                "UTMCordints": {
                    "$ref": "#/$defs/GeolocationUTMCoordinates1"
                }
            },
            "type": "object"
        },
        "GeolocationGeographicCoordinates1": {
            "description": "Location on the Earth specified by two numbers representing vertical and horizontal position.",
            "properties": {
                "Lat": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Long": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Lat",
                "Long"
            ],
            "type": "object"
        },
        "GeolocationUTMCoordinates1": {
            "description": "Location on the Earth specified by the Universal Transverse Mercator coordinate system.\r\nIdentifies the geographic location using the WGS84 ellipsoid spatial reference system.",
            "properties": {
                "UTMEstwrd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "UTMNrthwrd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "UTMZone": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "UTMZone",
                "UTMEstwrd",
                "UTMNrthwrd"
            ],
            "type": "object"
        },
        "GracePeriod1": {
            "description": "Grace period applicable to an instalment plan.",
            "properties": {
                "OthrUnitTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tm": {
                    "$ref": "#/$defs/Max3NumericText"
                },
                "UnitTp": {
                    "$ref": "#/$defs/GracePeriodUnitType1Code"
                }
            },
            "required": [
                "Tm",
                "UnitTp"
            ],
            "type": "object"
        },
        "GracePeriodUnitType1Code": {
            "type": "string",
            "description": "Contains the details of the grace period applicable to the instalment.\nCode: MNTH:\tMonths:\tDefinition: Grace period months.\nCode: PMTS:\tPayments:\tDefinition: Grace period payments.\nCode: DAYS:\tDays:\tDefinition: Grace period days.\nCode: WEKS:\tWeeks:\tDefinition: Grace period weeks.\nCode: OTHN:\tOtherNational:\tDefinition: Other National Grace period.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other Private Grace period.",
            "enum": [
                "WEKS",
                "PMTS",
                "OTHP",
                "OTHN",
                "MNTH",
                "DAYS"
            ]
        },
        "Header41": {
            "description": "Set of characteristics related to the protocol.",
            "properties": {
                "CreDtTm": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "InitgPty": {
                    "$ref": "#/$defs/GenericIdentification177"
                },
                "MsgFctn": {
                    "$ref": "#/$defs/RetailerMessage1Code"
                },
                "PrtcolVrsn": {
                    "$ref": "#/$defs/Max6Text"
                },
                "RcptPty": {
                    "$ref": "#/$defs/GenericIdentification177"
                },
                "Tracblt": {
                    "items": {
                        "$ref": "#/$defs/Traceability8"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "XchgId": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "MsgFctn",
                "PrtcolVrsn",
                "XchgId",
                "CreDtTm",
                "InitgPty"
            ],
            "type": "object"
        },
        "IBAN2007Identifier": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}"
                }
            ],
            "description": "The International Bank Account Number is a code used internationally by financial institutions to uniquely identify the account of a customer at a financial institution as described in the 2007 edition of the ISO 13616 standard \"Banking and related financial services - International Bank Account Number (IBAN)\" and replaced by the more recent edition of the standard.",
            "example": "AT611904300234573201"
        },
        "ImpliedCurrencyAndAmount": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                    "exclusiveMinimum": false,
                    "minimum": 0
                }
            ],
            "description": "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot.\nNote: a zero amount is considered a positive amount.",
            "example": "500000"
        },
        "InformationQualify1Code": {
            "type": "string",
            "description": "Qualification of the information to sent to an output logical device, to display or print to the Cashier or the Customer.\nCode: STAT:\tStatus:\tDefinition: The information is a new state on which the message sender is entering. For instance, during a payment, the POI could display to the Cashier that POI request an authorisation to the host acquirer.\nCode: ERRO:\tError:\tDefinition: The information is related to an error situation occurring on the message sender.\nCode: DISP:\tDisplay:\tDefinition: Standard display interface.\nCode: SOND:\tSound:\tDefinition: Standard sound interface.\nCode: INPT:\tInput:\tDefinition: Answer to a question or information to be entered by the Cashier or the Customer, at the request of the POI Terminal or the Sale Terminal.\nCode: POIR:\tPOIReplication:\tDefinition: Information displayed on the Cardholder POI interface, replicated on the Cashier interface.\nCode: CUSA:\tCustomerAssistance:\tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.\nCode: RCPT:\tReceipt:\tDefinition: Where you print the Payment receipt that could be located on the Sale System or in some cases a restricted Sale ticket on the POI Terminal.\nCode: DOCT:\tDocument:\tDefinition: When the POI System wants to print specific document (check, dynamic currency conversion ...). Used by the Sale System when the printer is not located on the Sale System.\nCode: VCHR:\tVoucher:\tDefinition: Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.",
            "enum": [
                "CUSA",
                "DISP",
                "DOCT",
                "ERRO",
                "INPT",
                "POIR",
                "RCPT",
                "SOND",
                "STAT",
                "VCHR"
            ]
        },
        "Instalment5": {
            "description": "Data exclusively related to a card issuer financial loan of the payment transaction, or instalment.",
            "properties": {
                "Chrgs": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "DtldChrgs": {
                    "items": {
                        "$ref": "#/$defs/InstalmentAmountDetails1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "FrstAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "FrstPmtDt": {
                    "$ref": "#/$defs/ISODate"
                },
                "GracePrd": {
                    "items": {
                        "$ref": "#/$defs/GracePeriod1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "InstlmtPlan": {
                    "items": {
                        "$ref": "#/$defs/InstalmentPlan1Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "InstlmtPrd": {
                    "$ref": "#/$defs/Number"
                },
                "IntrstRate": {
                    "items": {
                        "$ref": "#/$defs/InterestRateDetails1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "LastAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "PlanId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PlanNtce": {
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PlanOwnr": {
                    "$ref": "#/$defs/PlanOwner1Code"
                },
                "PrdUnit": {
                    "$ref": "#/$defs/Frequency3Code"
                },
                "SbsqntAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "SeqNb": {
                    "$ref": "#/$defs/Number"
                },
                "TtlAmt": {
                    "$ref": "#/$defs/ActiveCurrencyAndAmount"
                },
                "TtlNbOfPmts": {
                    "$ref": "#/$defs/Number"
                }
            },
            "type": "object"
        },
        "InstalmentAmountDetails1": {
            "description": "Instalment amount details",
            "properties": {
                "Amt": {
                    "$ref": "#/$defs/Amount5"
                },
                "OthrTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Pctg": {
                    "$ref": "#/$defs/PercentageRate"
                },
                "SubTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/InstalmentAmountDetailsType1Code"
                }
            },
            "type": "object"
        },
        "InstalmentAmountDetailsType1Code": {
            "type": "string",
            "description": "Contains the details of the grace period applicable to the instalment.\nCode: INSU:\tInsurance:\tDefinition: Insurance amount\nCode: RQST:\tRequested:\tDefinition: Requested amount\nCode: TAXX:\tTax:\tDefinition: Instalment amount tax\nCode: EXPN:\tExpense:\tDefinition: Expense Amount\nCode: OTHN:\tOtherNational:\tDefinition: Grace period unit type\nCode: OTHP:\tOtherPrivate:\tDefinition: Grace period unit type\nCode: OTHC:\tOtherCharges:\tDefinition: Other amounts\nCode: FUNA:\tFunded:\tDefinition: Funded amount\nCode: FEES:\tFees:\tDefinition: Fees amount\nCode: AFCO:\tAnnualFinancingCost:\tDefinition: Total financing cost per annum.\nCode: INTR:\tInterest:\tDefinition: Interest amount.\nCode: PRNC:\tPrincipal:\tDefinition: Principal amount.",
            "enum": [
                "TAXX",
                "RQST",
                "OTHP",
                "OTHN",
                "OTHC",
                "INSU",
                "FUNA",
                "FEES",
                "EXPN",
                "AFCO"
            ]
        },
        "InstalmentPeriod1Code": {
            "type": "string",
            "description": "Instalment period.\nCode: MNTH:\tMonthly:\tDefinition: Monthly instalment period.\nCode: ANNU:\tAnnual:\tDefinition: Annual instalment period.",
            "enum": [
                "MNTH",
                "ANNU"
            ]
        },
        "InstalmentPlan1Code": {
            "type": "string",
            "description": "Type of instalment plan.\nCode: EQPM:\tEqualPayment:\tDefinition: The payment is split in several instalments of equal amounts.\nCode: NQPM:\tInequalPayment:\tDefinition: The payment is split in several instalments of different amounts.\nCode: DFRI:\tDeferredInstalment:\tDefinition: The first instalment is deferred.",
            "enum": [
                "EQPM",
                "NQPM",
                "DFRI"
            ]
        },
        "InterestRate1Code": {
            "type": "string",
            "description": "Contains the list of interest rates.\nCode: GSRT:\tGrossRate:\tDefinition: Gross interest rate of the instalment\nCode: NTRT:\tNetRate:\tDefinition: Net interest rate of the instalment\nCode: OTHN:\tOtherNational:\tDefinition: Other interest rate of the instalment\nCode: OTHP:\tOtherPrivate:\tDefinition: Other interest rate of the instalment",
            "enum": [
                "GSRT",
                "NTRT",
                "OTHN",
                "OTHP"
            ]
        },
        "InterestRateDetails1": {
            "description": "Details of the interest rate",
            "properties": {
                "OthrTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Prd": {
                    "$ref": "#/$defs/InstalmentPeriod1Code"
                },
                "Rate": {
                    "$ref": "#/$defs/BaseOneRate"
                },
                "Tp": {
                    "$ref": "#/$defs/InterestRate1Code"
                }
            },
            "required": [
                "Prd",
                "Rate"
            ],
            "type": "object"
        },
        "ISO3NumericCountryCode": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{3,3}"
                }
            ],
            "description": "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Numeric-3 code). The code is checked against the list of country names coded with three digit characters, defined in the standard.",
            "example": "001"
        },
        "ISODate": {
            "$ref": "#/$defs/xs:date",
            "description": "A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601."
        },
        "ISODateTime": {
            "$ref": "#/$defs/xs:dateTime",
            "description": "A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
        },
        "IssuerAndSerialNumber2": {
            "description": "Certificate issuer name and serial number (see X.509).",
            "properties": {
                "Issr": {
                    "$ref": "#/$defs/CertificateIssuer1"
                },
                "SrlNb": {
                    "$ref": "#/$defs/Max500Binary"
                }
            },
            "required": [
                "Issr",
                "SrlNb"
            ],
            "type": "object"
        },
        "KEK9": {
            "description": "Key encryption key (KEK), using previously distributed symmetric key.",
            "properties": {
                "KEKId": {
                    "$ref": "#/$defs/KEKIdentifier7"
                },
                "KeyNcrptnAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification32"
                },
                "NcrptdKey": {
                    "$ref": "#/$defs/Max500Binary"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "KEKId",
                "KeyNcrptnAlgo"
            ],
            "type": "object"
        },
        "KEKIdentifier7": {
            "description": "Identification of a key encryption key (KEK), using previously distributed symmetric key.",
            "properties": {
                "DerivtnId": {
                    "$ref": "#/$defs/Max500Binary"
                },
                "KeyId": {
                    "$ref": "#/$defs/Max140Text"
                },
                "KeyVrsn": {
                    "$ref": "#/$defs/Max140Text"
                },
                "SeqNb": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "KeyId",
                "KeyVrsn"
            ],
            "type": "object"
        },
        "KeyTransport10": {
            "description": "Key encryption key (KEK), encrypted with a previously distributed asymmetric public key.",
            "properties": {
                "KeyNcrptnAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification35"
                },
                "NcrptdKey": {
                    "$ref": "#/$defs/Max5000Binary"
                },
                "RcptId": {
                    "$ref": "#/$defs/Recipient13Choice"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "RcptId",
                "KeyNcrptnAlgo",
                "NcrptdKey"
            ],
            "type": "object"
        },
        "KeyUsage1Code": {
            "type": "string",
            "description": "Allowed usages of the key.\nCode: ENCR:\tEncryption:\tDefinition: Key may encrypt.\nCode: DCPT:\tDecryption:\tDefinition: Key may decrypt.\nCode: DENC:\tDataEncryption:\tDefinition: Key may encrypt data.\nCode: DDEC:\tDataDecryption:\tDefinition: Key may decrypt data.\nCode: TRNX:\tTranslateOutput:\tDefinition: Key may encrypt information after translation.\nCode: TRNI:\tTranslateInput:\tDefinition: Key may encrypt information before translation.\nCode: MACG:\tMessageAuthenticationCodeGeneration:\tDefinition: Key may generate message authentication codes (MAC).\nCode: MACV:\tMessageAuthenticationCodeVerification:\tDefinition: Key may verify message authentication codes (MAC).\nCode: SIGG:\tSignatureGeneration:\tDefinition: Key may generate digital signatures.\nCode: SUGV:\tSignatureVerification:\tDefinition: Key may verify digital signatures.\nCode: PINE:\tPINEncryption:\tDefinition: Key may encrypt personal identification numbers (PIN).\nCode: PIND:\tPINDecryption:\tDefinition: Key may decrypt personal identification numbers (PIN).\nCode: PINV:\tPINVerification:\tDefinition: Key may verify personal identification numbers (PIN).\nCode: KEYG:\tKeyGeneration:\tDefinition: Key may generate keys.\nCode: KEYI:\tKeyImport:\tDefinition: Key may import keys.\nCode: KEYX:\tKeyExport:\tDefinition: Key may export keys.\nCode: KEYD:\tKeyDerivation:\tDefinition: Key may derive keys.",
            "enum": [
                "ENCR",
                "DCPT",
                "DENC",
                "DDEC",
                "TRNI",
                "TRNX",
                "MACG",
                "MACV",
                "SIGG",
                "SUGV",
                "PINE",
                "PIND",
                "PINV",
                "KEYG",
                "KEYI",
                "KEYX",
                "KEYD"
            ],
            "example": "ENCR"
        },
        "LanguageCode": {
            "$ref": "#/$defs/xs:string",
            "description": "Specifies a language.",
            "example": "ENG"
        },
        "LocationCategory3Code": {
            "type": "string",
            "description": "Indicates the type of integration of the POI terminal in the sale environment.\nCode: ABRD:\tAboard:\tDefinition: Aboard is used when the sale is done in a vehicle (e.g a bus, train, ship, airplane,\r\ntaxi, etc).\nCode: HOME:\tHome:\tDefinition: Customer home.\nCode: INDR:\tIndoor:\tDefinition: Indoor terminal.\nCode: IPMP:\tInsidePump:\tDefinition: Terminal incorporated in the pump dispensing petrol.\nCode: MOTO:\tMailOrderTelephoneOrder:\tDefinition: Mail order or telephone order.\nCode: MPOI:\tMultiplePOITerminal:\tDefinition: Multiple terminals linked to a unique sale terminal.\nCode: MPMP:\tMultiplePump:\tDefinition: Outdoor terminal serving several petrol pumps.\nCode: MSLE:\tMultipleSaleTerminal:\tDefinition: Terminal serving multiple sale terminals.\nCode: NMDC:\tNomadic:\tDefinition: Nomadic is used when the merchant is traveling to different locations (e.g fair or\r\nsport events, home delivery, food truck).\nCode: FIXD:\tPhysicalShop:\tDefinition: Fixed location, for example in a shop.\nCode: SSLE:\tSingleSaleTerminal:\tDefinition: Terminal linked to a unique sale terminal.\nCode: VNDG:\tVendingMachine:\tDefinition: Terminal integrated in a vending machine.\nCode: VIRT:\tVirtualShop:\tDefinition: Virtual Shop is used for any ecommerce solution.",
            "enum": [
                "INDR",
                "IPMP",
                "MPOI",
                "MPMP",
                "MSLE",
                "SSLE",
                "VNDG"
            ]
        },
        "LocationCategory4Code": {
            "type": "string",
            "description": "Indicates the type of integration of the POI terminal in the sale environment.\nCode: ABRD:\tAboard:\tDefinition: Aboard is used when the sale is done in a vehicle (e.g a bus, train, ship, airplane,\r\ntaxi, etc).\nCode: HOME:\tHome:\tDefinition: Customer home.\nCode: INDR:\tIndoor:\tDefinition: Indoor terminal.\nCode: IPMP:\tInsidePump:\tDefinition: Terminal incorporated in the pump dispensing petrol.\nCode: MOTO:\tMailOrderTelephoneOrder:\tDefinition: Mail order or telephone order.\nCode: MPOI:\tMultiplePOITerminal:\tDefinition: Multiple terminals linked to a unique sale terminal.\nCode: MPMP:\tMultiplePump:\tDefinition: Outdoor terminal serving several petrol pumps.\nCode: MSLE:\tMultipleSaleTerminal:\tDefinition: Terminal serving multiple sale terminals.\nCode: NMDC:\tNomadic:\tDefinition: Nomadic is used when the merchant is traveling to different locations (e.g fair or\r\nsport events, home delivery, food truck).\nCode: FIXD:\tPhysicalShop:\tDefinition: Fixed location, for example in a shop.\nCode: SSLE:\tSingleSaleTerminal:\tDefinition: Terminal linked to a unique sale terminal.\nCode: VNDG:\tVendingMachine:\tDefinition: Terminal integrated in a vending machine.\nCode: VIRT:\tVirtualShop:\tDefinition: Virtual Shop is used for any ecommerce solution.",
            "enum": [
                "ABRD",
                "NMDC",
                "FIXD",
                "VIRT"
            ]
        },
        "LoyaltyAccount3": {
            "description": "Loyalty Account description.",
            "properties": {
                "Bal": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Brnd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "IdTp": {
                    "$ref": "#/$defs/CardIdentificationType1Code"
                },
                "LltyId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "NtryMd": {
                    "$ref": "#/$defs/CardDataReading8Code"
                },
                "OwnrNm": {
                    "$ref": "#/$defs/Max45Text"
                },
                "Prvdr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code"
                }
            },
            "required": [
                "LltyId"
            ],
            "type": "object"
        },
        "LoyaltyAccountRequest3": {
            "description": "Data related to a requested Loyalty program or account.",
            "properties": {
                "Acct": {
                    "$ref": "#/$defs/LoyaltyAccount3"
                },
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                }
            },
            "type": "object"
        },
        "LoyaltyAmount1": {
            "description": "Loyalty amount to apply to an Loyalty account.",
            "properties": {
                "Amt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code"
                }
            },
            "required": [
                "Amt"
            ],
            "type": "object"
        },
        "LoyaltyHandling1Code": {
            "type": "string",
            "description": "Possible types of Loyalty processing.\nCode: DENY:\tForbidden:\tDefinition: No loyalty card to read and loyalty transaction to process. \tAny attempt to enter a pure loyalty card is rejected.\nCode: PRCS:\tProcessed:\tDefinition: The loyalty transaction is already processed, no loyalty card or loyalty transaction to process.\nCode: ALLO:\tAllowed:\tDefinition: The loyalty is accepted, but the POI has not to require or ask a loyalty card. The loyalty is involved by the payment card (e.g. an hybrid or linked card). \nCode: PROP:\tProposed:\tDefinition: The loyalty is accepted, and the POI has to ask a loyalty card. If the Customer does not enter a loyalty card, no loyalty transaction is realised.\nCode: REQU:\tRequired:\tDefinition: The loyalty is required, and the POI refuses the processing \tof the message request if the cardholder does not enter a loyalty card.",
            "enum": [
                "ALLO",
                "DENY",
                "PRCS",
                "PROP",
                "REQU"
            ]
        },
        "LoyaltyRequest6": {
            "description": "Data to request a loyalty service. A loyalty request contents : the loyalty transaction request and the loyalty data if any.",
            "properties": {
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                },
                "Data": {
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Tx": {
                    "$ref": "#/$defs/LoyaltyTransaction6"
                }
            },
            "required": [
                "Tx"
            ],
            "type": "object"
        },
        "LoyaltyRequestData3": {
            "description": "Data linked to card loyalty during payment.",
            "properties": {
                "Acct": {
                    "$ref": "#/$defs/LoyaltyAccount3"
                },
                "Amt": {
                    "$ref": "#/$defs/LoyaltyAmount1"
                },
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                }
            },
            "type": "object"
        },
        "LoyaltyTransaction6": {
            "description": "Data related to the loyalty transaction.",
            "properties": {
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "LltyTxTp": {
                    "$ref": "#/$defs/LoyaltyTransactionType1Code"
                },
                "OrgnlPOITx": {
                    "$ref": "#/$defs/CardPaymentTransaction136"
                },
                "SaleItm": {
                    "items": {
                        "$ref": "#/$defs/Product6"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SaleTxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "TtlAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                }
            },
            "required": [
                "LltyTxTp"
            ],
            "type": "object"
        },
        "LoyaltyTransactionType1Code": {
            "type": "string",
            "description": "Type of loyalty transaction.\nCode: AWRD:\tAward:\tDefinition: Direct or payment related award on a loyalty account. Award alone, award associated to a payment (may be with an additional award alone), award because of \ta payment resulting on rebates.\nCode: AWRR:\tAwardRefund:\tDefinition: Refund of a loyalty award transaction.\nCode: REDE:\tRedemption:\tDefinition: Redemption on a loyalty account.\nCode: REDR:\tRedemptionRefund:\tDefinition: Refund of a loyalty redemption transaction.\nCode: REBA:\tRebate:\tDefinition: Rebate on a total amount, sale item amount, or sale items.\nCode: REBR:\tRebateRefund:\tDefinition: Refund of a loyalty rebate transaction.",
            "enum": [
                "AWRD",
                "AWRR",
                "REBR",
                "REBA",
                "REDE",
                "REDR"
            ]
        },
        "MandateRelatedInformation13": {
            "description": "Provides further details related to a direct debit mandate signed between the creditor and the debtor.",
            "properties": {
                "DtOfSgntr": {
                    "$ref": "#/$defs/ISODate"
                },
                "MndtId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "MndtImg": {
                    "$ref": "#/$defs/Max2MBBinary"
                }
            },
            "required": [
                "MndtId"
            ],
            "type": "object"
        },
        "Max10000Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 10000,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 10000 binary bytes."
        },
        "Max100KBinary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 102400,
                    "minLength": 1
                }
            ],
            "description": "Binary data of 100K maximum."
        },
        "Max1025Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 1025,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 1025 characters."
        },
        "Max104Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 104,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 104 characters."
        },
        "Max10KBinary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 10240,
                    "minLength": 1
                }
            ],
            "description": "Binary data of 10K maximum."
        },
        "Max10Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 10,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 10 characters."
        },
        "Max11NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,11}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 11 digits."
        },
        "Max140Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 140,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 140 binary bytes."
        },
        "Max140Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 140,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 140 characters."
        },
        "Max15NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,15}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 15 digits."
        },
        "Max16Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 16,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 16 characters."
        },
        "Max19NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,19}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 19 digits."
        },
        "Max20000Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 20000,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 20, 000 characters."
        },
        "Max256Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 256,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 256 characters."
        },
        "Max2KBinary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 2048,
                    "minLength": 1
                }
            ],
            "description": "Binary data of 2K maximum."
        },
        "Max2MBBinary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 2097152,
                    "minLength": 1
                }
            ],
            "description": "Binary data of 2MB maximum."
        },
        "Max2NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,2}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 2 digits."
        },
        "Max3000Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 3000,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 3000 binary bytes."
        },
        "Max30Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 30
                }
            ],
            "description": "Specifies a character string with a maximum length of 30 characters."
        },
        "Max350Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 350,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 350 characters."
        },
        "Max35Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 35,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 35 binary bytes."
        },
        "Max35NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,35}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 35 digits."
        },
        "Max35Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 35,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 35 characters."
        },
        "Max37Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 37,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 37 characters."
        },
        "Max3NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,3}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 3 digits."
        },
        "Max3Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 3,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 3 characters."
        },
        "Max45Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 45,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 45 characters."
        },
        "Max5000Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 5000,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 5000 binary bytes."
        },
        "Max500Binary": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:base64Binary"
                },
                {
                    "maxLength": 500,
                    "minLength": 1
                }
            ],
            "description": "Specifies a binary string with a maximum length of 500 binary bytes."
        },
        "Max500Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 500,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 500 characters."
        },
        "Max5NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{1,5}"
                }
            ],
            "description": "Specifies a numeric string with a maximum length of 5 digits."
        },
        "Max6Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 6,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 6 characters."
        },
        "Max70Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 70,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 70characters."
        },
        "Max76Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 76,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 76 characters."
        },
        "Max8000Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 8000,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 8000 characters."
        },
        "Max8Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 8,
                    "minLength": 1
                }
            ],
            "description": "Specifies a character string with a maximum length of 8 characters."
        },
        "MemoryCharacteristics1": {
            "description": "Characteristics of a hardware memory module.",
            "properties": {
                "FreeSz": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TtlSz": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "Unit": {
                    "$ref": "#/$defs/MemoryUnit1Code"
                }
            },
            "required": [
                "Id",
                "TtlSz",
                "FreeSz",
                "Unit"
            ],
            "type": "object"
        },
        "MemoryUnit1Code": {
            "type": "string",
            "description": "Unit of the memory size.\nCode: EXAB:\tExaByte:\tDefinition: Exa byte.\nCode: PETA:\tPetaByte:\tDefinition: Peta byte.\nCode: TERA:\tTeraByte:\tDefinition: Tera byte.\nCode: GIGA:\tGigaByte:\tDefinition: Giga byte.\nCode: MEGA:\tMegaByte:\tDefinition: Mega byte.\nCode: KILO:\tKiloByte:\tDefinition: Kilo byte.\nCode: BYTE:\tByte:\tDefinition: Byte.",
            "enum": [
                "BYTE",
                "EXAB",
                "GIGA",
                "KILO",
                "MEGA",
                "PETA",
                "TERA"
            ],
            "example": "BYTE"
        },
        "MerchantToken2": {
            "description": "Merchant token information.",
            "properties": {
                "Tkn": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TknAssrncData": {
                    "$ref": "#/$defs/Max500Binary"
                },
                "TknAssrncLvl": {
                    "$ref": "#/$defs/Number"
                },
                "TknAssrncMtd": {
                    "$ref": "#/$defs/Max2NumericText"
                },
                "TknChrtc": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "TknInittdInd": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "TknRqstr": {
                    "$ref": "#/$defs/PaymentTokenIdentifiers1"
                },
                "TknXpryDt": {
                    "$ref": "#/$defs/Max10Text"
                }
            },
            "type": "object"
        },
        "Min2Max3AlphaText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[a-zA-Z]{2,3}"
                }
            ],
            "description": "Specifies an alpha string with a minimum length of 2 characters and a maximum length of 3 characters."
        },
        "Min2Max3NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{2,3}"
                }
            ],
            "description": "Specifies a numeric string with a minimum length of 2 digits, and a maximum length of 3 digits."
        },
        "Min3Max4Text": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "maxLength": 4,
                    "minLength": 3
                }
            ],
            "description": "Specifies a character string with a minimum length of 3 characters, and a maximum length of 4 characters."
        },
        "Min8Max28NumericText": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{8,28}"
                }
            ],
            "description": "Specifies a numeric string with a minimum length of 8 digits, and a maximum length of 28 digits."
        },
        "MobileData6": {
            "description": "Data related to the mobile of stakeholder.",
            "properties": {
                "Glctn": {
                    "$ref": "#/$defs/Geolocation1"
                },
                "MobCtryCd": {
                    "$ref": "#/$defs/Min2Max3AlphaText"
                },
                "MobMskdMSISDN": {
                    "$ref": "#/$defs/Max35Text"
                },
                "MobNtwkCd": {
                    "$ref": "#/$defs/Min2Max3NumericText"
                },
                "PrtctdMobData": {
                    "$ref": "#/$defs/ContentInformationType40"
                },
                "SnstvMobData": {
                    "$ref": "#/$defs/SensitiveMobileData1"
                }
            },
            "type": "object"
        },
        "NameAndAddress6": {
            "description": "Name and address of an institution.",
            "properties": {
                "Adr": {
                    "$ref": "#/$defs/PostalAddress2"
                },
                "Nm": {
                    "$ref": "#/$defs/Max70Text"
                }
            },
            "required": [
                "Nm",
                "Adr"
            ],
            "type": "object"
        },
        "NetworkParameters7": {
            "description": "Parameters to communicate with a host.",
            "properties": {
                "AccsCd": {
                    "$ref": "#/$defs/Max35Binary"
                },
                "Adr": {
                    "items": {
                        "$ref": "#/$defs/NetworkParameters9"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "ClntCert": {
                    "items": {
                        "$ref": "#/$defs/Max10KBinary"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SctyPrfl": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SvrCert": {
                    "items": {
                        "$ref": "#/$defs/Max10KBinary"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SvrCertIdr": {
                    "items": {
                        "$ref": "#/$defs/Max140Binary"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "UsrNm": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Adr"
            ],
            "type": "object"
        },
        "NetworkParameters9": {
            "description": "Parameters to communicate with a host.",
            "properties": {
                "AdrVal": {
                    "$ref": "#/$defs/Max500Text"
                },
                "NtwkTp": {
                    "$ref": "#/$defs/NetworkType1Code"
                }
            },
            "required": [
                "NtwkTp",
                "AdrVal"
            ],
            "type": "object"
        },
        "NetworkType1Code": {
            "type": "string",
            "description": "Type of communication network.\nCode: IPNW:\tInternetProtocol:\tDefinition: Protocol of an IP network.\nCode: PSTN:\tPublicTelephone:\tDefinition: Protocol of a Public Switched Telephone Network (PSTN).\nCode: HTTP:\tHTTP:\tDefinition: HTTP proxy.\nCode: SCK4:\tSock4:\tDefinition: Sock4 proxy.\nCode: SCK5:\tSock5:\tDefinition: Sock5 proxy.",
            "enum": [
                "IPNW",
                "PSTN"
            ]
        },
        "Number": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                }
            ],
            "description": "Number of objects represented as an integer.",
            "example": "123456789012345678"
        },
        "OnLineCapability1Code": {
            "type": "string",
            "description": "On-line and off-line capabilities of the POI (Point Of Interaction).\nCode: OFLN:\tOffLine:\tDefinition: Off-line only capable.\nCode: ONLN:\tOnLine:\tDefinition: On-line only capable.\nCode: SMON:\tSemiOffLine:\tDefinition: Off-line capable with possible on-line requests to the acquirer.\nCode: BOTH:\tBothOnLineAndOffLine:\tDefinition: Both online and offline",
            "enum": [
                "OFLN",
                "ONLN",
                "SMON"
            ],
            "example": "OFLN"
        },
        "OnLinePIN11": {
            "description": "Encrypted personal identification number (PIN) and related information.",
            "properties": {
                "AddtlInpt": {
                    "$ref": "#/$defs/Max35Text"
                },
                "NcrptdPINBlck": {
                    "$ref": "#/$defs/ContentInformationType40"
                },
                "PINFrmt": {
                    "$ref": "#/$defs/PINFormat3Code"
                }
            },
            "required": [
                "NcrptdPINBlck",
                "PINFrmt"
            ],
            "type": "object"
        },
        "OnLineReason2Code": {
            "type": "string",
            "description": "Reason to process an online authorisation.\nCode: RNDM:\tRandomSelection:\tDefinition: Transaction random selection to go online.\nCode: ICCF:\tICCForced:\tDefinition: Payment application in the Integrated Circuit Card forces to go on-line.\nCode: MERF:\tMerchantForced:\tDefinition: On line forced by card acceptor.\nCode: TRMF:\tTerminalForced:\tDefinition: Terminal random selection to go online.\nCode: ISSF:\tIssuerForced:\tDefinition: On line forced by card issuer.\nCode: FRLT:\tFloorLimit:\tDefinition: Over floor limit.\nCode: EXFL:\tExceptionFile:\tDefinition: Card appears on terminal exception file.\nCode: TAMT:\tTotalAmount:\tDefinition: Total amount of purchases per cardholder and per application above floor limit.\nCode: CBIN:\tControlledBIN:\tDefinition: Bank Identification Number under control.\nCode: UBIN:\tUnknownBIN:\tDefinition: Unknown Bank Identification Number.\nCode: CPAN:\tControlledPAN:\tDefinition: Primary account number (card number) under control.\nCode: FLOW:\tFlowControl:\tDefinition: Flow control.\nCode: CRCY:\tUnavailableCurrency:\tDefinition: Unknown currency code or foreign currency.\nCode: IFPR:\tIssuerForcedPINRequest:\tDefinition: Request Cardholder Authentication througth PIN insertion",
            "enum": [
                "RNDM",
                "ICCF",
                "MERF",
                "TRMF",
                "ISSF",
                "FRLT",
                "EXFL",
                "TAMT",
                "CBIN",
                "UBIN",
                "CPAN",
                "FLOW",
                "CRCY",
                "IFPR"
            ],
            "example": "RNDM"
        },
        "Organisation26": {
            "description": "Merchant performing the transaction.",
            "properties": {
                "Adr": {
                    "$ref": "#/$defs/Max140Text"
                },
                "CmonNm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "CtryCd": {
                    "$ref": "#/$defs/ISO3NumericCountryCode"
                },
                "MrchntCtgyCd": {
                    "$ref": "#/$defs/Min3Max4Text"
                },
                "RegdIdr": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "CmonNm",
                "CtryCd",
                "MrchntCtgyCd",
                "RegdIdr"
            ],
            "type": "object"
        },
        "Organisation41": {
            "description": "Merchant performing the transaction.",
            "properties": {
                "CmonNm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "Id": {
                    "$ref": "#/$defs/GenericIdentification32"
                },
                "LctnAndCtct": {
                    "$ref": "#/$defs/CommunicationAddress9"
                },
                "LctnCtgy": {
                    "$ref": "#/$defs/LocationCategory4Code"
                },
                "SchmeData": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "type": "object"
        },
        "OriginalAmountDetails1": {
            "description": "The OriginalAmountDetails contains all amount information in the acceptor currency code necessary to manage currency conversion in the cardholder currency code.",
            "properties": {
                "ActlAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "MaxAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "MinAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                }
            },
            "type": "object"
        },
        "OriginatorInformation1": {
            "description": "Provides information about the originator. It is present only if required by the key management algorithm.",
            "properties": {
                "Cert": {
                    "items": {
                        "$ref": "#/$defs/Max5000Binary"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "OutputBarcode2": {
            "description": "Barcode content to display or print.",
            "properties": {
                "BrcdTp": {
                    "$ref": "#/$defs/BarcodeType1Code"
                },
                "BrcdVal": {
                    "$ref": "#/$defs/Max8000Text"
                },
                "QRCdBinryVal": {
                    "$ref": "#/$defs/Max3000Binary"
                },
                "QRCdErrCrrctn": {
                    "$ref": "#/$defs/QRCodeErrorCorrection1Code"
                },
                "QRCdNcodgMd": {
                    "$ref": "#/$defs/QRCodeEncodingMode1Code"
                },
                "QRCdVrsn": {
                    "$ref": "#/$defs/Max16Text"
                }
            },
            "required": [
                "BrcdTp"
            ],
            "type": "object"
        },
        "OutputFormat1Code": {
            "type": "string",
            "description": "Message format.\nCode: TEXT:\tSimpleText:\tDefinition: Text without format attributes.\nCode: MREF:\tMessageReference:\tDefinition: Predefined configured messages, identified by a reference.\nCode: HTML:\tXHTML:\tDefinition: XHTML document which includes a subset of the XHTML output tag.\nCode: SREF:\tScreenReference:\tDefinition: Screen to display identified by a reference.\nCode: BARC:\tBarcode:\tDefinition: Barcode to output in several possible format.\nCode: MENT:\tMenuEntry:\tDefinition: A text to display as a menu before requesting an input.\nCode: FLNM:\tFileName:\tDefinition: File name and location identification for stored messages or data.\nCode: MMSI:\tMultiMediaMessaging:\tDefinition: Multi-media messaging service\nCode: OTHN:\tOtherNational:\tDefinition: Other type of output of message defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of output format defined at private level.\nCode: SMSI:\tShortMessageService:\tDefinition: Short message service\nCode: URLI:\tUniformResourceLocator:\tDefinition: Uniform Resource Locator (URL) reference for the message.\nCode: PLIN:\tPrintLine:\tDefinition: A formatted print line.\nCode: JSON:\tJSON:\tDefinition: Java Syntax Object Notation format.\nCode: XMLF:\tXML:\tDefinition: eXtensible Markup Language format.\nCode: EDIF:\tEDIFACT:\tDefinition: Electronic data interchange for administration, commerce and transport.\nCode: CSVF:\tCSV:\tDefinition: Comma separated value format.\nCode: JPEG:\tJPEG:\tDefinition: Joint Photographic Experts Group format.\nCode: PDFF:\tPDF:\tDefinition: Portable Document Format.\nCode: PNGF:\tPNG:\tDefinition: Portable Network Graphics format.\nCode: SVGF:\tSVG:\tDefinition: Scalable vector graphic format.",
            "enum": [
                "MREF",
                "TEXT",
                "HTML"
            ]
        },
        "OutputFormat3Code": {
            "type": "string",
            "description": "Type of output format.\nCode: TEXT:\tSimpleText:\tDefinition: Text without format attributes.\nCode: MREF:\tMessageReference:\tDefinition: Predefined configured messages, identified by a reference.\nCode: HTML:\tXHTML:\tDefinition: XHTML document which includes a subset of the XHTML output tag.\nCode: SREF:\tScreenReference:\tDefinition: Screen to display identified by a reference.\nCode: BARC:\tBarcode:\tDefinition: Barcode to output in several possible format.\nCode: MENT:\tMenuEntry:\tDefinition: A text to display as a menu before requesting an input.\nCode: FLNM:\tFileName:\tDefinition: File name and location identification for stored messages or data.\nCode: MMSI:\tMultiMediaMessaging:\tDefinition: Multi-media messaging service\nCode: OTHN:\tOtherNational:\tDefinition: Other type of output of message defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of output format defined at private level.\nCode: SMSI:\tShortMessageService:\tDefinition: Short message service\nCode: URLI:\tUniformResourceLocator:\tDefinition: Uniform Resource Locator (URL) reference for the message.\nCode: PLIN:\tPrintLine:\tDefinition: A formatted print line.\nCode: JSON:\tJSON:\tDefinition: Java Syntax Object Notation format.\nCode: XMLF:\tXML:\tDefinition: eXtensible Markup Language format.\nCode: EDIF:\tEDIFACT:\tDefinition: Electronic data interchange for administration, commerce and transport.\nCode: CSVF:\tCSV:\tDefinition: Comma separated value format.\nCode: JPEG:\tJPEG:\tDefinition: Joint Photographic Experts Group format.\nCode: PDFF:\tPDF:\tDefinition: Portable Document Format.\nCode: PNGF:\tPNG:\tDefinition: Portable Network Graphics format.\nCode: SVGF:\tSVG:\tDefinition: Scalable vector graphic format.",
            "enum": [
                "BARC",
                "MENT",
                "MREF",
                "SREF",
                "TEXT",
                "HTML"
            ]
        },
        "PackageType5": {
            "description": "Chunk of a software package.",
            "properties": {
                "OffsetEnd": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "OffsetStart": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "PackgBlck": {
                    "items": {
                        "$ref": "#/$defs/ExternallyDefinedData5"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PackgId": {
                    "$ref": "#/$defs/GenericIdentification176"
                },
                "PackgLngth": {
                    "$ref": "#/$defs/PositiveNumber"
                }
            },
            "type": "object"
        },
        "Parameter12": {
            "description": "Parameters associated to a cryptographic encryption algorithm.",
            "properties": {
                "BPddg": {
                    "$ref": "#/$defs/BytePadding1Code"
                },
                "InitlstnVctr": {
                    "$ref": "#/$defs/Max500Binary"
                },
                "NcrptnFrmt": {
                    "$ref": "#/$defs/EncryptionFormat2Code"
                }
            },
            "type": "object"
        },
        "Parameter16": {
            "description": "Parameters of the RSASSA-PSS digital signature algorithm (RSA signature algorithm with appendix: Probabilistic Signature Scheme).",
            "properties": {
                "DgstAlgo": {
                    "$ref": "#/$defs/Algorithm26Code"
                },
                "MskGnrtrAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification34"
                },
                "OIDCrvNm": {
                    "$ref": "#/$defs/Max140Text"
                },
                "SaltLngth": {
                    "$ref": "#/$defs/Number"
                },
                "TrlrFld": {
                    "$ref": "#/$defs/Number"
                }
            },
            "type": "object"
        },
        "Parameter17": {
            "description": "Parameters of the asymmetric encryption algorithm.",
            "properties": {
                "DgstAlgo": {
                    "$ref": "#/$defs/Algorithm26Code"
                },
                "MskGnrtrAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification34"
                },
                "NcrptnFrmt": {
                    "$ref": "#/$defs/EncryptionFormat2Code"
                }
            },
            "type": "object"
        },
        "Parameter18": {
            "description": "Parameters associated to a mask generator cryptographic function.",
            "properties": {
                "DgstAlgo": {
                    "$ref": "#/$defs/Algorithm26Code"
                }
            },
            "type": "object"
        },
        "Parameter7": {
            "description": "Parameters associated to the MAC algorithm.",
            "properties": {
                "BPddg": {
                    "$ref": "#/$defs/BytePadding1Code"
                },
                "InitlstnVctr": {
                    "$ref": "#/$defs/Max500Binary"
                }
            },
            "type": "object"
        },
		
		
        "PartyIdentification178Choice": {
            "description": "Identification of a party.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
				"type": "object",
					"properties" {
						"PrtryId": {
							"$ref": "#/$defs/GenericIdentification36"
						}
					},
					"required": [
						"PrtryId"
					],
				},
				{
				"type": "object",
					"properties" {
						"NmAndAdr": {
							"$ref": "#/$defs/NameAndAddress6"
						}
					},
					"required": [
						"NmAndAdr"
					],
				},				
				{
				"type": "object",
					"properties" {
						"DmstAcct": {
							"$ref": "#/$defs/SimpleIdentificationInformation4"
						}
					},
					"required": [
						"DmstAcct"
					],
				},				
			]
        },
        "PartyType14Code": {
            "type": "string",
            "description": "Identification of the type of entity involved in a transaction.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS",
                "ICCA"
            ],
            "example": "OPOI"
        },
        "PartyType33Code": {
            "type": "string",
            "description": "Identification of the type of entity involved in a transaction.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS",
                "MTMG",
                "TAXH",
                "TMGT"
            ],
            "example": "OPOI"
        },
        "PartyType3Code": {
            "type": "string",
            "description": "Identification of the type of entity involved in a transaction.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS"
            ],
            "example": "OPOI"
        },
        "PartyType4Code": {
            "type": "string",
            "description": "Entity assigning an identification (for example merchant, acceptor, acquirer, tax authority, etc.).\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "TAXH"
            ],
            "example": "MERC"
        },
        "PartyType7Code": {
            "type": "string",
            "description": "Party that communicate with a POI component (Point of Interaction), using a communication device.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "ACQR",
                "ITAG",
                "PCPT",
                "TMGT",
                "SALE"
            ],
            "example": "ACQR"
        },
        "PaymentAccountRequest1": {
            "description": "Data related to the account pointed by the payment card.",
            "properties": {
                "AcctRef": {
                    "$ref": "#/$defs/Max35Text"
                },
                "AcctTp": {
                    "$ref": "#/$defs/CardAccountType3Code"
                },
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                }
            },
            "type": "object"
        },
        "PaymentCard35": {
            "description": "Payment card performing the transaction.",
            "properties": {
                "AddtlCardData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "AllwdPdct": {
                    "items": {
                        "$ref": "#/$defs/Max70Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CardBrnd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CardCcyCd": {
                    "$ref": "#/$defs/Exact3AlphaNumericText"
                },
                "CardCtryCd": {
                    "$ref": "#/$defs/Max3Text"
                },
                "CardPdctPrfl": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CardPdctSubTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CardPdctTp": {
                    "$ref": "#/$defs/CardProductType1Code"
                },
                "IntrnlCard": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "IssrBIN": {
                    "$ref": "#/$defs/Max15NumericText"
                },
                "MskdPAN": {
                    "$ref": "#/$defs/Max30Text"
                },
                "PlainCardData": {
                    "$ref": "#/$defs/PlainCardData22"
                },
                "PmtAcctRef": {
                    "$ref": "#/$defs/Max70Text"
                },
                "PrtctdCardData": {
                    "$ref": "#/$defs/ContentInformationType40"
                },
                "PrvtCardData": {
                    "$ref": "#/$defs/Max100KBinary"
                },
                "SvcOptn": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "type": "object"
        },
        "PaymentContext29": {
            "description": "Payment context in which the transaction is performed.",
            "properties": {
                "AttndncCntxt": {
                    "$ref": "#/$defs/AttendanceContext1Code"
                },
                "AttndntLang": {
                    "$ref": "#/$defs/LanguageCode"
                },
                "AttndntMsgCpbl": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "BizArea": {
                    "$ref": "#/$defs/BusinessArea2Code"
                },
                "CardDataNtryMd": {
                    "$ref": "#/$defs/CardDataReading8Code"
                },
                "CardPres": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "CrdhldrPres": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "FllbckInd": {
                    "$ref": "#/$defs/CardFallback1Code"
                },
                "OnLineCntxt": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "SpprtdOptn": {
                    "items": {
                        "$ref": "#/$defs/SupportedPaymentOption2Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "TxChanl": {
                    "$ref": "#/$defs/TransactionChannel5Code"
                },
                "TxEnvt": {
                    "$ref": "#/$defs/TransactionEnvironment1Code"
                }
            },
            "type": "object"
        },
        "PaymentRequest6": {
            "description": "Data required to request a Payment.",
            "properties": {
                "LltyData": {
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PmtTx": {
                    "$ref": "#/$defs/CardPaymentTransaction136"
                }
            },
            "type": "object"
        },
        "PaymentTokenIdentifiers1": {
            "description": "Identifier of a token provider requestor.",
            "properties": {
                "PrvdrId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "RqstrId": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "PrvdrId",
                "RqstrId"
            ],
            "type": "object"
        },
        "PercentageRate": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                }
            ],
            "description": "Rate expressed as a percentage, that is, in hundredths, for example, 0.7 is 7/10 of a percent, and 7.0 is 7%.",
            "example": "35"
        },
        "PersonIdentification15": {
            "description": "Set of unique and unambiguous ways to identify a person.",
            "properties": {
                "AlnRegnNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CstmrNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Dept": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DrvrId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DrvrLicLctn": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DrvrLicNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DrvrLicNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "DtAndPlcOfBirth": {
                    "$ref": "#/$defs/DateAndPlaceOfBirth1"
                },
                "EmailAdr": {
                    "$ref": "#/$defs/Max256Text"
                },
                "IdntyCardNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "JobNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "MplyeeIdNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "MplyrIdNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Othr": {
                    "items": {
                        "$ref": "#/$defs/GenericIdentification4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PsptNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SclSctyNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TaxIdNb": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "type": "object"
        },
        "PhoneNumber": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "\\+[0-9]{1,3}-[0-9()+\\-]{1,30}"
                }
            ],
            "description": "The collection of information which identifies a specific phone or FAX number as defined by telecom services.\nIt consists of a \"+\" followed by the country code (from 1 to 3 characters) then a \"-\" and finally, any combination of numbers, \"(\", \")\", \"+\" and \"-\" (up to 30 characters)."
        },
        "PhysicalInterfaceParameter1": {
            "description": "Configuration parameters for physical interface.",
            "properties": {
                "AccsCd": {
                    "$ref": "#/$defs/Max35Binary"
                },
                "AddtlParams": {
                    "$ref": "#/$defs/Max2KBinary"
                },
                "IntrfcNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "IntrfcTp": {
                    "$ref": "#/$defs/POICommunicationType2Code"
                },
                "SctyPrfl": {
                    "$ref": "#/$defs/Max35Text"
                },
                "UsrNm": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "IntrfcNm"
            ],
            "type": "object"
        },
        "PINFormat3Code": {
            "type": "string",
            "description": "PIN (Personal Identification Number) format used before encryption.\nCode: ISO0:\tISO0:\tDefinition: PIN diversified with the card account number, conforming to the standard ISO 9564-2.\nCode: ISO1:\tISO1:\tDefinition: PIN completed with random padding characters, conforming to the standard ISO 9564-2.\nCode: ISO2:\tISO2:\tDefinition: PIN without diversification characters, conforming to the standard ISO 9564-2.\nCode: ISO3:\tISO3:\tDefinition: PIN diversified with the card account number and random characters, conforming to the standard ISO 9564-2.\nCode: ISO4:\tISO4:\tDefinition: PIN format used with AES encryption, conforming to the new ISO SC2 format.\nCode: ISO5:\tISO5:\tDefinition: Alternative PIN format used with AES encryption, conforming to the new ISO SC2 format.\nCode: ANSI:\tANSI0:\tDefinition: ANSI 0 PIN block format.\nCode: BNCM:\tBancomat:\tDefinition: Italian Bancomat PIN block format.\nCode: BKSY:\tBanksys:\tDefinition: Banksys PIN block format.\nCode: DBLD:\tDiebold:\tDefinition: Diebold PIN block format.\nCode: DBLC:\tDieboldCO:\tDefinition: Diebold CO PIN block format.\nCode: ECI2:\tECI2:\tDefinition: ECI2 PIN block format.\nCode: ECI3:\tECI3:\tDefinition: ECI3 PIN block format.\nCode: EMVS:\tEMVRSA:\tDefinition: EMV ISO2 PIN block format encrypted with the EMV RSA cryptographic key for the PIN.\nCode: IBM3:\tIBM3624:\tDefinition: IBM 3624 PIN block format.\nCode: VIS2:\tVISA2:\tDefinition: VISA2 PIN block format.\nCode: VIS3:\tVISA3:\tDefinition: VISA3 PIN block format.",
            "enum": [
                "ISO0",
                "ISO1",
                "ISO2",
                "ISO3",
                "ISO4",
                "ISO5"
            ],
            "example": "ISO0"
        },
        "PlainCardData17": {
            "description": "Sensitive data associated with a payment card.",
            "properties": {
                "AddtlCardData": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "NtryMd": {
                    "$ref": "#/$defs/CardDataReading5Code"
                },
                "PAN": {
                    "$ref": "#/$defs/Min8Max28NumericText"
                },
                "Trck1": {
                    "$ref": "#/$defs/Max76Text"
                },
                "Trck2": {
                    "$ref": "#/$defs/Max37Text"
                },
                "Trck3": {
                    "$ref": "#/$defs/Max104Text"
                }
            },
            "type": "object"
        },
        "PlainCardData22": {
            "description": "Sensible data associated with the payment card performing the transaction.",
            "properties": {
                "CardSeqNb": {
                    "$ref": "#/$defs/Min2Max3NumericText"
                },
                "CrdhldrNm": {
                    "$ref": "#/$defs/Max45Text"
                },
                "FctvDt": {
                    "$ref": "#/$defs/Max10Text"
                },
                "PAN": {
                    "$ref": "#/$defs/Min8Max28NumericText"
                },
                "SvcCd": {
                    "$ref": "#/$defs/Exact3NumericText"
                },
                "Trck1": {
                    "$ref": "#/$defs/Max76Text"
                },
                "Trck2": {
                    "$ref": "#/$defs/Max37Text"
                },
                "Trck3": {
                    "$ref": "#/$defs/Max104Text"
                },
                "XpryDt": {
                    "$ref": "#/$defs/Max10Text"
                }
            },
            "required": [
                "PAN"
            ],
            "type": "object"
        },
        "PlanOwner1Code": {
            "type": "string",
            "description": "Contains list of plan owners\nCode: ACQR:\tAcquirer:\tDefinition: Plan owner is an acquirer.\nCode: ACCP:\tAcceptor:\tDefinition: Plan owner is an acceptor.\nCode: ISSR:\tIssuer:\tDefinition: Plan owner is an issuer.\nCode: OTHN:\tOtherNational:\tDefinition: plan owner type is other national.\nCode: OTHP:\tOtherPrivate:\tDefinition: plan owner type is other private.",
            "enum": [
                "ACCP",
                "ACQR",
                "ISSR",
                "OTHN",
                "OTHP"
            ]
        },
        "PlusOrMinusIndicator": {
            "$ref": "#/$defs/xs:boolean",
            "description": "Indicates a positive or negative value."
        },
        "POICommunicationType2Code": {
            "type": "string",
            "description": "Low level communication of the hardware or software component toward another component or an external entity.\nCode: USBH:\tUSBHost:\tDefinition: Communication with a host from an USB port.\nCode: USBD:\tUSBDevice:\tDefinition: Communication with a USB stick or any USB device.\nCode: ETHR:\tEthernet:\tDefinition: Ethernet port to communicate.\nCode: WIFI:\tWifi:\tDefinition: Wifi communication with another component.\nCode: PSTN:\tPSTN:\tDefinition: Communication with a host using Public Switching Telephone Network.\nCode: BLTH:\tBluetooth:\tDefinition: Communication with a host using Bluetooth.\nCode: GSMF:\tGSM:\tDefinition: Communication with a host using GSM.\nCode: GPRS:\tGPRS:\tDefinition: Communication with a host using GPRS.\nCode: RS23:\tRS232:\tDefinition: Serial port to communicate.\nCode: WT2G:\tWirelessTechnology2G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 2G technology (e.g EDGE or PDC).\nCode: WT3G:\tWirelessTechnology3G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 3G technology.\nCode: WT4G:\tWirelessTechnology4G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 4G technology.\nCode: WT5G:\tWirelessTechnology5G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 5G technology.",
            "enum": [
                "BLTH",
                "ETHR",
                "GPRS",
                "GSMF",
                "PSTN",
                "RS23",
                "USBD",
                "USBH",
                "WIFI",
                "WT2G",
                "WT3G",
                "WT4G",
                "WT5G"
            ],
            "example": "BLTH"
        },
        "POIComponentAssessment1Code": {
            "type": "string",
            "description": "Type of assessment of a POI component (Point of Interaction).\nCode: EVAL:\tEvaluation:\tDefinition: Evaluation by a lab or a tool.\nCode: CERT:\tCertification:\tDefinition: Certification number delivered by a certification body.\nCode: APPL:\tApproval:\tDefinition: Approval number delivered by an approval centre.",
            "enum": [
                "APPL",
                "CERT",
                "EVAL"
            ],
            "example": "APPL"
        },
        "POIComponentStatus1Code": {
            "type": "string",
            "description": "Status of a component belonging to a POI Terminal (Point of Interaction).\nCode: WAIT:\tWaitingActivation:\tDefinition: Component not yet activated.\nCode: OPER:\tInOperation:\tDefinition: Component activated and in operation.\nCode: OUTD:\tOutOfOrder:\tDefinition: Component not working properly.\nCode: DACT:\tDeactivated:\tDefinition: Component has been deactivated.",
            "enum": [
                "WAIT",
                "OUTD",
                "OPER",
                "DACT"
            ],
            "example": "WAIT"
        },
        "POIComponentType6Code": {
            "type": "string",
            "description": "Type of component belonging to a POI (Point of Interaction) Terminal.\nCode: SOFT:\tSoft:\tDefinition: Payment or other software application.\nCode: EMVK:\tEMVKernel:\tDefinition: EMV application kernel (EMV is the chip card specifications initially defined by Eurocard, Mastercard and Visa).\nCode: EMVO:\tEMVLevel1:\tDefinition: EMV physical interface (EMV is the chip card specifications initially defined by Eurocard, Mastercard and Visa).\nCode: MRIT:\tMerchantInterface:\tDefinition: Merchant interface.\nCode: CHIT:\tCardholderInterface:\tDefinition: Cardholder Interface.\nCode: SECM:\tSecureModule:\tDefinition: Security module.\nCode: PEDV:\tPINEntryDevice:\tDefinition: Personal identification number (or PIN) entry device (PED).\nCode: AQPR:\tAcquirerParameters:\tDefinition: Acquirer specific configuration parameters for the point of interaction (POI) system.\nCode: MRPR:\tMerchantParameters:\tDefinition: Merchant configuration parameters for the point of interaction (POI).\nCode: VDPR:\tVendorParameters:\tDefinition: Point of interaction parameters defined by the manufacturer for instance the PIN verification capabilities.\nCode: AQPP:\tAcquirerProtocolParameters:\tDefinition: Parameters for acquirer interface of the point of interaction, including acquirer host configuration parameters.\nCode: APPR:\tApplicationParameters:\tDefinition: Parameters of a payment application running on the point of interaction.\nCode: DVCE:\tDevice:\tDefinition: Device sub-component of a component of the point of interaction.\nCode: DRVR:\tDriver:\tDefinition: Driver module of the point of interaction.\nCode: MDWR:\tMiddleware:\tDefinition: Software module of the point of interaction.\nCode: OPST:\tOperatingSystem:\tDefinition: Software that manages hardware to provide common services to the applications.\nCode: APLI:\tPaymentApplication:\tDefinition: Payment application software.\nCode: SCPR:\tSecurityParameters:\tDefinition: Security parameters of the point of interaction.\nCode: SERV:\tServer:\tDefinition: Payment server of a point of interaction system.\nCode: TERM:\tTerminal:\tDefinition: Payment terminal point of interaction.\nCode: TLPR:\tTerminalParameters:\tDefinition: Manufacturer configuration parameters of the point of interaction.\nCode: CRTF:\tCertificateParameters:\tDefinition: Certificate provided by a terminal manager.\nCode: TMSP:\tTMSProtocolParameters:\tDefinition: Configuration parameters for the TMS protocol.\nCode: SAPR:\tSaleToPOIProtocolParameters:\tDefinition: Parameters related to the Sale to POI protocol.\nCode: SACP:\tSaleComponent:\tDefinition: Component of the Sale system.\nCode: LOGF:\tLogFile:\tDefinition: Any repository used for recording log traces.\nCode: MDFL:\tMediaFile:\tDefinition: Media file managed by an application of the POI.\nCode: CONF:\tConfigurationFile:\tDefinition: Configuration file relevant for the POI.\nCode: RPFL:\tReportFile:\tDefinition: Report file generated by the POI.",
            "enum": [
                "AQPP",
                "APPR",
                "TLPR",
                "SCPR",
                "SERV",
                "TERM",
                "DVCE",
                "SECM",
                "APLI",
                "EMVK",
                "EMVO",
                "MDWR",
                "DRVR",
                "OPST",
                "MRPR",
                "CRTF",
                "TMSP",
                "SACP",
                "SAPR",
                "LOGF",
                "MDFL",
                "SOFT",
                "CONF",
                "RPFL"
            ],
            "example": "AQPP"
        },
        "PointOfInteraction14": {
            "description": "Point of interaction (POI) performing the transaction.",
            "properties": {
                "Cmpnt": {
                    "items": {
                        "$ref": "#/$defs/PointOfInteractionComponent15"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Cpblties": {
                    "$ref": "#/$defs/PointOfInteractionCapabilities9"
                },
                "GrpId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Id": {
                    "$ref": "#/$defs/GenericIdentification177"
                },
                "SysNm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "TermnlIntgtn": {
                    "$ref": "#/$defs/LocationCategory3Code"
                },
                "TmZone": {
                    "$ref": "#/$defs/Max70Text"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "PointOfInteractionCapabilities9": {
            "description": "Capabilities of the POI (Point Of Interaction) performing the transaction.",
            "properties": {
                "ApprvlCdLngth": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "CardCaptrCpbl": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "CardRdngCpblties": {
                    "items": {
                        "$ref": "#/$defs/CardDataReading8Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CrdhldrVrfctnCpblties": {
                    "items": {
                        "$ref": "#/$defs/CardholderVerificationCapability4Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "MsgCpblties": {
                    "items": {
                        "$ref": "#/$defs/DisplayCapabilities4"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "MxScrptLngth": {
                    "$ref": "#/$defs/PositiveNumber"
                },
                "OnLineCpblties": {
                    "$ref": "#/$defs/OnLineCapability1Code"
                },
                "PINLngthCpblties": {
                    "$ref": "#/$defs/PositiveNumber"
                }
            },
            "type": "object"
        },
        "PointOfInteractionComponent15": {
            "description": "Data related to a component of the POI (Point Of Interaction) performing the transaction.",
            "properties": {
                "Assmnt": {
                    "items": {
                        "$ref": "#/$defs/PointOfInteractionComponentAssessment1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Chrtcs": {
                    "$ref": "#/$defs/PointOfInteractionComponentCharacteristics10"
                },
                "Id": {
                    "$ref": "#/$defs/PointOfInteractionComponentIdentification2"
                },
                "Packg": {
                    "items": {
                        "$ref": "#/$defs/PackageType5"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "StdCmplc": {
                    "items": {
                        "$ref": "#/$defs/GenericIdentification48"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Sts": {
                    "$ref": "#/$defs/PointOfInteractionComponentStatus3"
                },
                "SubTpInf": {
                    "$ref": "#/$defs/Max70Text"
                },
                "Tp": {
                    "$ref": "#/$defs/POIComponentType6Code"
                }
            },
            "required": [
                "Tp",
                "Id"
            ],
            "type": "object"
        },
        "PointOfInteractionComponentAssessment1": {
            "description": "Assessments for the component of the point of interaction.",
            "properties": {
                "Assgnr": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "DlvryDt": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "Nb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Tp": {
                    "$ref": "#/$defs/POIComponentAssessment1Code"
                },
                "XprtnDt": {
                    "$ref": "#/$defs/ISODateTime"
                }
            },
            "required": [
                "Tp",
                "Assgnr",
                "Nb"
            ],
            "type": "object"
        },
        "PointOfInteractionComponentCharacteristics10": {
            "description": "Physical and logical characteristics of a POI component (Point of Interaction).",
            "properties": {
                "Com": {
                    "items": {
                        "$ref": "#/$defs/CommunicationCharacteristics5"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Mmry": {
                    "items": {
                        "$ref": "#/$defs/MemoryCharacteristics1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SbcbrIdntyMdls": {
                    "$ref": "#/$defs/Number"
                },
                "SctyAccsMdls": {
                    "$ref": "#/$defs/Number"
                },
                "SctyElmt": {
                    "items": {
                        "$ref": "#/$defs/CryptographicKey18"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "PointOfInteractionComponentIdentification2": {
            "description": "Identification of a POI (Point of Interaction) component.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max256Text"
                },
                "ItmNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PrvdrId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SrlNb": {
                    "$ref": "#/$defs/Max256Text"
                }
            },
            "type": "object"
        },
        "PointOfInteractionComponentStatus3": {
            "description": "Status of a POI component (Point of Interaction).",
            "properties": {
                "Sts": {
                    "$ref": "#/$defs/POIComponentStatus1Code"
                },
                "VrsnNb": {
                    "$ref": "#/$defs/Max256Text"
                },
                "XpryDt": {
                    "$ref": "#/$defs/ISODate"
                }
            },
            "type": "object"
        },
        "PositiveNumber": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:decimal"
                },
                {
                    "exclusiveMinimum": false,
                    "minimum": 1
                }
            ],
            "description": "Number of objects represented as a positive integer.",
            "example": "123456789012345678"
        },
        "PostalAddress2": {
            "description": "Address of a party expressed in a formal structure, usually according to the country's postal services specifications.",
            "properties": {
                "Ctry": {
                    "$ref": "#/$defs/CountryCode"
                },
                "CtrySubDvsn": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PstCdId": {
                    "$ref": "#/$defs/Max16Text"
                },
                "StrtNm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "TwnNm": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "PstCdId",
                "TwnNm",
                "Ctry"
            ],
            "type": "object"
        },
        "PostalAddress22": {
            "description": "Information that locates and identifies a specific address, as defined by postal services.",
            "properties": {
                "AdrLine": {
                    "items": {
                        "$ref": "#/$defs/Max70Text"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "type": "array"
                },
                "AdrTp": {
                    "$ref": "#/$defs/AddressType2Code"
                },
                "BldgNb": {
                    "$ref": "#/$defs/Max16Text"
                },
                "CtryCd": {
                    "$ref": "#/$defs/Min2Max3AlphaText"
                },
                "CtrySubDvsn": {
                    "items": {
                        "$ref": "#/$defs/Max35Text"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "type": "array"
                },
                "Dept": {
                    "$ref": "#/$defs/Max70Text"
                },
                "PstCd": {
                    "$ref": "#/$defs/Max16Text"
                },
                "StrtNm": {
                    "$ref": "#/$defs/Max70Text"
                },
                "SubDept": {
                    "$ref": "#/$defs/Max70Text"
                },
                "TwnNm": {
                    "$ref": "#/$defs/Max70Text"
                }
            },
            "type": "object"
        },
        "Product6": {
            "description": "Purchased item.",
            "properties": {
                "AddtlPdctCd": {
                    "$ref": "#/$defs/Max70Text"
                },
                "AddtlPdctDesc": {
                    "$ref": "#/$defs/Max256Text"
                },
                "DlvryLctn": {
                    "$ref": "#/$defs/Max10Text"
                },
                "DlvrySvc": {
                    "$ref": "#/$defs/AttendanceContext2Code"
                },
                "ItmId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PdctAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "PdctAmtSgn": {
                    "$ref": "#/$defs/PlusOrMinusIndicator"
                },
                "PdctCd": {
                    "$ref": "#/$defs/Max70Text"
                },
                "PdctDesc": {
                    "$ref": "#/$defs/Max140Text"
                },
                "PdctQty": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "SaleChanl": {
                    "$ref": "#/$defs/Max70Text"
                },
                "TaxTp": {
                    "$ref": "#/$defs/Max35Text"
                },
                "UnitOfMeasr": {
                    "$ref": "#/$defs/UnitOfMeasure6Code"
                },
                "UnitPric": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "UnitPricSgn": {
                    "$ref": "#/$defs/PlusOrMinusIndicator"
                },
                "ValAddedTax": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                }
            },
            "required": [
                "PdctCd",
                "PdctAmt"
            ],
            "type": "object"
        },
        "QRCodeEncodingMode1Code": {
            "type": "string",
            "description": "Encoding Mode of Quick Response Code.\nCode: NUME:\tNumeric:\tDefinition: Numeric value provided in Barcode field.\nCode: ALFA:\tAlphanumeric:\tDefinition: Alphanumeric value provided in Barcode field.\nCode: BINA:\tBinary:\tDefinition: Binary value provided in Quick Response Code Binary Value.\nCode: KANJ:\tKanji:\tDefinition: Kanji value provided in Quick Response Code Binary Value.",
            "enum": [
                "ALFA",
                "BINA",
                "KANJ",
                "NUME"
            ]
        },
        "QRCodeErrorCorrection1Code": {
            "type": "string",
            "description": "Error Correction mode of Quick Response Code.\nCode: L007:\tErrorCorrection7Percent:\tDefinition: Reed-Solomon error correction  7%\nCode: M015:\tErrorCorrection15Percent:\tDefinition: Reed-Solomon error correction 15%\nCode: Q025:\tErrorCorrection25Percent:\tDefinition: Reed-Solomon error correction 25%\nCode: H030:\tErrorCorrection30Percent:\tDefinition: Reed-Solomon error correction 30%",
            "enum": [
                "M015",
                "Q025",
                "H030",
                "L007"
            ]
        },
        "Recipient13Choice": {
            "description": "Identification of a cryptographic asymmetric key.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
				"type": "object",
					"properties" {
						"IssrAndSrlNb": {
							"$ref": "#/$defs/IssuerAndSerialNumber2"
						}
					},
					"required": [
						"IssrAndSrlNb"
					],
				},
				{
				"type": "object",
					"properties" {
						"SbjtKeyIdr": {
							"$ref": "#/$defs/Max140Binary"
						}
					},
					"required": [
						"SbjtKeyIdr"
					],
				},						
			],
            "type": "object"
        },
        "Recipient15Choice": {
            "description": "Transport key or key encryption key (KEK) for the recipient.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
				"type": "object",
					"properties" {
						"KEK": {
							"$ref": "#/$defs/KEK9"
						}
					},
					"required": [
						"KEK"
					],
				},
				{
				"type": "object",
					"properties" {
						"KeyIdr": {
							"$ref": "#/$defs/KEKIdentifier7"
						}
					},
					"required": [
						"KeyIdr"
					],
				},		
				"type": "object",
					"properties" {
						"KeyTrnsprt": {
							"$ref": "#/$defs/KeyTransport10"
						}
					},
					"required": [
						"KeyTrnsprt"
					],
				},					
			],
            "type": "object"
        },
        "RecurringTransaction6": {
            "description": "Element related to recurring transaction.",
            "properties": {
                "GracePrd": {
                    "items": {
                        "$ref": "#/$defs/GracePeriod1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PlanId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PlanNtce": {
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "PrdUnit": {
                    "$ref": "#/$defs/Frequency3Code"
                },
                "SeqNb": {
                    "$ref": "#/$defs/Number"
                }
            },
            "type": "object"
        },
        "RelativeDistinguishedName1": {
            "description": "Relative distinguished name defined by X.500 and X.509.",
            "properties": {
                "AttrTp": {
                    "$ref": "#/$defs/AttributeType1Code"
                },
                "AttrVal": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "required": [
                "AttrTp",
                "AttrVal"
            ],
            "type": "object"
        },
        "Response9Code": {
            "type": "string",
            "description": "Result of the performed service.\nCode: DECL:\tDeclined:\tDefinition: Service is declined.\nCode: APPR:\tApproved:\tDefinition: Service has been successfuly provided.\nCode: PART:\tPartialApproved:\tDefinition: Service has been partialy provided.\nCode: TECH:\tTechnicalError:\tDefinition: Service cannot be provided for technical reason (eg timeout contacting the Issuer, security problem).\nCode: FRTH:\tFurtherAction:\tDefinition: Further action required to complete the transaction, for instance a referral.\nCode: UNPR:\tNotProcessed:\tDefinition: Advice message could not be processed.\nCode: PRCS:\tProcessed:\tDefinition: Advice message is processed.\nCode: FAIL:\tFailure:\tDefinition: Processing of the request fails for various reasons. Some further processing according to the type of requested service, the context of the process, and some additional precision about the failure notified in the ErrorCondition data element.\nCode: SUCC:\tSuccess:\tDefinition: Processing OK. Information related to the result of the processing is contained in other parts of the response message.\nCode: DFRD:\tDeferred:\tDefinition: Procesing of the service is deferred.\nCode: INPS:\tInProgress:\tDefinition: Request is still in progress.\nCode: NRTD:\tNoReasonToDecline:\tDefinition: Validate the data that couold be verified.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of processing result defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of processing result defined at private level.\nCode: OTRD:\tOtherResult:\tDefinition: Other type of result.\nCode: PPRC:\tPartiallyProcessed:\tDefinition: Processing of the service has been partially performed.\nCode: REJT:\tRejected:\tDefinition: Service was rejected.\nCode: UNRV:\tUnderReview:\tDefinition: Service is under review.\nCode: SUSP:\tSuspended:\tDefinition: Transaction has been received but hasn't been processed.\nCode: WARN:\tWarning:\tDefinition: An additional Response Code, mainly a functional one, should be considered to identify the outcome of the request.",
            "enum": [
                "APPR",
                "DECL",
                "PART",
                "SUSP",
                "TECH"
            ]
        },
        "ResponseType10": {
            "description": "Response of a requested service.",
            "properties": {
                "AddtlRspnInf": {
                    "$ref": "#/$defs/Max140Text"
                },
                "Rspn": {
                    "$ref": "#/$defs/Response9Code"
                },
                "RspnRsn": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Rspn"
            ],
            "type": "object"
        },
        "RetailerMessage1Code": {
            "type": "string",
            "description": "Identifies the type of process related to the message.\nCode: SFSQ:\tSaleFinancialServiceRequest:\tDefinition: Request a financial service like payment, reversal, loyalty, Balance Inquiry, etc.\nCode: SFSP:\tSaleFinancialServiceResponse:\tDefinition: Response to a financial service request.\nCode: SFRQ:\tSaleFinancialReconciliationRequest:\tDefinition: Request a reconciliation (different types) between Sale System and POI System.\nCode: SFRP:\tSaleFinancialReconciliationResponse:\tDefinition: Response to a Reconciliation Request.\nCode: SASQ:\tSessionManagementRequest:\tDefinition: Request the management of a session: login, logout and diagnosis services. Initiated by the Sale system.\nCode: SASP:\tSessionManagementResponse:\tDefinition: Response to a session management request to initiate/terminate a session.\nCode: SAAQ:\tAdminRequest:\tDefinition: To select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.\nCode: SAAP:\tAdminResponse:\tDefinition: Response to the Admin request.\nCode: SARQ:\tReportRequest:\tDefinition: To request, by the Sale System, a report on a list of transactions on the POI system, or the status of a transaction.\nCode: SARP:\tReportResponse:\tDefinition: Response to a Report request.\nCode: SSAB:\tAbort:\tDefinition: Abort the current process or the last request.\nCode: SSEN:\tEventNotification:\tDefinition: Notify the other party of an event that occurs on its side.\nCode: SSRJ:\tRejection:\tDefinition: Reject a previous received message, for technical or functional reasons.\nCode: SSMQ:\tMessageStatusRequest:\tDefinition: Request the status of a previous message for which the Sale system has no response.\nCode: SSMR:\tMessageStatusResponse:\tDefinition: Response to a Message Status request.\nCode: SDDR:\tDeviceRequest:\tDefinition: Request one or several functions of the device, from user Interface or payment peripherals on the POI system or on the Sale system. Functions can be Display, Input, Print, play sound, Card reader capabilities or Transmit a message.\nCode: SDDP:\tDeviceResponse:\tDefinition: Response to a Device request.",
            "enum": [
                "SSAB",
                "SAAQ",
                "SAAP",
                "SDDR",
                "SDDP",
                "SSEN",
                "SSMQ",
                "SSMR",
                "SSRJ",
                "SARQ",
                "SARP",
                "SFRP",
                "SFRQ",
                "SFSQ",
                "SFSP",
                "SASQ",
                "SASP"
            ]
        },
        "RetailerSaleEnvironment2": {
            "description": "Environment of Retailer for this message.",
            "properties": {
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "DbtPrefrdFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "LltyHdlg": {
                    "$ref": "#/$defs/LoyaltyHandling1Code"
                },
                "MaxCshBckAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "MinAmtToDlvr": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "MinSpltAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "SaleCpblties": {
                    "items": {
                        "$ref": "#/$defs/SaleCapabilities1Code"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "RetailerService2Code": {
            "type": "string",
            "description": "List of specific services for ServiceRequest\nCode: FSPQ:\tFinancialPaymentRequest:\tDefinition: The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...).\nCode: FSRQ:\tFinancialReversalRequest:\tDefinition: The Sale System requests to the POI System to perform a reversal partial or complete to cancel a former payment service.\nCode: FSIQ:\tFinancialBalanceInquiryRequest:\tDefinition: The Sale System requests to the POI System to perform balance inquiry on the main account.\nCode: FSBQ:\tFinancialBatchRequest:\tDefinition: The Batch message pair is used to request or get the result of transactions (payment, loyalty and reversal) performed without connection to the Sale system (Payment delivery).\nCode: FSLQ:\tFinancialLoyaltyRequest:\tDefinition: The Sale System requests to the POI System a loyalty service like loading or redeem.\nCode: FSVQ:\tFinancialStoredValueRequest:\tDefinition: The Sale System requests to the POI System to manage a stored value card or account (eg. Load, Payment, Reimbursement).\nCode: FSEQ:\tFinancialEnableServiceRequest:\tDefinition: The Sale System requests to the POI System to enable a service on its side.\nCode: FSAQ:\tFinancialCardAcquisitionRequest:\tDefinition: The Sale System requests to the POI System to handle a card data acquisition on the card reader.\nCode: FSCQ:\tFinancialReconciliationRequest:\tDefinition: The Sale System request to the POI System different kinds of transaction reconciliation. \nCode: FSPP:\tFinancialPaymentResponse:\tDefinition: The POI System sends a response to a payment request (Purchase/refund/PWCB/MOTO Payment/...).\nCode: FSRP:\tFinancialReversalResponse:\tDefinition: The POI System sends a response to a reversal request.\nCode: FSIP:\tFinancialBalanceInquiryResponse:\tDefinition: The POI System sends a response to a Balance Inquiry request.\nCode: FSBP:\tFinancialBatchResponse:\tDefinition: The POI System sends a response to a batch processing request.\nCode: FSLP:\tFinancialLoyaltyResponse:\tDefinition: The POI System sends a response to a loyalty processing request.\nCode: FSVP:\tFinancialStoredValueResponse:\tDefinition: The POI System sends a response to a stored value card or account request.\nCode: FSEP:\tFinancialEnableServiceResponse:\tDefinition: The POI System sends a response after enabling or not some service.\nCode: FSAP:\tFinancialCardAcquisitionResponse:\tDefinition: The POI System sends a response to a card data acquisition request.\nCode: FSCP:\tFinancialReconciliationResponse:\tDefinition: The POI System sends a response to a reconciliation request.\nCode: ADAQ:\tAdministrativeAdminRequest:\tDefinition: An administrative request, to select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.\nCode: SMIQ:\tAdministrativeSessionManagementLoginRequest:\tDefinition: The Sale System requests a login to the POI System.\nCode: SMOQ:\tAdministrativeSessionManagementLogoutRequest:\tDefinition: The Sale System requests a logout to the POI System.\nCode: SMDQ:\tAdministrativeSessionManagementDiagnosisRequest:\tDefinition: The Sale System requests a session diagnosis to the POI System.\nCode: RPTQ:\tAdministrativeReportTransactionRequest:\tDefinition: The Sale System requests to the POI System a report on a list of transactions.\nCode: RPAQ:\tAdministrativeReportGetTotalsRequest:\tDefinition: The Sale System requests to the POI System a report on the totals figures of the POI system.\nCode: ADAP:\tAdministrativeAdminResponse:\tDefinition: The POI System responds to an administrative request.\nCode: SMIP:\tAdministrativeSessionManagementLoginResponse:\tDefinition: The POI System responds to a login request.\nCode: SMOP:\tAdministrativeSessionManagementLogoutResponse:\tDefinition: The POI System responds to a logout request.\nCode: SMDP:\tAdministrativeSessionManagementDiagnosisResponse:\tDefinition: The POI System responds to a diagnosis request.\nCode: RPTP:\tAdministrativeReportTransactionResponse:\tDefinition: The POI System responds to a transaction report request.\nCode: RPAP:\tAdministrativeReportGetTotalsResponse:\tDefinition: The POI System responds to a totals figures request.\nCode: SSAB:\tSystemAbort:\tDefinition: Abort a former request or message by the sale system.\nCode: SSEN:\tSystemEventNotification:\tDefinition: Send an Event notification to the other party.\nCode: SSRR:\tSystemMessageRejection:\tDefinition: Send a rejection for a previous message.\nCode: SSSQ:\tSystemMessageStatusRequest:\tDefinition: The Sale System requests to the POI System the status of a previous transaction.\nCode: SSSP:\tSystemMessageStatusResponse:\tDefinition: The POI System responds to a message status request.\nCode: DINQ:\tDeviceInputRequest:\tDefinition: One system requests to the other System to get data input. \nCode: DDYQ:\tDeviceDisplayRequest:\tDefinition: One System requests the other to display a message for cashier or customer.\nCode: DPRQ:\tDevicePrintRequest:\tDefinition: One system requests to the other System to print data.\nCode: DSOQ:\tDevicePlaySoundRequest:\tDefinition: One system requests to the Other System to play a sound.\nCode: DSIQ:\tDeviceSecureInputRequest:\tDefinition: One system requests to the Other System to securely get data input (e.g. for PIN).\nCode: DCIQ:\tDeviceInitialisationCardReaderRequest:\tDefinition: Service to send parameters to use when card reader initializes a new communication with the card.\nCode: DCAQ:\tDeviceSendApplicationProtocolDataUnitCardReaderRequest:\tDefinition: A service to send commands to a card.\nCode: DCPQ:\tDevicePowerOffCardReaderRequest:\tDefinition: The Sale system requests to the POI System to power off the card reader.\nCode: DCOQ:\tDeviceTransmissionMessageRequest:\tDefinition: The Sale system requests to the POI System to transmit a message (for instance to a mobile server).\nCode: DINO:\tDeviceInputNotification:\tDefinition: One system sends a notification to the POI System to update a input request.\nCode: DDYP:\tDeviceDisplayResponse:\tDefinition: One system responds to the other system for a display request.\nCode: DINP:\tDeviceInputResponse:\tDefinition: One system responds to the other System for a input request.\nCode: DPRP:\tDevicePrintResponse:\tDefinition: One system responds to the other System for a print request.\nCode: DSOP:\tDevicePlaySoundResponse:\tDefinition: One system responds to the other System for a play sound request.\nCode: DSIP:\tDeviceSecureInputResponse:\tDefinition: One system responds to the other System for secure data input.\nCode: DCIP:\tDeviceInitialisationCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader initialisation.\nCode: DCAP:\tDeviceSendApplicationProtocolDataUnitCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader Application Protocol Data Unit sending.\nCode: DCPP:\tDevicePowerOffCardRequestResponse:\tDefinition: The POI system responds to the Sale System for a card reader power off.\nCode: DCOP:\tDeviceTransmissionMessageResponse:\tDefinition: The POI system responds to the Sale System after a message transmission.",
            "enum": [
                "FSPQ",
                "FSRQ",
                "FSIQ",
                "FSBQ",
                "FSLQ",
                "FSVQ",
                "FSEQ",
                "FSAQ",
                "FSCQ"
            ]
        },
        "ReversalReason1Code": {
            "type": "string",
            "description": "Reason of the payment or loyalty reversal.\nCode: CUSC:\tCustomerCancellation:\tDefinition: Customer cancels the transaction.\nCode: MERC:\tMerchantCancellation:\tDefinition: Merchant or Cashier cancels the transaction.\nCode: MALF:\tMalfuntion:\tDefinition: Reversal after a suspection of malfunction of the POI system.\nCode: UNAB:\tUnableToComplete:\tDefinition: POI System unable to complete transaction.",
            "enum": [
                "CUSC",
                "MALF",
                "MERC",
                "UNAB"
            ]
        },
        "ReversalRequest6": {
            "description": "Data to request a reversal.",
            "properties": {
                "CstmrOrdr": {
                    "$ref": "#/$defs/CustomerOrder1"
                },
                "LltyData": {
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "RvsdAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "RvslRsn": {
                    "$ref": "#/$defs/ReversalReason1Code"
                },
                "RvslTx": {
                    "$ref": "#/$defs/CardPaymentTransaction136"
                }
            },
            "required": [
                "RvslRsn"
            ],
            "type": "object"
        },
        "SaleCapabilities1Code": {
            "type": "string",
            "description": "Hardware capabilities of the Sale Terminal.\nCode: CHST:\tCashierStatus:\tDefinition: To display to the Cashier a new state on which the POI is entering. \tFor instance, during a payment, the POI could display to the Cashier that POI request an authorisation to the host acquirer.\nCode: CHER:\tCashierError:\tDefinition: To display to the Cashier information related to an error situation occurring on the POI.\nCode: CHDI:\tCashierDisplay:\tDefinition: Standard Cashier display interface (to ask question, or to show information). \nCode: POIR:\tPOIReplication:\tDefinition: Information displayed on the Cardholder POI interface, replicated on the Cashier interface.\nCode: CHIN:\tCashierInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element). The output device attached to this input device is the CashierDisplay device.\nCode: CUAS:\tCustomerAssistance:\tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.\nCode: CUDI:\tCustomerDisplay:\tDefinition: Standard Customer display interface used by the POI System to ask question, or to show information to the Customer inside a Service dialogue.\nCode: CUER:\tCustomerError:\tDefinition: To display to the Customer information is related to an error situation occurring on the Sale Terminal during a Sale transaction.\nCode: CUIN:\tCustomerInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element).\nCode: PRRP:\tPrinterReceipt:\tDefinition: Printer for the Payment receipt.\nCode: PRDC:\tPrinterDocument:\tDefinition: When the POI System wants to print specific document (check, dynamic currency conversion ...).\nCode: PRVC:\tPrinterVoucher:\tDefinition: Coupons, voucher or special ticket generated by the POI and to be printed. ",
            "enum": [
                "CHDI",
                "CHER",
                "CHIN",
                "CHST",
                "CUDI",
                "CUAS",
                "CUER",
                "CUIN",
                "POIR",
                "PRDC",
                "PRRP",
                "PRVC"
            ]
        },
        "SaleContext4": {
            "description": "Sale context in which the transaction is performed.",
            "properties": {
                "AddtlSaleData": {
                    "$ref": "#/$defs/Max70Text"
                },
                "AllwdNtryMd": {
                    "items": {
                        "$ref": "#/$defs/CardDataReading8Code"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CshrId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "CshrLang": {
                    "items": {
                        "$ref": "#/$defs/LanguageCode"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "CstmrOrdrReqFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "DlvryNoteNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ForceOnlnFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "InvcNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PurchsOrdrNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "ReuseCardDataFlg": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "RmngAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "SaleId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SaleRcncltnId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SaleRefNb": {
                    "$ref": "#/$defs/Max35Text"
                },
                "SaleTknScp": {
                    "$ref": "#/$defs/SaleTokenScope1Code"
                },
                "ShftNb": {
                    "$ref": "#/$defs/Max2NumericText"
                },
                "SpltPmt": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "SpnsrdMrchnt": {
                    "items": {
                        "$ref": "#/$defs/Organisation26"
                    },
                    "minItems": 0,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "SaleTokenScope1Code": {
            "type": "string",
            "description": "Scope of the token that identifies the payment mean of the customer.\nCode: SNGL:\tSingleUse:\tDefinition: The token is generated to recognise  a customer during the lifetime of a transaction.\nCode: MULT:\tMultipleUse:\tDefinition: The token is generated to recognise a customer for a longer period.",
            "enum": [
                "MULT",
                "SNGL"
            ]
        },
        "SaleToPOIServiceRequestV06": {
            "description": "This SaleToPOIServiceRequest message is sent by a sale system to trig a financial service on POI system.",
            "properties": {
                "Hdr": {
                    "$ref": "#/$defs/Header41"
                },
                "SctyTrlr": {
                    "$ref": "#/$defs/ContentInformationType38"
                },
                "SvcReq": {
                    "$ref": "#/$defs/ServiceRequest7"
                }
            },
            "required": [
                "Hdr",
                "SvcReq"
            ],
            "type": "object"
        },
        "SensitiveMobileData1": {
            "description": "Sensitive information related to the mobile phone.",
            "properties": {
                "IMEI": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "IMSI": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "MSISDN": {
                    "$ref": "#/$defs/Max35NumericText"
                }
            },
            "required": [
                "MSISDN"
            ],
            "type": "object"
        },
        "ServiceRequest7": {
            "description": "Defines the service to be called.",
            "properties": {
                "BalNqryReq": {
                    "$ref": "#/$defs/BalanceInquiryRequest7"
                },
                "BtchReq": {
                    "$ref": "#/$defs/BatchRequest6"
                },
                "CardAcqstnReq": {
                    "$ref": "#/$defs/CardAcquisitionRequest3"
                },
                "Cntxt": {
                    "$ref": "#/$defs/CardPaymentContext30"
                },
                "Envt": {
                    "$ref": "#/$defs/CardPaymentEnvironment80"
                },
                "LltyReq": {
                    "$ref": "#/$defs/LoyaltyRequest6"
                },
                "NblSvcReq": {
                    "$ref": "#/$defs/EnableServiceRequest6"
                },
                "PmtReq": {
                    "$ref": "#/$defs/PaymentRequest6"
                },
                "RvslReq": {
                    "$ref": "#/$defs/ReversalRequest6"
                },
                "SplmtryData": {
                    "items": {
                        "$ref": "#/$defs/SupplementaryData1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "StordValReq": {
                    "$ref": "#/$defs/StoredValueRequest7"
                },
                "SvcCntt": {
                    "$ref": "#/$defs/RetailerService2Code"
                }
            },
            "required": [
                "Envt",
                "Cntxt",
                "SvcCntt"
            ],
            "type": "object"
        },
        "SignedData9": {
            "description": "Digital signatures of data from one or several signers.",
            "properties": {
                "Cert": {
                    "items": {
                        "$ref": "#/$defs/Max5000Binary"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "DgstAlgo": {
                    "items": {
                        "$ref": "#/$defs/AlgorithmIdentification36"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "NcpsltdCntt": {
                    "$ref": "#/$defs/EncapsulatedContent3"
                },
                "Sgnr": {
                    "items": {
                        "$ref": "#/$defs/Signer8"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "type": "object"
        },
        "Signer8": {
            "description": "Entity who has signed the data and its digital signature.",
            "properties": {
                "DgstAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification36"
                },
                "SgndAttrbts": {
                    "items": {
                        "$ref": "#/$defs/GenericInformation1"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "SgnrId": {
                    "$ref": "#/$defs/Recipient13Choice"
                },
                "Sgntr": {
                    "$ref": "#/$defs/Max3000Binary"
                },
                "SgntrAlgo": {
                    "$ref": "#/$defs/AlgorithmIdentification33"
                },
                "Vrsn": {
                    "$ref": "#/$defs/Number"
                }
            },
            "required": [
                "DgstAlgo",
                "SgntrAlgo",
                "Sgntr"
            ],
            "type": "object"
        },
        "SimpleIdentificationInformation4": {
            "description": "Information related to an identification, for example, party identification or account identification.",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "StoredValueAccount2": {
            "description": "Identification of the stored value account or the stored value card (Prepaid card).",
            "properties": {
                "AcctTp": {
                    "$ref": "#/$defs/StoredValueAccountType1Code"
                },
                "Bal": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "Brnd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "Id": {
                    "$ref": "#/$defs/Max35Text"
                },
                "IdTp": {
                    "$ref": "#/$defs/CardIdentificationType1Code"
                },
                "NtryMd": {
                    "$ref": "#/$defs/CardDataReading8Code"
                },
                "OwnrNm": {
                    "$ref": "#/$defs/Max45Text"
                },
                "Prvdr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "XpryDt": {
                    "$ref": "#/$defs/Max10Text"
                }
            },
            "type": "object"
        },
        "StoredValueAccountType1Code": {
            "type": "string",
            "description": "Type of stored value account.\nCode: GIFT:\tGiftCard:\tDefinition: Payment mean issued by retailers or banks as a substitute to a non-monetary gift. Usually, this Stored Value item is used only once.\nCode: PHON:\tPhoneCard:\tDefinition: Stored value instrument used to pay telephone services (e.g. card or identifier).\nCode: OTHR:\tOtherPrepaidAccount:\tDefinition: Other non listed stored value instrument.\nCode: GCER:\tGiftCertificate:\tDefinition: Certificate to be given to a customer. Usually one shot voucher.\nCode: CARD:\tSmartCardTag:\tDefinition: Stored value account hold on the chip of a smart card. \nCode: OLVC:\tOnlineVoucher:\tDefinition: Voucher that can be used online once or in several times.\nCode: CWVC:\tCarwashVoucher:\tDefinition: Car wash specific account.\nCode: MLVC:\tMealVoucher:\tDefinition: Meal and check voucher for restaurants.\nCode: MERC:\tMerchantAccount:\tDefinition: Prepaid account open with a merchant or big retailers.\nCode: TRVL:\tTravel:\tDefinition: Travel prepaid account.\nCode: ELMY:\tElectronicMoneyAccount:\tDefinition: Account supporting e-money issued by an electronic money issuer.\nCode: BNKA:\tBankPrepaidAccount:\tDefinition: Prepaid account managed by a financial institution for low income customers.\nCode: CPYA:\tCompanyPrepaidAccount:\tDefinition: Specific prepaid account for companies or professionals expenses.",
            "enum": [
                "BNKA",
                "CWVC",
                "CPYA",
                "ELMY",
                "GIFT",
                "GCER",
                "MLVC",
                "OLVC",
                "MERC",
                "OTHR",
                "PHON",
                "CARD",
                "TRVL"
            ]
        },
        "StoredValueData7": {
            "description": "Data related to the stored value card.",
            "properties": {
                "AcctId": {
                    "$ref": "#/$defs/StoredValueAccount2"
                },
                "Ccy": {
                    "$ref": "#/$defs/ActiveCurrencyCode"
                },
                "EANUPC": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "HstTxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                },
                "ItmAmt": {
                    "$ref": "#/$defs/ImpliedCurrencyAndAmount"
                },
                "OrgnlPOITx": {
                    "$ref": "#/$defs/CardPaymentTransaction136"
                },
                "PdctCd": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Prvdr": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TxTp": {
                    "$ref": "#/$defs/StoredValueTransactionType3Code"
                }
            },
            "required": [
                "TxTp"
            ],
            "type": "object"
        },
        "StoredValueRequest7": {
            "description": "Data to request a stored value service (prepaid card or account).",
            "properties": {
                "Data": {
                    "items": {
                        "$ref": "#/$defs/StoredValueData7"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "SaleTxId": {
                    "$ref": "#/$defs/TransactionIdentifier1"
                }
            },
            "required": [
                "Data"
            ],
            "type": "object"
        },
        "StoredValueTransactionType3Code": {
            "type": "string",
            "description": "Identification of operation to proceed on the stored value account or the stored value card.\nCode: RESV:\tReserve:\tDefinition: Reserve the account (e.g. get an activation code).\nCode: ACTV:\tActivate:\tDefinition: Activate the account or the card.\nCode: LOAD:\tLoad:\tDefinition: Load the account or the card with money.\nCode: ULOA:\tUnload:\tDefinition: Unload the account.\nCode: REVS:\tReverse:\tDefinition: Reverse an activation or loading.\nCode: DUPL:\tDuplicate:\tDefinition: Duplicate the code or number provided by the loading or activation.\nCode: DCTV:\tDeactivate:\tDefinition: Deactivate the account or the card.\nCode: OPEN:\tOpenAccount:\tDefinition: Open the account.\nCode: CLOS:\tCloseAccount:\tDefinition: Close the account.\nCode: BALC:\tBalance:\tDefinition: Balance enquiry.",
            "enum": [
                "ACTV",
                "DUPL",
                "LOAD",
                "RESV",
                "REVS",
                "ULOA",
                "CLOS",
                "DCTV",
                "OPEN",
                "BALC"
            ]
        },
        "SupplementaryData1": {
            "description": "Additional information that can not be captured in the structured fields and/or any other specific block.",
            "properties": {
                "Envlp": {
                    "$ref": "#/$defs/SupplementaryDataEnvelope1"
                },
                "PlcAndNm": {
                    "$ref": "#/$defs/Max350Text"
                }
            },
            "required": [
                "Envlp"
            ],
            "type": "object"
        },
        "SupportedPaymentOption2Code": {
            "type": "string",
            "description": "Specifies the options supported for a payment transaction.\nCode: PART:\tPartialApproval:\tDefinition: The entity supports a partial approval of the payment transaction.\nCode: MSRV:\tPaymentApprovalOnly:\tDefinition: The entity supports the approval of the payment service along with the decline of additional requested services (as cash-back).\nCode: INSI:\tIssuerInstalment:\tDefinition: The sender support IssuerInstalment proposals to the Cardholder.\nCode: PINQ:\tPINRequest:\tDefinition: The sender is able to support Single Tap transaction.",
            "enum": [
                "PART",
                "MSRV",
                "INSI",
                "PINQ"
            ]
        },
        "Token1": {
            "description": "Unencrypted sensitive data of a token.",
            "properties": {
                "PmtTkn": {
                    "$ref": "#/$defs/Max19NumericText"
                },
                "TknAssrncData": {
                    "$ref": "#/$defs/Max140Text"
                },
                "TknAssrncMtd": {
                    "$ref": "#/$defs/Max2NumericText"
                },
                "TknInittdInd": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "TknRqstrId": {
                    "$ref": "#/$defs/Max11NumericText"
                },
                "TknXpryDt": {
                    "$ref": "#/$defs/Exact4NumericText"
                }
            },
            "type": "object"
        },
        "Traceability8": {
            "description": "Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges.",
            "properties": {
                "PrtcolNm": {
                    "$ref": "#/$defs/Max35Text"
                },
                "PrtcolVrsn": {
                    "$ref": "#/$defs/Max6Text"
                },
                "RlayId": {
                    "$ref": "#/$defs/GenericIdentification177"
                },
                "TracDtTmIn": {
                    "$ref": "#/$defs/ISODateTime"
                },
                "TracDtTmOut": {
                    "$ref": "#/$defs/ISODateTime"
                }
            },
            "required": [
                "RlayId",
                "TracDtTmIn",
                "TracDtTmOut"
            ],
            "type": "object"
        },
        "TrackData2": {
            "description": "Magnetic track or equivalent payment card data.",
            "properties": {
                "TrckFrmt": {
                    "$ref": "#/$defs/TrackFormat1Code"
                },
                "TrckNb": {
                    "$ref": "#/$defs/Number"
                },
                "TrckVal": {
                    "$ref": "#/$defs/Max140Text"
                }
            },
            "required": [
                "TrckVal"
            ],
            "type": "object"
        },
        "TrackFormat1Code": {
            "type": "string",
            "description": "Use to identify format of a track on a card or other documents like checks.\nCode: ISOF:\tISOFormat:\tDefinition: ISO card track format - ISO 7813 - ISO 4909.\nCode: JIS1:\tJISIFormat:\tDefinition: Japanese track format I.\nCode: JIS2:\tJISIIFormat:\tDefinition: Japanese track format II.\nCode: AAMV:\tAAMVAFormat:\tDefinition: American driver license.\nCode: CMC7:\tCMC7CheckFormat:\tDefinition: Magnetic Ink Character Recognition, using the CMC-7 font - ISO 1004 Line at the bottom of a check containing the bank account and the check number.\nCode: E13B:\tE13BCheckFormat:\tDefinition: Magnetic Ink Character Recognition, using the E-13B font) Line at the bottom of a check containing the bank account and the check number.",
            "enum": [
                "AAMV",
                "CMC7",
                "E13B",
                "ISOF",
                "JIS1",
                "JIS2"
            ]
        },
        "TransactionAction1Code": {
            "type": "string",
            "description": "Action to realise on a transaction.\nCode: STAR:\tStartTransaction:\tDefinition: Start a transaction by a swipe ahead mechanism, with the services which are enabled.\nCode: STOP:\tStop:\tDefinition: Keep quite after a swipe ahead mechanism.",
            "enum": [
                "STAR",
                "STOP"
            ]
        },
        "TransactionChannel5Code": {
            "type": "string",
            "description": "Identifies the type of the communication channels used by the cardholder to the acceptor system.\nCode: MAIL:\tMailOrder:\tDefinition: Mail order.\nCode: TLPH:\tTelephoneOrder:\tDefinition: Telephone order.\nCode: ECOM:\tElectronicCommerce:\tDefinition: Electronic commerce.\nCode: TVPY:\tTelevisionPayment:\tDefinition: Payment on television.\nCode: BRAN:\tOfficeOrBranch:\tDefinition: Office or branch.\nCode: HOBA:\tHomeBanking:\tDefinition: Home banking.\nCode: FIAD:\tFinancialAdvisor:\tDefinition: Financial advisor.\nCode: MOBL:\tMobilePayment:\tDefinition: Payment performed through a cardholder mobile device.\nCode: SECM:\tSecuredElectronicCommerce:\tDefinition: Electronic commerce with cardholder authentication.\nCode: MPOS:\tMobilePOS:\tDefinition: Payment performed through a merchant mobile device.",
            "enum": [
                "MAIL",
                "TLPH",
                "ECOM",
                "TVPY",
                "SECM",
                "MOBL",
                "MPOS"
            ],
            "example": "MAIL"
        },
        "TransactionEnvironment1Code": {
            "type": "string",
            "description": "Indicates the environment of the transaction.\nCode: MERC:\tMerchant:\tDefinition: Merchant environment.\nCode: PRIV:\tPrivate:\tDefinition: Private environment.\nCode: PUBL:\tPublic:\tDefinition: Public environment.\nCode: BRCH:\tBranch:\tDefinition: Bank environment.\nCode: OTHR:\tOther:\tDefinition: Other environments, for instance a mall or an airport.",
            "enum": [
                "MERC",
                "PRIV",
                "PUBL"
            ],
            "example": "MERC"
        },
        "TransactionIdentifier1": {
            "description": "Identification of the transaction in an unambiguous way.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
				"type": "object",
					"properties" {
						"TxDtTm": {
							"$ref": "#/$defs/ISODateTime"
						}
					},
					"required": [
						"TxDtTm"
					],
				},
				{
				"type": "object",
					"properties" {
						"TxRef": {
							"$ref": "#/$defs/Max35Text"
						}
					},
					"required": [
						"TxRef"
					],
				},						
			],
            "type": "object"
        },
        "TransactionToPerform6Choice": {
            "description": "Content of the batch request message.",
            "unevaluatedProperties": false,
			"oneOf": [
				{
				"type": "object",
					"properties" {
						"LltyReq": {
							"$ref": "#/$defs/LoyaltyRequest6"
						}
					},
					"required": [
						"LltyReq"
					],
				},
				{
				"type": "object",
					"properties" {
						"PmtReq": {
							"$ref": "#/$defs/PaymentRequest6"
						}
					},
					"PmtReq": [
						"KeyIdr"
					],
				},		
				"type": "object",
					"properties" {
						"RvslReq": {
							"$ref": "#/$defs/ReversalRequest6"
						}
					},
					"required": [
						"RvslReq"
					],
				},					
			],
            "type": "object"
        },
        "TransactionVerificationResult4": {
            "description": "Result of performed verifications for the transaction.",
            "properties": {
                "AddtlRslt": {
                    "$ref": "#/$defs/Max500Text"
                },
                "Mtd": {
                    "$ref": "#/$defs/AuthenticationMethod6Code"
                },
                "Rslt": {
                    "$ref": "#/$defs/Verification1Code"
                },
                "VrfctnNtty": {
                    "$ref": "#/$defs/AuthenticationEntity2Code"
                }
            },
            "required": [
                "Mtd"
            ],
            "type": "object"
        },
        "TrueFalseIndicator": {
            "$ref": "#/$defs/xs:boolean",
            "description": "A flag indicating a True or False value."
        },
        "TypeOfAmount8Code": {
            "type": "string",
            "description": "Qualifies the amount associated with the transaction.\nCode: CSHB:\tCashback:\tDefinition: Cash-back amount.\nCode: GRTY:\tGratuity:\tDefinition: Gratuity amount.\nCode: FEES:\tFees:\tDefinition: Fees.\nCode: RBTS:\tRebates:\tDefinition: Global rebate of the transaction. This amount is counted as a negative amount.\nCode: VATX:\tValueAddedTax:\tDefinition: Value added tax amount.\nCode: ACTL:\tActual:\tDefinition: Actual amount.\nCode: RPLT:\tReplacement:\tDefinition: Replacement amount.\nCode: MAXI:\tMaximum:\tDefinition: Maximum amount (the final amount must be less or equal).\nCode: DFLT:\tDefault:\tDefinition: Default amount.\nCode: ESTM:\tEstimated:\tDefinition: Estimated amount (the final amount could be above or below).\nCode: ORIG:\tOriginal:\tDefinition: Original amount authorised during the real-time authorisation process.\nCode: SRCH:\tSurcharge:\tDefinition: Extra fee for a purchase or a withdrawal.\nCode: SRVF:\tServiceFee:\tDefinition: Service fee.\nCode: INTC:\tInterchangeFee:\tDefinition: Interchange fee.\nCode: DCNT:\tDiscount:\tDefinition: Discount, rebate or voucher, related to loyalty programs. This amount is counted as a negative amount.\nCode: ATMF:\tATMCommissionFee:\tDefinition: Commission that the issuer will charge to the cardholder, which should be shown and accepted by the cardholder before the money is disbursed.\nCode: AMTH:\tAuthorisedAmount:\tDefinition: Transaction amount that has been authorised.\nCode: CRDB:\tCardRemainingBalance:\tDefinition: Remaining allowed amount for this type of transaction with this card, after the transaction, until the end of the card limit period.\nCode: AMTX:\tMaximumAllowedAmount:\tDefinition: Maximum amount allowed for the transaction in the transaction amount currency if the transaction amount of the request was declined.\nCode: AMTN:\tMinimumAllowedAmount:\tDefinition: Minimum amount allowed in the TransactionAmount currency if the transaction amount of the request was declined.\nCode: AMTQ:\tRequestedAmount:\tDefinition: Transaction amount that has been requested to be authorised.\nCode: FEEI:\tIssuerFees:\tDefinition: Fees amount from the card issuer.\nCode: COMI:\tIssuerCommission:\tDefinition: Commission from the card issuer.\nCode: FEEH:\tInterchangeFees:\tDefinition: Interchange fees.\nCode: FEEP:\tProcessingFees:\tDefinition: Processing fees.\nCode: FEEC:\tCurrencyConversionFees:\tDefinition: Currency conversion fees.\nCode: FEEA:\tInternationalServiceAssessmentFees:\tDefinition: International service assessment fees.\nCode: COMM:\tCommission:\tDefinition: Commission, for example for DCC (Dynamic Currency Conversion) transactions.\nCode: DONN:\tDonation:\tDefinition: Donation amount.\nCode: TAXT:\tTax:\tDefinition: Taxes applicable to the transaction.\nCode: INCR:\tIncremental:\tDefinition: Incremental amount for reservation.\nCode: DECR:\tDecremental:\tDefinition: Decremental amount for reservation.\nCode: RESD:\tReserved:\tDefinition: Reserved or updated reserved amount for reservation.\nCode: CONF:\tConfirmedAmount:\tDefinition: Actual amount that has been paid to the ultimate beneficiary, after all charges etc... have been deducted.\nCode: INST:\tInstructedAmount:\tDefinition: Amount of money to be moved between the debtor (ordering customer) and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\r\nUsage: This amount has to be transported unchanged through the transaction chain.\nCode: ATAF:\tATMAccessFee:\tDefinition: Fee for giving access to an ATM.\nCode: CHBF:\tCardholderBillingFee:\tDefinition: Fee related to a cardholder billing.\nCode: CLFE:\tClearingFee:\tDefinition: Fee related to a clearing transaction.\nCode: CRTF:\tCreditTransactionFee:\tDefinition: Fee related to a credit transaction.\nCode: CUAT:\tCumulative:\tDefinition: Contains the total amount of all authorisations related to the same cardholder purchase activities. Example: total of all incremental or splitted shipment authorisations for the same purchase.\nCode: DBTF:\tDebitTransactionFee:\tDefinition: Fee related to a debit transaction.\nCode: EXTR:\tExtra:\tDefinition: Extra charges (for example,  minibar, etc.)\nCode: FXFE:\tForeignExchangeFee:\tDefinition: Fee related to a foreign exchange transaction.\nCode: FDTF:\tFundsTransfer:\tDefinition: Fee related to a funds transfer transaction\nCode: IPFE:\tInstantPaymentFee:\tDefinition: Fee related to an instant payment.\nCode: ITFE:\tInstantTransferFee:\tDefinition: Fee related to an instant transfer transaction.\nCode: ISCF:\tIssuerCardholderFee:\tDefinition: Fee applied by the card issuer to the cardholder.\nCode: LTAM:\tLimit:\tDefinition: Limit of amounts for the transaction.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of amount defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of amount defined at private level.\nCode: REFE:\tReconciliationFee:\tDefinition: Fee related to a reconciliation transaction.\nCode: STFE:\tSettlementFee:\tDefinition: Fee related to a settlement transaction.\nCode: TXFE:\tTransactionFee:\tDefinition: Fee related to a transaction.\nCode: ANTA:\tAnticipated:\tDefinition: Amount anticipated for the transaction\nCode: BAGG:\tBaggage:\tDefinition: Baggage related fees\nCode: CHTC:\tChargedToCard:\tDefinition: Amount that has been charged to card account\nCode: CPFE:\tClearingPriorityFee:\tDefinition: Fee related to a clearing transaction for a given priority.\nCode: DNTL:\tDental:\tDefinition: Amount qualified for dental prescriptions\nCode: DPST:\tDeposit:\tDefinition: Deposit amount.\nCode: FUFE:\tFundsTransferFee:\tDefinition: Fee related to a funds transfer.\nCode: OQME:\tOtherQualifiedMedical:\tDefinition: Amount qualified for other medical expenses\nCode: PRES:\tPrescription:\tDefinition: Amount for medical prescription\nCode: PRXY:\tProxy:\tDefinition: Substitute for an amount to be authorised.\nCode: RQCH:\tRequestedCashback:\tDefinition: Requested cashback amount\nCode: SPFE:\tSettlementPriorityFee:\tDefinition: Fee related to a settlement transaction for a given priority.\nCode: THTC:\tTotalHealthcare:\tDefinition: Total healthcare amount\nCode: TRNS:\tTransit:\tDefinition: Amount in transit\nCode: VISN:\tVision:\tDefinition: Amount qualified for medical vision expenses\nCode: CONN:\tConnect:\tDefinition: Telephone connection-related charge\nCode: DATA:\tData:\tDefinition: Data communication related charges\nCode: EXTK:\tExchangeTicket:\tDefinition: Fee for exchanging a ticket (modifying an itinerary)\nCode: EXTF:\tExchangeTicketFee:\tDefinition: Fee for exchanging a ticket (modifying an itinerary)\nCode: FARE:\tFare:\tDefinition: Amount of fare\nCode: FDBV:\tFoodBeverage:\tDefinition: Amount of food and beverages\nCode: INSU:\tInsurance:\tDefinition: Insurance charges \nCode: LNDS:\tLongDistance:\tDefinition: Charges related to a long distance call. \nCode: MISC:\tMiscellaneous:\tDefinition: Miscellaneous charges not elsewhere defined\nCode: PHNE:\tPhone:\tDefinition: Phone charges\nCode: PRPY:\tPrepayment:\tDefinition: Amount of prepayment\nCode: TOTL:\tTotal:\tDefinition: Total amount of charges\nCode: USGE:\tUsage:\tDefinition: Telephone usage-related charge\nCode: PDCC:\tPreDCC:\tDefinition: Local amount before DCC (Dynamic Currency Conversion) was applied.\nCode: UPGD:\tUpgrade:\tDefinition: Amount for an upgrade.\nCode: CLUB:\tClubFee:\tDefinition: Amount for club fee.\nCode: CARG:\tCargo:\tDefinition: Cargo Amount.\nCode: DUTY:\tDutyFree:\tDefinition: Duty free amount\nCode: TKDL:\tTicketDelivery:\tDefinition: Ticket delivery amount.\nCode: PETC:\tPetCarrier:\tDefinition: Pet carrier.\nCode: TOUR:\tTourOrder:\tDefinition: Tour order amount.\nCode: MNIF:\tMinimumInterchangeFee:\tDefinition: Minimum interchange fee applicable.\nCode: MXIF:\tMaximumInterchangeFee:\tDefinition: Maximum applicable interchange fee.\nCode: CSIF:\tCashBackInterchangeFee:\tDefinition: Interchange fee applicable to cash back amount.",
            "enum": [
                "ACTL",
                "ESTM",
                "MAXI",
                "DFLT",
                "RPLT",
                "INCR",
                "DECR",
                "RESD"
            ],
            "example": "ACTL"
        },
        "UnitOfMeasure6Code": {
            "type": "string",
            "description": "Unit of measure of the item purchased.\nCode: KILO:\tKilogram:\tDefinition: Basic unit of mass in the SI system, 1000 grams.\nCode: PIEC:\tPiece:\tDefinition: Standard length of cloth, wallpaper, as an item for sale or amount of a substance.\nCode: TONS:\tTon:\tDefinition: Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).\nCode: METR:\tMetre:\tDefinition: Unit of length in the metric system, equal to 39.37 inches.\nCode: INCH:\tInch:\tDefinition: Measure of length equal to 2.54 cm.\nCode: YARD:\tYard:\tDefinition: Unit of length equal to 3 feet or 0.9144 metre.\nCode: GBGA:\tGBGallon:\tDefinition: Unit of volume that is equal to 8 pints.\nCode: GRAM:\tGram:\tDefinition: Unit of measure that is equal to a 1, 000th of a kilo.\nCode: CMET:\tCentimetre:\tDefinition: Unit of measure that is equal to one hundredth of a metre.\nCode: SMET:\tSquareMetre:\tDefinition: Measure of a surface, one metre by one metre.\nCode: FOOT:\tFoot:\tDefinition: Unit of length equal to 1/3 yard.\nCode: MILE:\tMile:\tDefinition: Unit of length equal to 1, 760 yards.\nCode: SQIN:\tSquareInch:\tDefinition: Measure of a surface, one inch by one inch.\nCode: SQFO:\tSquareFoot:\tDefinition: Measure of a surface, one foot by one foot.\nCode: SQMI:\tSquareMile:\tDefinition: Measure of a surface, one mile by one mile.\nCode: GBOU:\tGBOunce:\tDefinition: Unit of weight equal to a sixteenth of a pound.\nCode: USOU:\tUSOunce:\tDefinition: Unit of weight equal to a sixteenth of a pound.\nCode: GBPI:\tGBPint:\tDefinition: Unit of volume that is equal to 568 cubic centimetres.\nCode: USPI:\tUSPint:\tDefinition: Unit of volume that is equal to 473 cubic centimetres.\nCode: GBQA:\tGBQuart:\tDefinition: Unit of volume that is equal to 2 pints.\nCode: USQA:\tUSQuart:\tDefinition: Unit of volume that is equal to 2 pints.\nCode: USGA:\tUSGallon:\tDefinition: Unit of volume that is equal to 8 pints.\nCode: MMET:\tMillimetre:\tDefinition: Unit of measure that is a thousandth of one metre.\nCode: KMET:\tKilometre:\tDefinition: Unit of measure that is equal to 1, 000 meters.\nCode: SQYA:\tSquareYard:\tDefinition: Measure of a surface, one yard by one yard.\nCode: ACRE:\tAcre:\tDefinition: Unit of measure equal to 4, 840 square yards.\nCode: ARES:\tAre:\tDefinition: Unit of measure equal to a 100 square meters.\nCode: SMIL:\tSquareMillimetre:\tDefinition: Measure of a surface, one millimetre by one millimetre.\nCode: SCMT:\tSquareCentimetre:\tDefinition: Measure of a surface, one centimetre by one centimetre.\nCode: HECT:\tHectare:\tDefinition: Unit of measure that is equal to 10, 000 square meters.\nCode: SQKI:\tSquareKilometre:\tDefinition: Measure of a surface, one kilometre by one kilometre.\nCode: MILI:\tMilliLitre:\tDefinition: Unit of volume that is equal to one thousandth of a litre.\nCode: CELI:\tCentilitre:\tDefinition: Unit of volume that is equal to one hundredth of a litre.\nCode: LITR:\tLitre:\tDefinition: Unit of volume that is equal to a thousand cubic centimetres.\nCode: PUND:\tPound:\tDefinition: Unit of weight equal to 0.454 kilograms.\nCode: ALOW:\tAllowances:\tDefinition: Amount of money deducted from a price or an amount due.\nCode: ACCY:\tAmountOfCurrency:\tDefinition: Number of monetary units specified in a currency, where the unit of currency is explicit and compliant with ISO 4217.\nCode: BARL:\tBarrels:\tDefinition: Unit of volume that is equal to 42 US gallons.\nCode: BCUF:\tBillionCubicFeet:\tDefinition: Unit of measure for large volumes of natural gas equivalent to 28316846 cubic meters.\nCode: BDFT:\tBoardFeet:\tDefinition: Measure of length equal to 144 cubic inches.\nCode: BUSL:\tBushels:\tDefinition: Unit of weight that is equal to 8 gallons. Mostly used for agricultural products with a specification of weight defined for each commodity differently.\nCode: CEER:\tCertifiedEmissionsReduction:\tDefinition: Unit of emissions type (or carbon credits) issued by the Clean Development Mechanism (CDM) Executive Board for emission reductions achieved by CDM projects and verified by a DOE (Designated Operational Entity) under the rules of the Kyoto Protocol.\nCode: CLRT:\tClimateReserveTonnes:\tDefinition: Unit of offset credits used by the Climate Action Reserve. One Climate Reserve Tonne is equal to one metric ton of Greenhouse Gas (GHG) reduced/sequestered.\nCode: CBME:\tCubicMeters:\tDefinition: Unit of volume that is equal to one meter in length, breadth and height or also equal to 1000 liters.\nCode: DAYS:\tDays:\tDefinition: Unit of time that is equal to 24 hours.\nCode: DMET:\tDryMetricTons:\tDefinition: Unit of weight that is equal to the same mass value as a metric ton excluding moisture.\nCode: ENVC:\tEnvironmentalCredit:\tDefinition: Unit of measure for ownership of credit (or allowance) of carbon dioxide emission (in metric ton).\nCode: ENVO:\tEnvironmentalOffset:\tDefinition: Unit of measure for reduction of carbon dioxide emission (in metric ton) that may result in Environmental Credit.\nCode: HUWG:\tHundredweight:\tDefinition: Unit of weight or mass of various values in the Imperial Unit System also known as quintal, cental or centum.\nCode: KWDC:\tKilowattDayCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000 watt in one day.\nCode: KWHO:\tKilowattHours:\tDefinition: Unit of measure that is equal to the power consumption of one kilowatt during one hour.\nCode: KWHC:\tKilowattHoursCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000 watt in one hour.\nCode: KMOC:\tKilowattMinuteCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000 watt in one minute.\nCode: KWMC:\tKilowattMonthCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000 watt in one month.\nCode: KWYC:\tKilowattYearCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000 watt in one year.\nCode: MWDC:\tMegawattDayCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000000 watt in one day.\nCode: MWHO:\tMegawattHours:\tDefinition: Unit of measure that is equal to the power consumption of one megawatt during one hour.\nCode: MWHC:\tMegawattHoursCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000000 watt in one hour.\nCode: MWMC:\tMegawattMinuteCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000000 watt in one minute.\nCode: MMOC:\tMegawattMonthCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000000 watt in one month.\nCode: MWYC:\tMegawattYearCapacity:\tDefinition: Unit of measure of the capacity of production of electric power equal to 1000000 watt in one year.\nCode: TONE:\tMetricTons:\tDefinition: Unit of mass equal to 1000 kilograms; equivalent to approximately 2,204.6 pounds, 1.102 short tons (US) or 0.984 long tons (imperial).\nCode: MIBA:\tMillionBarrels:\tDefinition: Unit of volume that is equal to 1 million barrels equivalent to 42.000.000 US gallons.\nCode: MBTU:\tOneMillionBTU:\tDefinition: Unit of measure of heat equal to one million British thermal unit (BTU).\nCode: OZTR:\tTroyOunces:\tDefinition: Unit of weight equal to 31.1034768 grams. Used in precious metals.\nCode: UCWT:\tUSHundredweight:\tDefinition: Unit of weight or mass of various values in the US Customary System also known as quintal, cental or centum. Equal to 100 lbs.\nCode: IPNT:\tIndexPoint:\tDefinition: Decimal number used to calculate an amount or a price.\nCode: PWRD:\tPrincipalWithRelationToDebtInstrument:\tDefinition: Amount of money borrowed, or part of that amount which remains unpaid (excluding interest).\nCode: DGEU:\tDieselGallonEquivalent:\tDefinition: Amount of fuel alternative equal to one gallon of diesel.\nCode: GGEU:\tGasolineGallonEquivalent:\tDefinition: Amount of fuel alternative equal to one gallon of gasoline.\nCode: TOCD:\tTonsOfCarbonDioxide:\tDefinition: Tons of carbon dioxide.\nCode: SHAS:\tShares:\tDefinition: Financial instrument that gives the owner right to dividends paid by a company and the most junior claim on the companies assets in the event of a bankruptcy.\nCode: THMS:\tTherms:\tDefinition: Unit of heat, often used a unit of measure for natural gas in the UK.\nCode: FUTU:\tFuture:\tDefinition: Exchange traded contract that defines an agreement to buy specific quantities of a commodity or financial instrument at an agreed time in the future.\nCode: GWHO:\tGigawattHours:\tDefinition: Unit of measure that is equal to the power consumption of one Gigawatt during one hour.\nCode: BRTU:\tBritishThermalUnit:\tDefinition: Unit of measure of heat required to raise the temperature of one pound of water by one degree Fahrenheit.\nCode: LOTS:\tLot:\tDefinition: Indication of the unit of measurement.\nCode: BAGG:\tBag:\tDefinition: Code for a bag.\nCode: BALE:\tBale:\tDefinition: Code for a bale.\nCode: BOTL:\tBottle:\tDefinition: Code for a bottle.\nCode: BOXX:\tBox:\tDefinition: Code for a box.\nCode: CRTN:\tCarton:\tDefinition: Code for a carton.\nCode: CNTR:\tContainer:\tDefinition: Code for a container.\nCode: CRAT:\tCrate:\tDefinition: Code for a crate.\nCode: CBIN:\tCubicInch:\tDefinition: Measure of a volume, one inch by one inch by one inch.\nCode: CBML:\tCubicMillimetre:\tDefinition: Unit of volume that is equal to one thousandth of a litre.\nCode: GBFO:\tGBFuildOunce:\tDefinition: Unit of volume equal to 2, 841 306 centilitre.\nCode: GBTN:\tGBTon:\tDefinition: Measure of weight, in Britain 2240 lb (long ton).\nCode: USBA:\tUSBarrel:\tDefinition: Unit of volume equal to 158, 9873 litre.\nCode: USFO:\tUSFluidOunce:\tDefinition: Unit of volume equal to 2, 957353 centilitre.\nCode: USTN:\tUSTon:\tDefinition: Measure of weight, in the US 2000 lb (short ton).\nCode: CDDA:\tCoolingDegreeDay:\tDefinition: Cooling degree day\nCode: HDDA:\tHeatingDegreeDay:\tDefinition: Heating degree day\nCode: CPDA:\tCriticalPrecipitationDay:\tDefinition: Critical precipitation day",
            "enum": [
                "PIEC",
                "TONS",
                "FOOT",
                "GBGA",
                "USGA",
                "GRAM",
                "INCH",
                "KILO",
                "PUND",
                "METR",
                "CMET",
                "MMET",
                "LITR",
                "CELI",
                "MILI",
                "GBOU",
                "USOU",
                "GBQA",
                "USQA",
                "GBPI",
                "USPI",
                "MILE",
                "KMET",
                "YARD",
                "SQKI",
                "HECT",
                "ARES",
                "SMET",
                "SCMT",
                "SMIL",
                "SQMI",
                "SQYA",
                "SQFO",
                "SQIN",
                "ACRE",
                "KWHO",
                "DGEU",
                "GGEU"
            ],
            "example": "PIEC"
        },
        "UPICIdentifier": {
            "allOf": [
                {
                    "$ref": "#/$defs/xs:string"
                },
                {
                    "pattern": "[0-9]{8,17}"
                }
            ],
            "description": "Universal Payment Identification Code (UPIC). Identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes.",
            "example": "12345678"
        },
        "UserInterface4Code": {
            "type": "string",
            "description": "Destination of the message.\nCode: CDSP:\tCardholderDisplay:\tDefinition: Cardholder display or interface.\nCode: CRCP:\tCardholderReceipt:\tDefinition: Cardholder receipt.\nCode: MDSP:\tMerchantDisplay:\tDefinition: Merchant display or interface.\nCode: MRCP:\tMerchantReceipt:\tDefinition: Merchant receipt.\nCode: ACQU:\tAcquirer:\tDefinition: Acquirer.\nCode: ISSR:\tIssuer:\tDefinition: Issuer.\nCode: AGNT:\tAgent:\tDefinition: Agent.\nCode: CRDO:\tOtherCardholderInterface:\tDefinition: Other interface of the cardholder, for instance e-mail or smartphone message.\nCode: CHAP:\tCardholderApplication:\tDefinition: Information dedicated to a software application related to a device belonging to the cardholder.\nCode: CLRA:\tClearingAgentApplication:\tDefinition: Data dedicated to an application maintained by a clearing agent.\nCode: CLRL:\tClearingAgentLog:\tDefinition: Data dedicated to a log maintained by the clearing agent.\nCode: DSPU:\tDispute:\tDefinition: Interface used in case of disputes or chargebacks.\nCode: FILE:\tFile:\tDefinition: File used to store the message.\nCode: LOGF:\tLog:\tDefinition: Information dedicated to a log file.\nCode: MRAP:\tMerchantApplication:\tDefinition: Information dedicated to a software application related to a device belonging to the merchant.\nCode: OTAI:\tOtherAcquirerInterface:\tDefinition: Other type of acquirer interface.\nCode: OCAI:\tOtherClearingAgentInterface:\tDefinition: Data dedicated to another interface maintained by the clearing agent.\nCode: OTII:\tOtherIssuerInterface:\tDefinition: Other type of issuer interface.\nCode: MRIN:\tOtherMerchantInterface:\tDefinition: Other interface of the merchant for instance e-mail or smartphone message.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of interface defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of interface defined at private level.\nCode: OSAI:\tOtherSettlementAgentInterface:\tDefinition: Other settlement agent interface.\nCode: STLI:\tSettlementAgent:\tDefinition: Settlement agent interface.\nCode: TUCR:\tTopUpCredit:\tDefinition: Credit information related to a top-up account.",
            "enum": [
                "CDSP",
                "CRCP",
                "MDSP",
                "MRCP",
                "CRDO"
            ]
        },
        "Vehicle1": {
            "description": "Information related to a vehicle used during a transaction.",
            "properties": {
                "AddtlVhclData": {
                    "items": {
                        "$ref": "#/$defs/Vehicle2"
                    },
                    "minItems": 0,
                    "type": "array"
                },
                "DrvrOrVhclCard": {
                    "$ref": "#/$defs/PlainCardData17"
                },
                "Hbmtr": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "MntncId": {
                    "$ref": "#/$defs/Max35Text"
                },
                "Odmtr": {
                    "$ref": "#/$defs/DecimalNumber"
                },
                "RefrHrs": {
                    "$ref": "#/$defs/Max35Text"
                },
                "RplcmntCar": {
                    "$ref": "#/$defs/TrueFalseIndicator"
                },
                "TrlrHrs": {
                    "$ref": "#/$defs/Max35Text"
                },
                "TrlrNb": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "UnitNb": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "VhclNb": {
                    "$ref": "#/$defs/Max35NumericText"
                },
                "VhclTag": {
                    "$ref": "#/$defs/Max35Text"
                },
                "VhclTagNtryMd": {
                    "$ref": "#/$defs/CardDataReading5Code"
                }
            },
            "type": "object"
        },
        "Vehicle2": {
            "description": "Additional information related to a vehicle.",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/Max35Text"
                },
                "NtryMd": {
                    "$ref": "#/$defs/CardDataReading5Code"
                },
                "Tp": {
                    "$ref": "#/$defs/Max35Text"
                }
            },
            "required": [
                "Data"
            ],
            "type": "object"
        },
        "Verification1Code": {
            "type": "string",
            "description": "Result of the verification.\nCode: ERRR:\tTechnicalError:\tDefinition: Device or entity to perform the verification was unavailable.\nCode: SUCC:\tSuccessful:\tDefinition: Verification was successful.\nCode: PART:\tPartialMatch:\tDefinition: Verification was partially successful.\nCode: NOVF:\tNotPerformed:\tDefinition: Verification has not been performed.\nCode: MISS:\tMissing:\tDefinition: Information required to perform the verification was missing.\nCode: FAIL:\tFailed:\tDefinition: Verification failed.\nCode: FUTA:\tFurtherAction:\tDefinition: Further action required.\nCode: OTHN:\tOtherNational:\tDefinition: Other result of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other result of verification defined at private level.\nCode: NOSP:\tNotSupported:\tDefinition: Not support the verification type",
            "enum": [
                "FAIL",
                "MISS",
                "NOVF",
                "PART",
                "SUCC",
                "ERRR"
            ]
        }
    }
}