{
    "$schema": "http://json-schema.org/draft/2020-12/schema",
    "$id": "urn:iso:std:iso:20022:tech:xsd:casp.001.001.06#",
    "additionalProperties": false,
    "properties": {
        "Document": {
            "$ref": "#/$defs/Document"
        }
    },
    "$defs": {
        "NetworkParameters9": {
            "type": "object",
            "required": [
                "NetworkType",
                "AddressValue"
            ],
            "additionalProperties": false,
            "properties": {
                "NetworkType": {
                    "$ref": "#/$defs/NetworkType1Code",
                    "description": "Type of communication network."
                },
                "AddressValue": {
                    "type": "string",
                    "description": "Value of the address. The value of an internet protocol address contains the IP address or the DNS (Domain Name Server) address, followed by the character ': ' and the port number if the default port is not used. The value of a public telephone address contains the phone number with possible prefix and extensions."
                }
            },
            "description": "Parameters to communicate with a host."
        },
        "NetworkParameters7": {
            "type": "object",
            "required": [
                "Address"
            ],
            "additionalProperties": false,
            "properties": {
                "Address": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/NetworkParameters9"
                    },
                    "minItems": 1,
                    "description": "Network addresses of the host."
                },
                "UserName": {
                    "type": "string",
                    "description": "User name identifying the client."
                },
                "AccessCode": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Password authenticating the client."
                },
                "ServerCertificate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "minItems": 0,
                    "description": "X.509 Certificate required to authenticate the server."
                },
                "ServerCertificateIdentifier": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "minItems": 0,
                    "description": "Identification of the X.509 Certificates required to authenticate the server, for instance a digest of the certificate."
                },
                "ClientCertificate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "minItems": 0,
                    "description": "X.509 Certificate required to authenticate the client."
                },
                "SecurityProfile": {
                    "type": "string",
                    "description": "Identification of the set of security elements to access the host."
                }
            },
            "description": "Parameters to communicate with a host."
        },
        "GeolocationGeographicCoordinates1": {
            "type": "object",
            "required": [
                "Latitude",
                "Longitude"
            ],
            "additionalProperties": false,
            "properties": {
                "Latitude": {
                    "type": "string",
                    "description": "Angular distance of a location on the earth south or north of the equator.\r\nThe latitude is measured in degrees, minutes and seconds, following by \"N\" for the north and \"S\" for the south of the equator. For example: 48°51'29\" N the Eiffel Tower latitude."
                },
                "Longitude": {
                    "type": "string",
                    "description": "Angular measurement of the distance of a location on the earth east or west of the Greenwich observatory.\r\nThe longitude is measured in degrees, minutes and seconds, following by \"E\" for the east and \"W\" for the west. For example: 23°27'30\" E."
                }
            },
            "description": "Location on the Earth specified by two numbers representing vertical and horizontal position."
        },
        "GeolocationUTMCoordinates1": {
            "type": "object",
            "required": [
                "UTMZone",
                "UTMEastward",
                "UTMNorthward"
            ],
            "additionalProperties": false,
            "properties": {
                "UTMZone": {
                    "type": "string",
                    "description": "UTM grid zone combination of the longitude zone (1 to 60) and the latitude band (C to X, excluding I and O)."
                },
                "UTMEastward": {
                    "type": "string",
                    "description": "X-coordinate of the Universal Transverse Mercator \r\ncoordinate system."
                },
                "UTMNorthward": {
                    "type": "string",
                    "description": "Y-coordinate of the Universal Transverse Mercator \r\ncoordinate system."
                }
            },
            "description": "Location on the Earth specified by the Universal Transverse Mercator coordinate system.\r\nIdentifies the geographic location using the WGS84 ellipsoid spatial reference system."
        },
        "Geolocation1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "GeographicCoordinates": {
                    "$ref": "#/$defs/GeolocationGeographicCoordinates1",
                    "description": "Geographic location specified by geographic coordinates."
                },
                "UTMCoordinates": {
                    "$ref": "#/$defs/GeolocationUTMCoordinates1",
                    "description": "Geographic location specified by UTM coordinates."
                }
            },
            "description": "Geographic location specified by geographic or UTM coordinates."
        },
        "GenericIdentification177": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of the entity."
                },
                "Type": {
                    "$ref": "#/$defs/PartyType33Code",
                    "description": "Type of identified entity."
                },
                "Issuer": {
                    "$ref": "#/$defs/PartyType33Code",
                    "description": "Entity assigning the identification (for example merchant, acceptor, acquirer, or tax authority)."
                },
                "Country": {
                    "type": "string",
                    "description": "Country of the entity (ISO 3166-1 alpha-2 or alpha-3)."
                },
                "ShortName": {
                    "type": "string",
                    "description": "Name of the entity."
                },
                "RemoteAccess": {
                    "$ref": "#/$defs/NetworkParameters7",
                    "description": "Access information to reach the target host."
                },
                "Geolocation": {
                    "$ref": "#/$defs/Geolocation1",
                    "description": "Location of the entity."
                }
            },
            "description": "Identification of an entity."
        },
        "Traceability8": {
            "type": "object",
            "required": [
                "RelayIdentification",
                "TraceDateTimeIn",
                "TraceDateTimeOut"
            ],
            "additionalProperties": false,
            "properties": {
                "RelayIdentification": {
                    "$ref": "#/$defs/GenericIdentification177",
                    "description": "Identification of a partner of a message exchange."
                },
                "ProtocolName": {
                    "type": "string",
                    "description": "Name of the outgoing protocol used by the node."
                },
                "ProtocolVersion": {
                    "type": "string",
                    "description": "Version of the protocol."
                },
                "TraceDateTimeIn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of incoming data exchange for relaying or processing."
                },
                "TraceDateTimeOut": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the outgoing exchange for relaying or processing."
                }
            },
            "description": "Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges."
        },
        "Header41": {
            "type": "object",
            "required": [
                "MessageFunction",
                "ProtocolVersion",
                "ExchangeIdentification",
                "CreationDateTime",
                "InitiatingParty"
            ],
            "additionalProperties": false,
            "properties": {
                "MessageFunction": {
                    "$ref": "#/$defs/RetailerMessage1Code",
                    "description": "Identifies the type of process related to the message."
                },
                "ProtocolVersion": {
                    "type": "string",
                    "description": "Version of the acquirer protocol specifications."
                },
                "ExchangeIdentification": {
                    "type": "string",
                    "description": "Unique identification of an exchange occurrence."
                },
                "CreationDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time at which the message was created."
                },
                "InitiatingParty": {
                    "$ref": "#/$defs/GenericIdentification177",
                    "description": "Unique identification of the partner that has initiated the exchange."
                },
                "RecipientParty": {
                    "$ref": "#/$defs/GenericIdentification177",
                    "description": "Unique identification of the partner that is the recipient of the message exchange."
                },
                "Traceability": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Traceability8"
                    },
                    "minItems": 0,
                    "description": "Identification of partners involved in exchange from the merchant to the issuer, with the relative timestamp of their exchanges."
                }
            },
            "description": "Set of characteristics related to the protocol."
        },
        "Acquirer10": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "$ref": "#/$defs/GenericIdentification177",
                    "description": "Identification of the acquirer (for example the bank identification number BIN)."
                },
                "ParametersVersion": {
                    "type": "string",
                    "description": "Version of the payment acquirer parameters of the POI."
                }
            },
            "description": "Acquirer involved in the card payment."
        },
        "GenericIdentification32": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of the entity."
                },
                "Type": {
                    "$ref": "#/$defs/PartyType3Code",
                    "description": "Type of identified entity."
                },
                "Issuer": {
                    "$ref": "#/$defs/PartyType4Code",
                    "description": "Entity assigning the identification (for example merchant, acceptor, acquirer, or tax authority)."
                },
                "ShortName": {
                    "type": "string",
                    "description": "Name of the entity."
                }
            },
            "description": "Identification of an entity."
        },
        "PostalAddress22": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AddressType": {
                    "$ref": "#/$defs/AddressType2Code",
                    "description": "Identifies the nature of the postal address."
                },
                "Department": {
                    "type": "string",
                    "description": "Identification of a division of a large organisation or building."
                },
                "SubDepartment": {
                    "type": "string",
                    "description": "Identification of a sub-division of a large organisation or building."
                },
                "AddressLine": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text."
                },
                "StreetName": {
                    "type": "string",
                    "description": "Name of a street or thoroughfare."
                },
                "BuildingNumber": {
                    "type": "string",
                    "description": "Number that identifies the position of a building on a street."
                },
                "PostCode": {
                    "type": "string",
                    "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
                },
                "TownName": {
                    "type": "string",
                    "description": "Name of a built-up area, with defined boundaries, and a local government."
                },
                "CountrySubDivision": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "maxItems": 2,
                    "minItems": 0,
                    "description": "Identifies a subdivision of a country such as state, region, county."
                },
                "CountryCode": {
                    "type": "string",
                    "description": "Nation with its own government."
                }
            },
            "description": "Information that locates and identifies a specific address, as defined by postal services."
        },
        "CommunicationAddress9": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PostalAddress": {
                    "$ref": "#/$defs/PostalAddress22",
                    "description": "Postal address of the entity."
                },
                "Email": {
                    "type": "string",
                    "description": "Address for electronic mail (e-mail)."
                },
                "URLAddress": {
                    "type": "string",
                    "description": "Address for the Universal Resource Locator (URL), for example used over the www (HTTP) service."
                },
                "Phone": {
                    "type": "string",
                    "description": "Collection of information that identifies a phone number, as defined by telecom services."
                },
                "CustomerService": {
                    "type": "string",
                    "description": "Phone number of the customer service."
                },
                "AdditionalContactInformation": {
                    "type": "string",
                    "description": "Additional information used to facilitate contact with the card acceptor, for instance sales agent name, dispute manager name."
                }
            },
            "description": "Communication information."
        },
        "Organisation41": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "$ref": "#/$defs/GenericIdentification32",
                    "description": "Identification of the merchant."
                },
                "CommonName": {
                    "type": "string",
                    "description": "Name of the merchant as appearing on the receipt."
                },
                "LocationCategory": {
                    "$ref": "#/$defs/LocationCategory4Code",
                    "description": "Location category of the place where the merchant actually performed the transaction."
                },
                "LocationAndContact": {
                    "$ref": "#/$defs/CommunicationAddress9",
                    "description": "Location and contact information of the merchant performing the transaction."
                },
                "SchemeData": {
                    "type": "string",
                    "description": "Additional merchant data required by a card scheme."
                }
            },
            "description": "Merchant performing the transaction."
        },
        "DisplayCapabilities4": {
            "type": "object",
            "required": [
                "Destination"
            ],
            "additionalProperties": false,
            "properties": {
                "Destination": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/UserInterface4Code"
                    },
                    "minItems": 1,
                    "description": "Destination of the message to present."
                },
                "AvailableFormat": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/OutputFormat1Code"
                    },
                    "minItems": 0,
                    "description": "Available message format."
                },
                "NumberOfLines": {
                    "type": "number",
                    "description": "Number of lines of the display."
                },
                "LineWidth": {
                    "type": "number",
                    "description": "Number of columns of the display or printer."
                },
                "AvailableLanguage": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Available language for the message. Reference ISO 639-1 (alpha-2) et ISO 639-2 (alpha-3)."
                }
            },
            "description": "Capabilities of the display components performing the transaction."
        },
        "PointOfInteractionCapabilities9": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CardReadingCapabilities": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CardDataReading8Code"
                    },
                    "minItems": 0,
                    "description": "Card reading capabilities of the POI (Point Of Interaction) performing the transaction."
                },
                "CardholderVerificationCapabilities": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CardholderVerificationCapability4Code"
                    },
                    "minItems": 0,
                    "description": "Cardholder verification capabilities of the POI (Point Of Interaction) performing the transaction."
                },
                "PINLengthCapabilities": {
                    "type": "number",
                    "description": "Maximum number of digits the POI is able to accept when the cardholder enters its PIN."
                },
                "ApprovalCodeLength": {
                    "type": "number",
                    "description": "Maximum number of characters of the approval code the POI is able to manage."
                },
                "MaxScriptLength": {
                    "type": "number",
                    "description": "Maximum data length in bytes that a card issuer can return to the ICC at the terminal."
                },
                "CardCaptureCapable": {
                    "type": "boolean",
                    "description": "True if the POI is able to capture card."
                },
                "OnLineCapabilities": {
                    "$ref": "#/$defs/OnLineCapability1Code",
                    "description": "On-line and off-line capabilities of the POI (Point Of Interaction)."
                },
                "MessageCapabilities": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DisplayCapabilities4"
                    },
                    "minItems": 0,
                    "description": "Capabilities of the terminal to display or print message to the cardholder and the merchant."
                }
            },
            "description": "Capabilities of the POI (Point Of Interaction) performing the transaction."
        },
        "PointOfInteractionComponentIdentification2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ItemNumber": {
                    "type": "string",
                    "description": "Hierarchical identification of a hardware component inside all the hardware component of the POI. It is composed of all item numbers of the upper level components, separated by the '.' character, ended by the item number of the current component."
                },
                "ProviderIdentification": {
                    "type": "string",
                    "description": "Identifies the provider of the software, hardware or parameters of the POI component."
                },
                "Identification": {
                    "type": "string",
                    "description": "Identification of the POI component assigned by its provider."
                },
                "SerialNumber": {
                    "type": "string",
                    "description": "Serial number identifying an occurrence of an hardware component."
                }
            },
            "description": "Identification of a POI (Point of Interaction) component."
        },
        "PointOfInteractionComponentStatus3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "VersionNumber": {
                    "type": "string",
                    "description": "Current version of the component that might include the release number."
                },
                "Status": {
                    "$ref": "#/$defs/POIComponentStatus1Code",
                    "description": "Current status of the component."
                },
                "ExpiryDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Expiration date of the component."
                }
            },
            "description": "Status of a POI component (Point of Interaction)."
        },
        "GenericIdentification48": {
            "type": "object",
            "required": [
                "Identification",
                "Version",
                "Issuer"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Proprietary information, often a code, issued by the data source scheme issuer."
                },
                "Version": {
                    "type": "string",
                    "description": "Version of the identification."
                },
                "Issuer": {
                    "type": "string",
                    "description": "Entity that assigns the identification."
                }
            },
            "description": "Information related to an identification."
        },
        "MemoryCharacteristics1": {
            "type": "object",
            "required": [
                "Identification",
                "TotalSize",
                "FreeSize",
                "Unit"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification or name of the memory."
                },
                "TotalSize": {
                    "type": "number",
                    "description": "Total size of the memory unit."
                },
                "FreeSize": {
                    "type": "number",
                    "description": "Total size of the available memory."
                },
                "Unit": {
                    "$ref": "#/$defs/MemoryUnit1Code",
                    "description": "Memory unit of the sizes."
                }
            },
            "description": "Characteristics of a hardware memory module."
        },
        "PhysicalInterfaceParameter1": {
            "type": "object",
            "required": [
                "InterfaceName"
            ],
            "additionalProperties": false,
            "properties": {
                "InterfaceName": {
                    "type": "string",
                    "description": "Identification of the interface."
                },
                "InterfaceType": {
                    "$ref": "#/$defs/POICommunicationType2Code",
                    "description": "Identification of the physical link layer."
                },
                "UserName": {
                    "type": "string",
                    "description": "Optional user name to provide to use this interface."
                },
                "AccessCode": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Optional access code to provide to use this interface."
                },
                "SecurityProfile": {
                    "type": "string",
                    "description": "Identification of the optional security profile to use with this interface."
                },
                "AdditionalParameters": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Any other parameters relevant for this interface."
                }
            },
            "description": "Configuration parameters for physical interface."
        },
        "CommunicationCharacteristics5": {
            "type": "object",
            "required": [
                "CommunicationType",
                "RemoteParty",
                "Active"
            ],
            "additionalProperties": false,
            "properties": {
                "CommunicationType": {
                    "$ref": "#/$defs/POICommunicationType2Code",
                    "description": "Type of low level communication."
                },
                "RemoteParty": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/PartyType7Code"
                    },
                    "minItems": 1,
                    "description": "Entity that communicate with the current component, using this communication device."
                },
                "Active": {
                    "type": "boolean",
                    "description": "Communication hardware is activated."
                },
                "Parameters": {
                    "$ref": "#/$defs/NetworkParameters7",
                    "description": "Network parameters of the communication link."
                },
                "PhysicalInterface": {
                    "$ref": "#/$defs/PhysicalInterfaceParameter1",
                    "description": "Physical Interface used by the communication link."
                }
            },
            "description": "Low level communication of the hardware or software component toward another component or an external entity."
        },
        "OriginatorInformation1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Certificate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "minItems": 0,
                    "description": "It may contain originator certificates associated with several different key management algorithms."
                }
            },
            "description": "Provides information about the originator. It is present only if required by the key management algorithm."
        },
        "RelativeDistinguishedName1": {
            "type": "object",
            "required": [
                "AttributeType",
                "AttributeValue"
            ],
            "additionalProperties": false,
            "properties": {
                "AttributeType": {
                    "$ref": "#/$defs/AttributeType1Code",
                    "description": "Type of attribute of a distinguished name (see X.500)."
                },
                "AttributeValue": {
                    "type": "string",
                    "description": "Value of the attribute of a distinguished name (see X.500)."
                }
            },
            "description": "Relative distinguished name defined by X.500 and X.509."
        },
        "CertificateIssuer1": {
            "type": "object",
            "required": [
                "RelativeDistinguishedName"
            ],
            "additionalProperties": false,
            "properties": {
                "RelativeDistinguishedName": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/RelativeDistinguishedName1"
                    },
                    "minItems": 1,
                    "description": "Relative distinguished name inside a X.509 certificate."
                }
            },
            "description": "Certificate issuer name (see X.509)."
        },
        "IssuerAndSerialNumber2": {
            "type": "object",
            "required": [
                "Issuer",
                "SerialNumber"
            ],
            "additionalProperties": false,
            "properties": {
                "Issuer": {
                    "$ref": "#/$defs/CertificateIssuer1",
                    "description": "Certificate issuer name (see X.509)."
                },
                "SerialNumber": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Certificate serial number (see X.509)."
                }
            },
            "description": "Certificate issuer name and serial number (see X.509)."
        },
        "Recipient13Choice": {
            "type": "object",
            "required": [
                "IssuerAndSerialNumber",
                "SubjectKeyIdentifier"
            ],
            "additionalProperties": false,
            "properties": {
                "IssuerAndSerialNumber": {
                    "$ref": "#/$defs/IssuerAndSerialNumber2",
                    "description": "Certificate issuer name and serial number (see ITU X.509)."
                },
                "SubjectKeyIdentifier": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Specifies the recipient's certificate by a key identifier."
                }
            },
            "description": "Identification of a cryptographic asymmetric key."
        },
        "Parameter18": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DigestAlgorithm": {
                    "$ref": "#/$defs/Algorithm26Code",
                    "description": "Digest algorithm used in the mask generator function."
                }
            },
            "description": "Parameters associated to a mask generator cryptographic function."
        },
        "AlgorithmIdentification34": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm8Code",
                    "description": "Mask generator function cryptographic algorithm."
                },
                "Parameter": {
                    "$ref": "#/$defs/Parameter18",
                    "description": "Parameters associated to the mask generator function cryptographic algorithm."
                }
            },
            "description": "Mask generator function cryptographic algorithm and parameters."
        },
        "Parameter17": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EncryptionFormat": {
                    "$ref": "#/$defs/EncryptionFormat2Code",
                    "description": "Format of data before encryption, if the format is not plaintext or implicit."
                },
                "DigestAlgorithm": {
                    "$ref": "#/$defs/Algorithm26Code",
                    "description": "Identification of the digest algorithm."
                },
                "MaskGeneratorAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification34",
                    "description": "Mask generator function cryptographic algorithm and parameters."
                }
            },
            "description": "Parameters of the asymmetric encryption algorithm."
        },
        "AlgorithmIdentification35": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm7Code",
                    "description": "Asymmetric encryption algorithm of a transport key."
                },
                "Parameter": {
                    "$ref": "#/$defs/Parameter17",
                    "description": "Parameters of the encryption algorithm."
                }
            },
            "description": "Cryptographic algorithms and parameters for the protection of transported keys by an asymmetric key."
        },
        "KeyTransport10": {
            "type": "object",
            "required": [
                "RecipientIdentification",
                "KeyEncryptionAlgorithm",
                "EncryptedKey"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "RecipientIdentification": {
                    "$ref": "#/$defs/Recipient13Choice",
                    "description": "Identification of a cryptographic asymmetric key for the recipient."
                },
                "KeyEncryptionAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification35",
                    "description": "Algorithm to encrypt the key encryption key (KEK)."
                },
                "EncryptedKey": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Encrypted key encryption key (KEK)."
                }
            },
            "description": "Key encryption key (KEK), encrypted with a previously distributed asymmetric public key."
        },
        "KEKIdentifier7": {
            "type": "object",
            "required": [
                "KeyIdentification",
                "KeyVersion"
            ],
            "additionalProperties": false,
            "properties": {
                "KeyIdentification": {
                    "type": "string",
                    "description": "Identification of the cryptographic key."
                },
                "KeyVersion": {
                    "type": "string",
                    "description": "Version of the cryptographic key."
                },
                "SequenceNumber": {
                    "type": "number",
                    "description": "Number of usages of the cryptographic key."
                },
                "DerivationIdentification": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Identification used for derivation of a unique key from a master key provided for the data protection."
                }
            },
            "description": "Identification of a key encryption key (KEK), using previously distributed symmetric key."
        },
        "Parameter12": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "EncryptionFormat": {
                    "$ref": "#/$defs/EncryptionFormat2Code",
                    "description": "Format of data before encryption, if the format is not plaintext or implicit."
                },
                "InitialisationVector": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Initialisation vector of a cipher block chaining (CBC) mode encryption."
                },
                "BytePadding": {
                    "$ref": "#/$defs/BytePadding1Code",
                    "description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit."
                }
            },
            "description": "Parameters associated to a cryptographic encryption algorithm."
        },
        "AlgorithmIdentification32": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm28Code",
                    "description": "Identification of the algorithm."
                },
                "Parameter": {
                    "$ref": "#/$defs/Parameter12",
                    "description": "Parameters associated to the encryption algorithm."
                }
            },
            "description": "Cryptographic algorithm and parameters for the protection of the transported key."
        },
        "KEK9": {
            "type": "object",
            "required": [
                "KEKIdentification",
                "KeyEncryptionAlgorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "KEKIdentification": {
                    "$ref": "#/$defs/KEKIdentifier7",
                    "description": "Identification of the key encryption key (KEK)."
                },
                "KeyEncryptionAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification32",
                    "description": "Algorithm to encrypt the key encryption key (KEK)."
                },
                "EncryptedKey": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Encrypted key encryption key (KEK)."
                }
            },
            "description": "Key encryption key (KEK), using previously distributed symmetric key."
        },
        "Recipient15Choice": {
            "type": "object",
            "required": [
                "KeyTransport",
                "KEK",
                "KeyIdentifier"
            ],
            "additionalProperties": false,
            "properties": {
                "KeyTransport": {
                    "$ref": "#/$defs/KeyTransport10",
                    "description": "Encryption key using previously distributed asymmetric public key."
                },
                "KEK": {
                    "$ref": "#/$defs/KEK9",
                    "description": "Key encryption key using previously distributed symmetric key."
                },
                "KeyIdentifier": {
                    "$ref": "#/$defs/KEKIdentifier7",
                    "description": "Identification of a protection key without a session key, shared and previously exchanged between the initiator and the recipient."
                }
            },
            "description": "Transport key or key encryption key (KEK) for the recipient."
        },
        "EncryptedContent7": {
            "type": "object",
            "required": [
                "ContentType",
                "EncryptedData"
            ],
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType2Code",
                    "description": "Type of data which have been encrypted."
                },
                "ContentEncryptionAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification32",
                    "description": "Algorithm used to encrypt the data."
                },
                "EncryptedData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Encrypted data, result of the content encryption."
                }
            },
            "description": "Encrypted data with an encryption key."
        },
        "EnvelopedData11": {
            "type": "object",
            "required": [
                "Recipient"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "OriginatorInformation": {
                    "$ref": "#/$defs/OriginatorInformation1",
                    "description": "Provides certificates of the originator."
                },
                "Recipient": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Recipient15Choice"
                    },
                    "minItems": 1,
                    "description": "Session key or identification of the protection key used by the recipient."
                },
                "EncryptedContent": {
                    "$ref": "#/$defs/EncryptedContent7",
                    "description": "Data protection by encryption (digital envelope), with an encryption key."
                }
            },
            "description": "Encrypted data with encryption key."
        },
        "Parameter7": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "InitialisationVector": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Initialisation vector of a cipher block chaining (CBC) mode encryption."
                },
                "BytePadding": {
                    "$ref": "#/$defs/BytePadding1Code",
                    "description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit."
                }
            },
            "description": "Parameters associated to the MAC algorithm."
        },
        "AlgorithmIdentification31": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm27Code",
                    "description": "Identification of the MAC algorithm."
                },
                "Parameter": {
                    "$ref": "#/$defs/Parameter7",
                    "description": "Parameters associated to the MAC algorithm."
                }
            },
            "description": "Identification of a cryptographic algorithm and parameters for the MAC computation."
        },
        "EncapsulatedContent3": {
            "type": "object",
            "required": [
                "ContentType"
            ],
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType2Code",
                    "description": "Type of data which have been authenticated."
                },
                "Content": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Actual data to authenticate."
                }
            },
            "description": "Data to authenticate."
        },
        "AuthenticatedData10": {
            "type": "object",
            "required": [
                "Recipient",
                "MACAlgorithm",
                "EncapsulatedContent",
                "MAC"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "Recipient": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Recipient15Choice"
                    },
                    "minItems": 1,
                    "description": "Session key or protection key identification used by the recipient."
                },
                "MACAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification31",
                    "description": "Algorithm to compute message authentication code (MAC)."
                },
                "EncapsulatedContent": {
                    "$ref": "#/$defs/EncapsulatedContent3",
                    "description": "Data to authenticate."
                },
                "MAC": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Message authentication code value."
                }
            },
            "description": "Message authentication code (MAC), computed on the data to protect with an encryption key."
        },
        "AlgorithmIdentification36": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm26Code",
                    "description": "Identification of the digest algorithm."
                }
            },
            "description": "Cryptographic algorithm and parameters of digests."
        },
        "GenericInformation1": {
            "type": "object",
            "required": [
                "Name"
            ],
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Name of the generic information to exchange."
                },
                "Value": {
                    "type": "string",
                    "description": "Value of the generic information to exchange."
                }
            },
            "description": "GenericInformation exchanged with a name and value."
        },
        "Parameter16": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DigestAlgorithm": {
                    "$ref": "#/$defs/Algorithm26Code",
                    "description": "Identification of the digest algorithm."
                },
                "MaskGeneratorAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification34",
                    "description": "Mask generator function cryptographic algorithm and parameters."
                },
                "SaltLength": {
                    "type": "number",
                    "description": "Length of the salt to include in the signature."
                },
                "TrailerField": {
                    "type": "number",
                    "description": "Trailer field number."
                },
                "OIDCurveName": {
                    "type": "string",
                    "description": "Name of the Elliptic Curve according to the OID notation."
                }
            },
            "description": "Parameters of the RSASSA-PSS digital signature algorithm (RSA signature algorithm with appendix: Probabilistic Signature Scheme)."
        },
        "AlgorithmIdentification33": {
            "type": "object",
            "required": [
                "Algorithm"
            ],
            "additionalProperties": false,
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm29Code",
                    "description": "Identification of the algorithm."
                },
                "Parameter": {
                    "$ref": "#/$defs/Parameter16",
                    "description": "Parameters of the RSASSA-PSS digital signature algorithm (RSA signature algorithm with appendix: Probabilistic Signature Scheme)."
                }
            },
            "description": "Identification of a cryptographic algorithm and parameters for digital signatures."
        },
        "Signer8": {
            "type": "object",
            "required": [
                "DigestAlgorithm",
                "SignatureAlgorithm",
                "Signature"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the Cryptographic Message Syntax (CMS) data structure."
                },
                "SignerIdentification": {
                    "$ref": "#/$defs/Recipient13Choice",
                    "description": "Identification of the entity who has signed the data."
                },
                "DigestAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification36",
                    "description": "Identification of a digest algorithm to apply before signature."
                },
                "SignedAttributes": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GenericInformation1"
                    },
                    "minItems": 0,
                    "description": "Collection of attributes that are signed."
                },
                "SignatureAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification33",
                    "description": "Cryptographic digital signature algorithm."
                },
                "Signature": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Digital signature."
                }
            },
            "description": "Entity who has signed the data and its digital signature."
        },
        "SignedData9": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "DigestAlgorithm": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/AlgorithmIdentification36"
                    },
                    "minItems": 0,
                    "description": "Identification of digest algorithm applied before signature."
                },
                "EncapsulatedContent": {
                    "$ref": "#/$defs/EncapsulatedContent3",
                    "description": "Data to sign."
                },
                "Certificate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "minItems": 0,
                    "description": "Chain of X.509 certificates."
                },
                "Signer": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Signer8"
                    },
                    "minItems": 0,
                    "description": "Digital signature and identification of a signer."
                }
            },
            "description": "Digital signatures of data from one or several signers."
        },
        "DigestedData6": {
            "type": "object",
            "required": [
                "DigestAlgorithm",
                "EncapsulatedContent",
                "Digest"
            ],
            "additionalProperties": false,
            "properties": {
                "Version": {
                    "type": "number",
                    "description": "Version of the data structure."
                },
                "DigestAlgorithm": {
                    "$ref": "#/$defs/AlgorithmIdentification36",
                    "description": "Identification of the digest algorithm."
                },
                "EncapsulatedContent": {
                    "$ref": "#/$defs/EncapsulatedContent3",
                    "description": "Data on which the digest is computed."
                },
                "Digest": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Result of data-digesting process."
                }
            },
            "description": "Digest computed on the identified data."
        },
        "ContentInformationType39": {
            "type": "object",
            "required": [
                "ContentType"
            ],
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType2Code",
                    "description": "Type of data protection."
                },
                "EnvelopedData": {
                    "$ref": "#/$defs/EnvelopedData11",
                    "description": "Data protection by encryption, with a session key."
                },
                "AuthenticatedData": {
                    "$ref": "#/$defs/AuthenticatedData10",
                    "description": "Data protection by a message authentication code (MAC)."
                },
                "SignedData": {
                    "$ref": "#/$defs/SignedData9",
                    "description": "Data protected by a digital signatures."
                },
                "DigestedData": {
                    "$ref": "#/$defs/DigestedData6",
                    "description": "Data protected by a digest."
                }
            },
            "description": "General cryptographic message syntax (CMS) containing protected data."
        },
        "GenericIdentification186": {
            "type": "object",
            "required": [
                "Identification",
                "Type"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of an element in the system."
                },
                "Type": {
                    "$ref": "#/$defs/PartyType7Code",
                    "description": "Type of actor in the system."
                }
            },
            "description": "Information to identify an element in the system."
        },
        "CryptographicKey18": {
            "type": "object",
            "required": [
                "Identification",
                "Version"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Name of the cryptographic key."
                },
                "AdditionalIdentification": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional identification of the key.\r\nUsage\r\nFor derived unique key per transaction (DUKPT) keys, the key serial number (KSN) with the 21 bits of the transaction counter set to zero."
                },
                "Name": {
                    "type": "string",
                    "description": "Name of the Cryptographic Element."
                },
                "SecurityProfile": {
                    "type": "string",
                    "description": "Identification of the set of security elements to which this element belongs."
                },
                "ItemNumber": {
                    "type": "string",
                    "description": "Hierarchical identification of a key inside all the key system. It is composed of all item numbers of the upper level components, separated by the '.' character, ended by the item number of the current component."
                },
                "Version": {
                    "type": "string",
                    "description": "Version of the cryptographic key."
                },
                "Type": {
                    "$ref": "#/$defs/CryptographicKeyType3Code",
                    "description": "Type of algorithm used by the cryptographic key."
                },
                "Function": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/KeyUsage1Code"
                    },
                    "minItems": 0,
                    "description": "Allowed usage of the key."
                },
                "ActivationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time on which the key must be activated."
                },
                "DeactivationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time on which the key must be deactivated."
                },
                "KeyValue": {
                    "$ref": "#/$defs/ContentInformationType39",
                    "description": "Encrypted cryptographic key."
                },
                "ComponentWithAuthorisedAccess": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GenericIdentification186"
                    },
                    "minItems": 0,
                    "description": "Identification of components which are allowed to access this cryptographic key."
                },
                "ProtectedComponentWithAuthorisedAccess": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ContentInformationType39"
                    },
                    "minItems": 0,
                    "description": "Protection of Identification of components which are allowed to access this cryptographic key."
                },
                "KeyCheckValue": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Value for checking a cryptographic key security parameter."
                },
                "AdditionalManagementInformation": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GenericInformation1"
                    },
                    "minItems": 0,
                    "description": "Additional Information needed by the receiver to securely process the management of the security element."
                }
            },
            "description": "Cryptographic Key."
        },
        "PointOfInteractionComponentCharacteristics10": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Memory": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/MemoryCharacteristics1"
                    },
                    "minItems": 0,
                    "description": "Memory characteristics of the component."
                },
                "Communication": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CommunicationCharacteristics5"
                    },
                    "minItems": 0,
                    "description": "Low level communication of the hardware or software component toward another component or an external entity."
                },
                "SecurityAccessModules": {
                    "type": "number",
                    "description": "Number of security access modules (SAM)."
                },
                "SubscriberIdentityModules": {
                    "type": "number",
                    "description": "Number of subscriber identity modules (SIM)."
                },
                "SecurityElement": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CryptographicKey18"
                    },
                    "minItems": 0,
                    "description": "Security characteristics of the component."
                }
            },
            "description": "Physical and logical characteristics of a POI component (Point of Interaction)."
        },
        "PointOfInteractionComponentAssessment1": {
            "type": "object",
            "required": [
                "Type",
                "Assigner",
                "Number"
            ],
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "$ref": "#/$defs/POIComponentAssessment1Code",
                    "description": "Type of assessment of the component."
                },
                "Assigner": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "description": "Body which has delivered the assessment."
                },
                "DeliveryDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the assessment has been delivered."
                },
                "ExpirationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date when the assessment will expire."
                },
                "Number": {
                    "type": "string",
                    "description": "Unique assessment number for the component."
                }
            },
            "description": "Assessments for the component of the point of interaction."
        },
        "GenericIdentification176": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of the entity."
                },
                "Type": {
                    "$ref": "#/$defs/PartyType33Code",
                    "description": "Type of identified entity."
                },
                "Issuer": {
                    "$ref": "#/$defs/PartyType33Code",
                    "description": "Entity assigning the identification (for example merchant, acceptor, acquirer, or tax authority)."
                },
                "Country": {
                    "type": "string",
                    "description": "Country of the entity (ISO 3166-1 alpha-2 or alpha-3)."
                },
                "ShortName": {
                    "type": "string",
                    "description": "Name of the entity."
                }
            },
            "description": "Identification of an entity."
        },
        "ExternallyDefinedData5": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of the set of data to exchange."
                },
                "Value": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Data to exchange according to an external standard."
                },
                "ProtectedValue": {
                    "$ref": "#/$defs/ContentInformationType39",
                    "description": "Protection of the values to exchange."
                },
                "Type": {
                    "type": "string",
                    "description": "Identification of the standard used to encode the values to exchange."
                }
            },
            "description": "Data container to exchange data elements defined by another standard."
        },
        "PackageType5": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PackageIdentification": {
                    "$ref": "#/$defs/GenericIdentification176",
                    "description": "Identification of the software packages of which the chunk belongs."
                },
                "PackageLength": {
                    "type": "number",
                    "description": "Full length of software package identified through PackageIdentification."
                },
                "OffsetStart": {
                    "type": "number",
                    "description": "Place of the first following PackageBlock, beginning with 0, in the full software package identified through PackageIdentification."
                },
                "OffsetEnd": {
                    "type": "number",
                    "description": "Following place of the last following PackageBlock in the full software package identified through PackageIdentification."
                },
                "PackageBlock": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ExternallyDefinedData5"
                    },
                    "minItems": 0,
                    "description": "Consecutive slices of the full software package identified through PackageIdentification starting with first slice at the place identified with OffsetStart and ending with the last slice at the previous place identified with OffsetEnd."
                }
            },
            "description": "Chunk of a software package."
        },
        "PointOfInteractionComponent15": {
            "type": "object",
            "required": [
                "Type",
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "$ref": "#/$defs/POIComponentType6Code",
                    "description": "Type of component belonging to a POI (Point Of Interaction) Terminal."
                },
                "SubTypeInformation": {
                    "type": "string",
                    "description": "Additional information regarding the type of the component."
                },
                "Identification": {
                    "$ref": "#/$defs/PointOfInteractionComponentIdentification2",
                    "description": "Identification of the POI (Point Of Interaction) component."
                },
                "Status": {
                    "$ref": "#/$defs/PointOfInteractionComponentStatus3",
                    "description": "Status of the POI (Point Of Interaction) component."
                },
                "StandardCompliance": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GenericIdentification48"
                    },
                    "minItems": 0,
                    "description": "Identification of the standard for which the component complies with."
                },
                "Characteristics": {
                    "$ref": "#/$defs/PointOfInteractionComponentCharacteristics10",
                    "description": "Characteristics of a POI (Point Of Interaction) component."
                },
                "Assessment": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/PointOfInteractionComponentAssessment1"
                    },
                    "minItems": 0,
                    "description": "Assessments for the component of the point of interaction."
                },
                "Package": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/PackageType5"
                    },
                    "minItems": 0,
                    "description": "Chunk of a software package."
                }
            },
            "description": "Data related to a component of the POI (Point Of Interaction) performing the transaction."
        },
        "PointOfInteraction14": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "$ref": "#/$defs/GenericIdentification177",
                    "description": "Identification of the POI (Point Of Interaction) for the acquirer or its agent."
                },
                "SystemName": {
                    "type": "string",
                    "description": "Common name assigned by the acquirer to the POI (Point Of Interaction) system."
                },
                "GroupIdentification": {
                    "type": "string",
                    "description": "Identifier assigned by the merchant identifying a set of POI (Point Of Interaction) terminals performing some categories of transactions."
                },
                "Capabilities": {
                    "$ref": "#/$defs/PointOfInteractionCapabilities9",
                    "description": "Capabilities of the POI (Point Of Interaction) performing the transaction."
                },
                "TimeZone": {
                    "type": "string",
                    "description": "Time zone name as defined by IANA (Internet Assigned Numbers Authority) in the time zone data base. America/Chicago or Europe/Paris are examples of time zone names."
                },
                "TerminalIntegration": {
                    "$ref": "#/$defs/LocationCategory3Code",
                    "description": "Indicates the type of integration of the POI terminal in the sale environment."
                },
                "Component": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/PointOfInteractionComponent15"
                    },
                    "minItems": 0,
                    "description": "Data related to a component of the POI (Point Of Interaction) performing the transaction."
                }
            },
            "description": "Point of interaction (POI) performing the transaction."
        },
        "ContentInformationType40": {
            "type": "object",
            "required": [
                "ContentType",
                "EnvelopedData"
            ],
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType2Code",
                    "description": "Type of data protection."
                },
                "EnvelopedData": {
                    "$ref": "#/$defs/EnvelopedData11",
                    "description": "Data protection by encryption or by a digital envelope, with an encryption key."
                }
            },
            "description": "General cryptographic message syntax (CMS) containing encrypted data."
        },
        "PlainCardData22": {
            "type": "object",
            "required": [
                "PAN"
            ],
            "additionalProperties": false,
            "properties": {
                "PAN": {
                    "type": "string",
                    "description": "Primary Account Number (PAN) of the card, or surrogate of the PAN by a payment token."
                },
                "CardSequenceNumber": {
                    "type": "string",
                    "description": "Identify a card or a payment token inside a set of cards with the same PAN or token."
                },
                "EffectiveDate": {
                    "type": "string",
                    "description": "Date from which the card can be used, expressed either in the YYYY-MM format, or in the YYYY-MM-DD format."
                },
                "ExpiryDate": {
                    "type": "string",
                    "description": "Expiry date of the card or the payment token expressed either in the YYYY-MM format, or in the YYYY-MM-DD format."
                },
                "ServiceCode": {
                    "type": "string",
                    "description": "Services attached to the card, as defined in ISO 7813."
                },
                "Track1": {
                    "type": "string",
                    "description": "ISO track 1 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The format is conform to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "Track2": {
                    "type": "string",
                    "description": "ISO track 2 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The content is conform to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "Track3": {
                    "type": "string",
                    "description": "ISO track 3 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The content is conform to ISO 4909, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "CardholderName": {
                    "type": "string",
                    "description": "Name of the cardholder stored on the card."
                }
            },
            "description": "Sensible data associated with the payment card performing the transaction."
        },
        "PaymentCard35": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ProtectedCardData": {
                    "$ref": "#/$defs/ContentInformationType40",
                    "description": "Replacement of the message element PlainCardData by a digital envelope using a cryptographic key."
                },
                "PrivateCardData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Replacement of the message element PlainCardData by a private envelope."
                },
                "PlainCardData": {
                    "$ref": "#/$defs/PlainCardData22",
                    "description": "Sensitive data associated with the card performing the transaction."
                },
                "PaymentAccountReference": {
                    "type": "string",
                    "description": "Unique reference to the card, used by both merchants and acquirers to link tokenized and non-tokenized transactions associated to the same underlying card."
                },
                "MaskedPAN": {
                    "type": "string",
                    "description": "Masked PAN to be printed on payment receipts or displayed to the cardholder. Masked digits may be absent or replaced by another character as '*'."
                },
                "IssuerBIN": {
                    "type": "string",
                    "description": "Bank identifier number of the issuer for routing purpose."
                },
                "CardCountryCode": {
                    "type": "string",
                    "description": "Country code assigned to the card by the card issuer."
                },
                "CardCurrencyCode": {
                    "type": "string",
                    "description": "Currency code of the card issuer (ISO 4217 numeric code)."
                },
                "CardProductProfile": {
                    "type": "string",
                    "description": "Defines a category of cards related to the acceptance processing rules defined by the acquirer."
                },
                "CardBrand": {
                    "type": "string",
                    "description": "Brand name of the card."
                },
                "CardProductType": {
                    "$ref": "#/$defs/CardProductType1Code",
                    "description": "Type of card product."
                },
                "CardProductSubType": {
                    "type": "string",
                    "description": "Additional information to identify CardProduct."
                },
                "InternationalCard": {
                    "type": "boolean",
                    "description": "True if the card may be used abroad."
                },
                "AllowedProduct": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Product that can be purchased with the card."
                },
                "ServiceOption": {
                    "type": "string",
                    "description": "Options to the service provided by the card."
                },
                "AdditionalCardData": {
                    "type": "string",
                    "description": "Additional card issuer specific data."
                }
            },
            "description": "Payment card performing the transaction."
        },
        "TrackData2": {
            "type": "object",
            "required": [
                "TrackValue"
            ],
            "additionalProperties": false,
            "properties": {
                "TrackNumber": {
                    "type": "number",
                    "description": "Track number of the card."
                },
                "TrackFormat": {
                    "$ref": "#/$defs/TrackFormat1Code",
                    "description": "Card or check track format."
                },
                "TrackValue": {
                    "type": "string",
                    "description": "Card track content or equivalent."
                }
            },
            "description": "Magnetic track or equivalent payment card data."
        },
        "Check1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "BankIdentification": {
                    "type": "string",
                    "description": "Identification of the institution (bank) issuing the check."
                },
                "AccountNumber": {
                    "type": "string",
                    "description": "Identification of the account linked to the check."
                },
                "CheckNumber": {
                    "type": "string",
                    "description": "Identification of the check."
                },
                "CheckCardNumber": {
                    "type": "string",
                    "description": "Check guarantee card number.\r\nThe human readable number from the Check Guarantee Card that is presented during the check tendering process."
                },
                "CheckTrackData2": {
                    "$ref": "#/$defs/TrackData2",
                    "description": "Track Data of the check to digitally identify the data."
                },
                "CheckType": {
                    "$ref": "#/$defs/CheckType1Code",
                    "description": "Type of the check (personal or professional)."
                },
                "Country": {
                    "type": "string",
                    "description": "Country of the check."
                }
            },
            "description": "Identification of check as payment instrument."
        },
        "StoredValueAccount2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AccountType": {
                    "$ref": "#/$defs/StoredValueAccountType1Code",
                    "description": "Type of stored value account."
                },
                "IdentificationType": {
                    "$ref": "#/$defs/CardIdentificationType1Code",
                    "description": "Type of identification for this Stored Value Account."
                },
                "Identification": {
                    "type": "string",
                    "description": "Identification of Stored Value Account."
                },
                "Brand": {
                    "type": "string",
                    "description": "Brand to which belong the account."
                },
                "Provider": {
                    "type": "string",
                    "description": "Provider of the Stored Value Account."
                },
                "OwnerName": {
                    "type": "string",
                    "description": "Owner name of an account."
                },
                "ExpiryDate": {
                    "type": "string",
                    "description": "Expiry date of the account of card."
                },
                "EntryMode": {
                    "$ref": "#/$defs/CardDataReading8Code",
                    "description": "Standard or last entry mode to access the Stored Value account or card."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of the Stored Value account."
                },
                "Balance": {
                    "type": "number",
                    "description": "Current balance of the Stored Value account."
                }
            },
            "description": "Identification of the stored value account or the stored value card (Prepaid card)."
        },
        "LoyaltyAccount3": {
            "type": "object",
            "required": [
                "LoyaltyIdentification"
            ],
            "additionalProperties": false,
            "properties": {
                "LoyaltyIdentification": {
                    "type": "string",
                    "description": "Identification of Loyalty Account."
                },
                "EntryMode": {
                    "$ref": "#/$defs/CardDataReading8Code",
                    "description": "Standard or last entry mode to access the Loyalty account or card."
                },
                "IdentificationType": {
                    "$ref": "#/$defs/CardIdentificationType1Code",
                    "description": "Type of identification for this Loyalty Account."
                },
                "Brand": {
                    "type": "string",
                    "description": "Brand to which belong the account."
                },
                "Provider": {
                    "type": "string",
                    "description": "Provider of the Loyalty Account."
                },
                "OwnerName": {
                    "type": "string",
                    "description": "Owner name of an account."
                },
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code",
                    "description": "Unit of a Loyalty Account (Point or Currency)."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of a Loyalty Account if any."
                },
                "Balance": {
                    "type": "number",
                    "description": "Balance of a Loyalty Account."
                }
            },
            "description": "Loyalty Account description."
        },
        "CustomerDevice3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identifier of the component."
                },
                "Type": {
                    "type": "string",
                    "description": "Type of component."
                },
                "Provider": {
                    "type": "string",
                    "description": "Provider of the component."
                }
            },
            "description": "Device used by the customer to perform the payment."
        },
        "Token1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PaymentToken": {
                    "type": "string",
                    "description": "Surrogate value of the PAN."
                },
                "TokenExpiryDate": {
                    "type": "string",
                    "description": "Expiry date of the payment token.\r\nISO 8583 bit 14."
                },
                "TokenRequestorIdentification": {
                    "type": "string",
                    "description": "Identification of a party requesting a token."
                },
                "TokenAssuranceData": {
                    "type": "string",
                    "description": "Supporting information for the Token Assurance Method."
                },
                "TokenAssuranceMethod": {
                    "type": "string",
                    "description": "Value that allows a Token Service Provider to indicate the identification and verification performed representing the binding of the payment token to the underlying PAN and cardholder."
                },
                "TokenInitiatedIndicator": {
                    "type": "boolean",
                    "description": "Original transaction was initiated by Token."
                }
            },
            "description": "Unencrypted sensitive data of a token."
        },
        "PaymentTokenIdentifiers1": {
            "type": "object",
            "required": [
                "ProviderIdentification",
                "RequestorIdentification"
            ],
            "additionalProperties": false,
            "properties": {
                "ProviderIdentification": {
                    "type": "string",
                    "description": "Identifier of the token provider."
                },
                "RequestorIdentification": {
                    "type": "string",
                    "description": "Identifier of the token requestor."
                }
            },
            "description": "Identifier of a token provider requestor."
        },
        "MerchantToken2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Token": {
                    "type": "string",
                    "description": "Surrogate value of the PAN."
                },
                "TokenExpiryDate": {
                    "type": "string",
                    "description": "Expiration date of the payment token that is generated by and maintained in the token vault."
                },
                "TokenCharacteristic": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Additional payment token information."
                },
                "TokenRequestor": {
                    "$ref": "#/$defs/PaymentTokenIdentifiers1",
                    "description": "Identifier of a token provider requestor."
                },
                "TokenAssuranceLevel": {
                    "type": "number",
                    "description": "Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it."
                },
                "TokenAssuranceData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Information about the identification and verification of the cardholder."
                },
                "TokenAssuranceMethod": {
                    "type": "string",
                    "description": "Value that allows a Token Service Provider to indicate the identification and verification performed representing the binding of the payment token to the underlying PAN and cardholder."
                },
                "TokenInitiatedIndicator": {
                    "type": "boolean",
                    "description": "Original transaction was initiated by Token."
                }
            },
            "description": "Merchant token information."
        },
        "DateAndPlaceOfBirth1": {
            "type": "object",
            "required": [
                "BirthDate",
                "CityOfBirth",
                "CountryOfBirth"
            ],
            "additionalProperties": false,
            "properties": {
                "BirthDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date on which a person is born."
                },
                "ProvinceOfBirth": {
                    "type": "string",
                    "description": "Province where a person was born."
                },
                "CityOfBirth": {
                    "type": "string",
                    "description": "City where a person was born."
                },
                "CountryOfBirth": {
                    "type": "string",
                    "description": "Country where a person was born."
                }
            },
            "description": "Date and place of birth of a person."
        },
        "GenericIdentification4": {
            "type": "object",
            "required": [
                "Identification",
                "IdentificationType"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identifier issued to a person for which no specific identifier has been defined."
                },
                "IdentificationType": {
                    "type": "string",
                    "description": "Specifies the nature of the identifier.\nUsage: IdentificationType is used to specify what kind of identifier is used. It should be used in case the identifier is different from the identifiers listed in the pre-defined identifier list."
                }
            },
            "description": "Information related to an identification, eg, party identification or account identification."
        },
        "PersonIdentification15": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "DriverLicenseNumber": {
                    "type": "string",
                    "description": "Number assigned by a license authority to a driver's license."
                },
                "DriverLicenseLocation": {
                    "type": "string",
                    "description": "Country, state or province, issuer of the driver license."
                },
                "DriverLicenseName": {
                    "type": "string",
                    "description": "Name or title of the driver license."
                },
                "DriverIdentification": {
                    "type": "string",
                    "description": "Identification of the driver in the fleet of vehicle."
                },
                "CustomerNumber": {
                    "type": "string",
                    "description": "Number assigned by an agent to identify its customer."
                },
                "SocialSecurityNumber": {
                    "type": "string",
                    "description": "Number assigned by a social security agency."
                },
                "AlienRegistrationNumber": {
                    "type": "string",
                    "description": "Number assigned by a government agency to identify foreign nationals."
                },
                "PassportNumber": {
                    "type": "string",
                    "description": "Number assigned by a passport authority to a passport."
                },
                "TaxIdentificationNumber": {
                    "type": "string",
                    "description": "Number assigned by a tax authority to an entity."
                },
                "IdentityCardNumber": {
                    "type": "string",
                    "description": "Number assigned by a national authority to an identity card."
                },
                "EmployerIdentificationNumber": {
                    "type": "string",
                    "description": "Number assigned to an employer by a registration authority."
                },
                "EmployeeIdentificationNumber": {
                    "type": "string",
                    "description": "Number assigned to an employee by a employer."
                },
                "JobNumber": {
                    "type": "string",
                    "description": "Identification of the job."
                },
                "Department": {
                    "type": "string",
                    "description": "Identification of the department."
                },
                "EmailAddress": {
                    "type": "string",
                    "description": "Address for electronic mail (e-mail)."
                },
                "DateAndPlaceOfBirth": {
                    "$ref": "#/$defs/DateAndPlaceOfBirth1",
                    "description": "Date and place of birth of a person."
                },
                "Other": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GenericIdentification4"
                    },
                    "minItems": 0,
                    "description": "Unique identification of a person, as assigned by an institution, using an identification scheme."
                }
            },
            "description": "Set of unique and unambiguous ways to identify a person."
        },
        "PlainCardData17": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PAN": {
                    "type": "string",
                    "description": "Primary Account Number (PAN) of the card."
                },
                "Track1": {
                    "type": "string",
                    "description": "ISO track 1 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The format is conform to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "Track2": {
                    "type": "string",
                    "description": "ISO track 2 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The content is conform to ISO 7813, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "Track3": {
                    "type": "string",
                    "description": "ISO track 3 issued from the magnetic stripe card or from the ICC if the magnetic stripe was not read. The content is conform to ISO 4909, removing beginning and ending sentinels and longitudinal redundancy check characters."
                },
                "AdditionalCardData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Additional card issuer specific data."
                },
                "EntryMode": {
                    "$ref": "#/$defs/CardDataReading5Code",
                    "description": "Entry mode of the card."
                }
            },
            "description": "Sensitive data associated with a payment card."
        },
        "Vehicle2": {
            "type": "object",
            "required": [
                "Data"
            ],
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "type": "string",
                    "description": "Type of information related to the vehicle."
                },
                "EntryMode": {
                    "$ref": "#/$defs/CardDataReading5Code",
                    "description": "Entry mode of the information."
                },
                "Data": {
                    "type": "string",
                    "description": "Information related to the vehicle."
                }
            },
            "description": "Additional information related to a vehicle."
        },
        "Vehicle1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "VehicleNumber": {
                    "type": "string",
                    "description": "Number assigned to the vehicle for identification."
                },
                "TrailerNumber": {
                    "type": "string",
                    "description": "Number assigned to the vehicle trailer for identification."
                },
                "VehicleTag": {
                    "type": "string",
                    "description": "Registration tag of the vehicle."
                },
                "VehicleTagEntryMode": {
                    "$ref": "#/$defs/CardDataReading5Code",
                    "description": "Entry mode of the registration tag."
                },
                "UnitNumber": {
                    "type": "string",
                    "description": "Identification of the vehicle in the fleet."
                },
                "ReplacementCar": {
                    "type": "boolean",
                    "description": "True if the car is a replacement car."
                },
                "Odometer": {
                    "type": "number",
                    "description": "Odometer reading value indicating the distance travelled by the vehicle."
                },
                "Hubometer": {
                    "type": "number",
                    "description": "Hubometer reading value indicating the distance travelled by the trailer."
                },
                "TrailerHours": {
                    "type": "string",
                    "description": "Number of hours the trailer has been in operation."
                },
                "ReferHours": {
                    "type": "string",
                    "description": "Number of hours the refer unit has been in operation."
                },
                "MaintenanceIdentification": {
                    "type": "string",
                    "description": "Identification assigned to the vehicle related to maintenance."
                },
                "DriverOrVehicleCard": {
                    "$ref": "#/$defs/PlainCardData17",
                    "description": "Second card presented for the payment transaction."
                },
                "AdditionalVehicleData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Vehicle2"
                    },
                    "minItems": 0,
                    "description": "Additional information related to the vehicle."
                }
            },
            "description": "Information related to a vehicle used during a transaction."
        },
        "OnLinePIN11": {
            "type": "object",
            "required": [
                "EncryptedPINBlock",
                "PINFormat"
            ],
            "additionalProperties": false,
            "properties": {
                "EncryptedPINBlock": {
                    "$ref": "#/$defs/ContentInformationType40",
                    "description": "Encrypted PIN (Personal Identification Number)."
                },
                "PINFormat": {
                    "$ref": "#/$defs/PINFormat3Code",
                    "description": "PIN (Personal Identification Number) format before encryption."
                },
                "AdditionalInput": {
                    "type": "string",
                    "description": "Additional information required to verify the PIN (Personal Identification Number)."
                }
            },
            "description": "Encrypted personal identification number (PIN) and related information."
        },
        "AddressVerification1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AddressDigits": {
                    "type": "string",
                    "description": "Numeric characters from the cardholder's address excluding the postal code (that is street number)."
                },
                "PostalCodeDigits": {
                    "type": "string",
                    "description": "Numeric characters from the cardholder's postal code."
                }
            },
            "description": "Numeric characters of the cardholder's address for verification."
        },
        "CardholderAuthentication17": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AuthenticationMethod": {
                    "$ref": "#/$defs/AuthenticationMethod8Code",
                    "description": "Method and data intended to be used for this transaction to authenticate the cardholder or its card."
                },
                "AuthenticationExemption": {
                    "$ref": "#/$defs/Exemption1Code",
                    "description": "If Strong Customer Authentication is not mandated to process the transaction, this message element must identify the reason of exemption."
                },
                "AuthenticationValue": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Value used to authenticate the cardholder."
                },
                "ProtectedAuthenticationValue": {
                    "$ref": "#/$defs/ContentInformationType40",
                    "description": "Protection of the authentication value."
                },
                "CardholderOnLinePIN": {
                    "$ref": "#/$defs/OnLinePIN11",
                    "description": "Encrypted personal identification number (PIN) and related information."
                },
                "CardholderIdentification": {
                    "$ref": "#/$defs/PersonIdentification15",
                    "description": "Identification of the cardholder to verify."
                },
                "AddressVerification": {
                    "$ref": "#/$defs/AddressVerification1",
                    "description": "Numeric characters of the cardholder's billing or shipping address for verification."
                },
                "AuthenticationType": {
                    "type": "string",
                    "description": "Type of authentication for a given method - e.g. three-domain authentication, scheme-proprietary authentication, etc."
                },
                "AuthenticationLevel": {
                    "type": "string",
                    "description": "Level of authentication for a given type – e.g. value assigned by scheme rules or by bilateral agreements."
                },
                "AuthenticationResult": {
                    "$ref": "#/$defs/AuthenticationResult1Code",
                    "description": "Result of authentication."
                },
                "AuthenticationAdditionalInformation": {
                    "$ref": "#/$defs/ExternallyDefinedData5",
                    "description": "Additional information related to the result of the authentication."
                }
            },
            "description": "Data related to the authentication of the cardholder."
        },
        "TransactionVerificationResult4": {
            "type": "object",
            "required": [
                "Method"
            ],
            "additionalProperties": false,
            "properties": {
                "Method": {
                    "$ref": "#/$defs/AuthenticationMethod6Code",
                    "description": "Method of verification that has been performed."
                },
                "VerificationEntity": {
                    "$ref": "#/$defs/AuthenticationEntity2Code",
                    "description": "Entity or device that has performed the verification."
                },
                "Result": {
                    "$ref": "#/$defs/Verification1Code",
                    "description": "Result of the verification."
                },
                "AdditionalResult": {
                    "type": "string",
                    "description": "Additional result of the verification."
                }
            },
            "description": "Result of performed verifications for the transaction."
        },
        "SensitiveMobileData1": {
            "type": "object",
            "required": [
                "MSISDN"
            ],
            "additionalProperties": false,
            "properties": {
                "MSISDN": {
                    "type": "string",
                    "description": "identifies the mobile - Mobile Subscriber Integrated Service Digital Network (The SIM identifier)."
                },
                "IMSI": {
                    "type": "string",
                    "description": "International Mobile Subscriber Identity is a unique number associated with the mobile phone user, containing the Mobile Country Code (MCC), the Mobile Network Code (MNC), and the Mobile Identification Number (MSIN)."
                },
                "IMEI": {
                    "type": "string",
                    "description": "International Mobile Equipment Identity is a number usually unique to identify a mobile phone."
                }
            },
            "description": "Sensitive information related to the mobile phone."
        },
        "MobileData6": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "MobileCountryCode": {
                    "type": "string",
                    "description": "Identifies the country of a mobile phone operator."
                },
                "MobileNetworkCode": {
                    "type": "string",
                    "description": "Identifies the mobile phone operator inside a country."
                },
                "MobileMaskedMSISDN": {
                    "type": "string",
                    "description": "Masked Mobile Subscriber Integrated Service Digital Network."
                },
                "Geolocation": {
                    "$ref": "#/$defs/Geolocation1",
                    "description": "Geographic location specified by geographic or UTM coordinates."
                },
                "SensitiveMobileData": {
                    "$ref": "#/$defs/SensitiveMobileData1",
                    "description": "Sensitive information related to the mobile phone."
                },
                "ProtectedMobileData": {
                    "$ref": "#/$defs/ContentInformationType40",
                    "description": "Sensitive information related to the mobile phone, protected by CMS."
                }
            },
            "description": "Data related to the mobile of stakeholder."
        },
        "Cardholder21": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "$ref": "#/$defs/PersonIdentification15",
                    "description": "Identification of the cardholder involved in a transaction."
                },
                "Name": {
                    "type": "string",
                    "description": "Cardholder name associated with the card."
                },
                "Language": {
                    "type": "string",
                    "description": "Language selected for the cardholder interface during the transaction.\r\nReference ISO 639-1 (alpha-2) et ISO 639-2 (alpha-3)."
                },
                "BillingAddress": {
                    "$ref": "#/$defs/PostalAddress22",
                    "description": "Postal address of the owner of the payment card."
                },
                "ShippingAddress": {
                    "$ref": "#/$defs/PostalAddress22",
                    "description": "Postal address for delivery of goods or services."
                },
                "TripNumber": {
                    "type": "string",
                    "description": "Identification of the trip."
                },
                "Vehicle": {
                    "$ref": "#/$defs/Vehicle1",
                    "description": "Information related to the vehicle used for the transaction."
                },
                "Authentication": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CardholderAuthentication17"
                    },
                    "minItems": 0,
                    "description": "Method and data intended to be used for this transaction to authenticate the cardholder and its card."
                },
                "TransactionVerificationResult": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/TransactionVerificationResult4"
                    },
                    "minItems": 0,
                    "description": "Result of performed verifications for the transaction."
                },
                "PersonalData": {
                    "type": "string",
                    "description": "Identifies personal data related to the cardholder."
                },
                "MobileData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/MobileData6"
                    },
                    "minItems": 0,
                    "description": "Data related to the mobile of stakeholder."
                }
            },
            "description": "Data related to the cardholder."
        },
        "RetailerSaleEnvironment2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SaleCapabilities": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/SaleCapabilities1Code"
                    },
                    "minItems": 0,
                    "description": "Capabilities of the Sale system."
                },
                "Currency": {
                    "type": "string",
                    "description": "Default currency associated with the sale system."
                },
                "MinimumAmountToDeliver": {
                    "type": "number",
                    "description": "Minimum amount the Sale System is allowed to deliver for this payment."
                },
                "MaximumCashBackAmount": {
                    "type": "number",
                    "description": "Maximum amount which could be requested for cash-back."
                },
                "MinimumSplitAmount": {
                    "type": "number",
                    "description": "Minimum amount to split a sale transaction."
                },
                "DebitPreferredFlag": {
                    "type": "boolean",
                    "description": "Flag if preferred type of payment is a debit transaction."
                },
                "LoyaltyHandling": {
                    "$ref": "#/$defs/LoyaltyHandling1Code",
                    "description": "Way of Loyalty handling."
                }
            },
            "description": "Environment of Retailer for this message."
        },
        "CardPaymentEnvironment80": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Acquirer": {
                    "$ref": "#/$defs/Acquirer10",
                    "description": "Acquirer involved in the card payment."
                },
                "ServiceProvider": {
                    "$ref": "#/$defs/Acquirer10",
                    "description": "Third party agent which provides services."
                },
                "Merchant": {
                    "$ref": "#/$defs/Organisation41",
                    "description": "Merchant performing the card payment transaction.\r\nUsage: In some cases, merchant and acceptor may be regarded as the same entity."
                },
                "POI": {
                    "$ref": "#/$defs/PointOfInteraction14",
                    "description": "Point of interaction (POI) performing the transaction."
                },
                "Card": {
                    "$ref": "#/$defs/PaymentCard35",
                    "description": "Payment card performing the transaction."
                },
                "Check": {
                    "$ref": "#/$defs/Check1",
                    "description": "Check Payment instrument."
                },
                "StoredValueAccount": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/StoredValueAccount2"
                    },
                    "minItems": 0,
                    "description": "Store value account payment instrument."
                },
                "LoyaltyAccount": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/LoyaltyAccount3"
                    },
                    "minItems": 0,
                    "description": "Store value account associated to the payment."
                },
                "CustomerDevice": {
                    "$ref": "#/$defs/CustomerDevice3",
                    "description": "Device used by the customer to perform the payment transaction."
                },
                "Wallet": {
                    "$ref": "#/$defs/CustomerDevice3",
                    "description": "Container for tenders used by the customer to perform the payment transaction."
                },
                "PaymentToken": {
                    "$ref": "#/$defs/Token1",
                    "description": "Payment token information."
                },
                "MerchantToken": {
                    "$ref": "#/$defs/MerchantToken2",
                    "description": "Merchant token information."
                },
                "Cardholder": {
                    "$ref": "#/$defs/Cardholder21",
                    "description": "Cardholder involved in the card payment."
                },
                "ProtectedCardholderData": {
                    "$ref": "#/$defs/ContentInformationType40",
                    "description": "Replacement of the message element Cardholder by a digital envelope using a cryptographic key."
                },
                "SaleEnvironment": {
                    "$ref": "#/$defs/RetailerSaleEnvironment2",
                    "description": "Sale Retailer Environment for this message."
                }
            },
            "description": "Environment of the transaction."
        },
        "PaymentContext29": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CardPresent": {
                    "type": "boolean",
                    "description": "Indicates whether the transaction has been initiated by a card physically present or not."
                },
                "CardholderPresent": {
                    "type": "boolean",
                    "description": "Indicates whether the transaction has been initiated in presence of the cardholder or not."
                },
                "OnLineContext": {
                    "type": "boolean",
                    "description": "On-line or off-line context of the transaction."
                },
                "AttendanceContext": {
                    "$ref": "#/$defs/AttendanceContext1Code",
                    "description": "Human attendance at the POI (Point Of Interaction) location during the transaction."
                },
                "TransactionEnvironment": {
                    "$ref": "#/$defs/TransactionEnvironment1Code",
                    "description": "Indicates the environment of the transaction."
                },
                "TransactionChannel": {
                    "$ref": "#/$defs/TransactionChannel5Code",
                    "description": "Identifies the type of the communication channels used by the cardholder to the acceptor system."
                },
                "BusinessArea": {
                    "$ref": "#/$defs/BusinessArea2Code",
                    "description": "Defines the business context of this transaction that could imply specific scheme rules."
                },
                "AttendantMessageCapable": {
                    "type": "boolean",
                    "description": "Indicates whether a message can be sent or not on an attendant display (attendant display present or not)."
                },
                "AttendantLanguage": {
                    "type": "string",
                    "description": "Language used to display messages to the attendant.\r\nReference ISO 639-1 (alpha-2) et ISO 639-2 (alpha-3)."
                },
                "CardDataEntryMode": {
                    "$ref": "#/$defs/CardDataReading8Code",
                    "description": "Entry mode of the card data."
                },
                "FallbackIndicator": {
                    "$ref": "#/$defs/CardFallback1Code",
                    "description": "Indicator of a card entry mode fallback."
                },
                "SupportedOption": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/SupportedPaymentOption2Code"
                    },
                    "minItems": 0,
                    "description": "Payment options the card acceptor can support."
                }
            },
            "description": "Payment context in which the transaction is performed."
        },
        "Organisation26": {
            "type": "object",
            "required": [
                "CommonName",
                "CountryCode",
                "MerchantCategoryCode",
                "RegisteredIdentifier"
            ],
            "additionalProperties": false,
            "properties": {
                "CommonName": {
                    "type": "string",
                    "description": "Name of the merchant."
                },
                "Address": {
                    "type": "string",
                    "description": "Location of the merchant."
                },
                "CountryCode": {
                    "type": "string",
                    "description": "Country of the merchant."
                },
                "MerchantCategoryCode": {
                    "type": "string",
                    "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction."
                },
                "RegisteredIdentifier": {
                    "type": "string",
                    "description": "Identifier of the sponsored merchant assigned by the payment facilitator of their acquirer."
                }
            },
            "description": "Merchant performing the transaction."
        },
        "SaleContext4": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SaleIdentification": {
                    "type": "string",
                    "description": "Identification of the sale terminal (electronic cash register or point of sale terminal) or the sale system."
                },
                "SaleReferenceNumber": {
                    "type": "string",
                    "description": "Identify a sale transaction assigned by the sale system."
                },
                "SaleReconciliationIdentification": {
                    "type": "string",
                    "description": "Identifier of the reconciliation between the Sale system and the POI system."
                },
                "CashierIdentification": {
                    "type": "string",
                    "description": "Identification of the cashier who carried out the transaction."
                },
                "CashierLanguage": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Languages used by the cashier."
                },
                "ShiftNumber": {
                    "type": "string",
                    "description": "Identifies the shift of the cashier."
                },
                "CustomerOrderRequestFlag": {
                    "type": "boolean",
                    "description": "Flag indicating that list of CustomerOrders should be returned in response."
                },
                "PurchaseOrderNumber": {
                    "type": "string",
                    "description": "Identification of the purchase order."
                },
                "InvoiceNumber": {
                    "type": "string",
                    "description": "Identification of the invoice."
                },
                "DeliveryNoteNumber": {
                    "type": "string",
                    "description": "Identification allocated by the sale system and given to the customer."
                },
                "SponsoredMerchant": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Organisation26"
                    },
                    "minItems": 0,
                    "description": "Merchant using the payment services of a payment facilitator, acting as a card acceptor."
                },
                "SplitPayment": {
                    "type": "boolean",
                    "description": "True if the payment transaction is a partial payment of the sale transaction."
                },
                "RemainingAmount": {
                    "type": "number",
                    "description": "Remaining amount to complete the sale transaction, if a partial payment has been completed for the sale transaction."
                },
                "ForceOnlineFlag": {
                    "type": "boolean",
                    "description": "Indicates if the Cashier requires POI forces online access to the Acquirer."
                },
                "ReuseCardDataFlag": {
                    "type": "boolean",
                    "description": "Indicates if the card data has to be taken from a previous transaction."
                },
                "AllowedEntryMode": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CardDataReading8Code"
                    },
                    "minItems": 0,
                    "description": "Type of card data reading."
                },
                "SaleTokenScope": {
                    "$ref": "#/$defs/SaleTokenScope1Code",
                    "description": "Scope of the token that identifies the payment mean of the customer."
                },
                "AdditionalSaleData": {
                    "type": "string",
                    "description": "Additional information associated with the sale transaction."
                }
            },
            "description": "Sale context in which the transaction is performed."
        },
        "GenericIdentification36": {
            "type": "object",
            "required": [
                "Identification",
                "Issuer"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Proprietary information, often a code, issued by the data source scheme issuer."
                },
                "Issuer": {
                    "type": "string",
                    "description": "Entity that assigns the identification."
                },
                "SchemeName": {
                    "type": "string",
                    "description": "Short textual description of the scheme."
                }
            },
            "description": "Identification using a proprietary scheme."
        },
        "PostalAddress2": {
            "type": "object",
            "required": [
                "PostCodeIdentification",
                "TownName",
                "Country"
            ],
            "additionalProperties": false,
            "properties": {
                "StreetName": {
                    "type": "string",
                    "description": "Name of a street or thoroughfare."
                },
                "PostCodeIdentification": {
                    "type": "string",
                    "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
                },
                "TownName": {
                    "type": "string",
                    "description": "Name of a built-up area, with defined boundaries, and a local government."
                },
                "CountrySubDivision": {
                    "type": "string",
                    "description": "Identifies a subdivision of a country for example, state, region, county."
                },
                "Country": {
                    "type": "string",
                    "description": "Nation with its own government."
                }
            },
            "description": "Address of a party expressed in a formal structure, usually according to the country's postal services specifications."
        },
        "NameAndAddress6": {
            "type": "object",
            "required": [
                "Name",
                "Address"
            ],
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "type": "string",
                    "description": "Name by which a party is known and which is usually used to identify that party."
                },
                "Address": {
                    "$ref": "#/$defs/PostalAddress2",
                    "description": "Information that locates and identifies a specific address, as defined by postal services."
                }
            },
            "description": "Name and address of an institution."
        },
        "PartyIdentification178Choice": {
            "type": "object",
            "required": [
                "AnyBIC",
                "ProprietaryIdentification",
                "NameAndAddress"
            ],
            "additionalProperties": false,
            "properties": {
                "AnyBIC": {
                    "type": "string",
                    "description": "Unique and unambiguous identifier for an organisation that is allocated by an institution, for example, Dun & Bradstreet Identification."
                },
                "ProprietaryIdentification": {
                    "$ref": "#/$defs/GenericIdentification36",
                    "description": "Unique and unambiguous identifier, as assigned to a financial institution using a proprietary identification scheme."
                },
                "NameAndAddress": {
                    "$ref": "#/$defs/NameAndAddress6",
                    "description": "Name by which a party is known and which is usually used to identify that party."
                }
            },
            "description": "Identification of a party."
        },
        "SimpleIdentificationInformation4": {
            "type": "object",
            "required": [
                "Identification"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Name or number assigned by an entity to enable recognition of that entity, for example, account identifier."
                }
            },
            "description": "Information related to an identification, for example, party identification or account identification."
        },
        "CashAccountIdentification7Choice": {
            "type": "object",
            "required": [
                "IBAN",
                "BBAN",
                "UPIC",
                "DomesticAccount"
            ],
            "additionalProperties": false,
            "properties": {
                "IBAN": {
                    "type": "string",
                    "description": "International Bank Account Number (IBAN) - identifier used internationally by financial institutions to uniquely identify the account of a customer. Further specifications of the format and content of the IBAN can be found in the standard ISO 13616 \"Banking and related financial services - International Bank Account Number (IBAN)\" version 1997-10-01, or later revisions."
                },
                "BBAN": {
                    "type": "string",
                    "description": "Basic Bank Account Number (BBAN) - identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), to uniquely identify the account of a customer."
                },
                "UPIC": {
                    "type": "string",
                    "description": "Universal Payment Identification Code (UPIC) - identifier used by the New York Clearing House to mask confidential data, such as bank accounts and bank routing numbers. UPIC numbers remain with business customers, regardless of banking relationship changes."
                },
                "DomesticAccount": {
                    "$ref": "#/$defs/SimpleIdentificationInformation4",
                    "description": "Account number used by financial institutions in individual countries to identify an account of a customer, but not necessarily the bank and branch of the financial institution in which the account is held."
                }
            },
            "description": "Choice between formats for the identification of a cash account."
        },
        "Debtor4": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Debtor": {
                    "$ref": "#/$defs/PartyIdentification178Choice",
                    "description": "Party that owes an amount of money to the (ultimate) creditor. In the context of the payment model, the debtor is also the debit account owner."
                },
                "AccountIdentification": {
                    "$ref": "#/$defs/CashAccountIdentification7Choice",
                    "description": "Unique and unambiguous identification for the account between the account owner and the account servicer."
                }
            },
            "description": "Information about the debtor."
        },
        "Creditor4": {
            "type": "object",
            "required": [
                "Creditor"
            ],
            "additionalProperties": false,
            "properties": {
                "Creditor": {
                    "$ref": "#/$defs/PartyIdentification178Choice",
                    "description": "Party that receives an amount of money from the debtor. In the context of the payment model, the creditor is also the credit account owner."
                },
                "RegistrationIdentification": {
                    "type": "string",
                    "description": "Reference assigned to a creditor by its financial institution, or relevant authority, authorising the creditor to take part in a direct debit scheme."
                }
            },
            "description": "Information about the creditor."
        },
        "MandateRelatedInformation13": {
            "type": "object",
            "required": [
                "MandateIdentification"
            ],
            "additionalProperties": false,
            "properties": {
                "MandateIdentification": {
                    "type": "string",
                    "description": "Unique identification, as assigned by the creditor, to unambiguously identify the mandate."
                },
                "DateOfSignature": {
                    "type": "string",
                    "format": "date",
                    "description": "Date on which the direct debit mandate has been signed by the debtor."
                },
                "MandateImage": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Image of scanned signed mandate."
                }
            },
            "description": "Provides further details related to a direct debit mandate signed between the creditor and the debtor."
        },
        "CardDirectDebit2": {
            "type": "object",
            "required": [
                "CreditorIdentification",
                "MandateRelatedInformation"
            ],
            "additionalProperties": false,
            "properties": {
                "DebtorIdentification": {
                    "$ref": "#/$defs/Debtor4",
                    "description": "Information related to the debtor."
                },
                "CreditorIdentification": {
                    "$ref": "#/$defs/Creditor4",
                    "description": "Information related to the creditor."
                },
                "MandateRelatedInformation": {
                    "$ref": "#/$defs/MandateRelatedInformation13",
                    "description": "Provides further details of the mandate signed between the creditor and the debtor."
                }
            },
            "description": "Element containing all information needed for a card initiating direct debit."
        },
        "CardPaymentContext30": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PaymentContext": {
                    "$ref": "#/$defs/PaymentContext29",
                    "description": "Context of the card payment transaction."
                },
                "SaleContext": {
                    "$ref": "#/$defs/SaleContext4",
                    "description": "Context of the sale involving the card payment transaction."
                },
                "DirectDebitContext": {
                    "$ref": "#/$defs/CardDirectDebit2",
                    "description": "Context of the direct debit transaction."
                }
            },
            "description": "Context in which the transaction is performed (payment and sale)."
        },
        "TransactionIdentifier1": {
            "type": "object",
            "required": [
                "TransactionDateTime",
                "TransactionReference"
            ],
            "additionalProperties": false,
            "properties": {
                "TransactionDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Local date and time of the transaction assigned by the POI (Point Of Interaction)."
                },
                "TransactionReference": {
                    "type": "string",
                    "description": "Identification of the transaction that has to be unique for a time period."
                }
            },
            "description": "Identification of the transaction in an unambiguous way."
        },
        "CurrencyDetails3": {
            "type": "object",
            "required": [
                "AlphaCode",
                "NumericCode",
                "Decimal"
            ],
            "additionalProperties": false,
            "properties": {
                "AlphaCode": {
                    "type": "string",
                    "description": "Alpha currency code (ISO 4217, 3 alphanumeric characters)."
                },
                "NumericCode": {
                    "type": "string",
                    "description": "Numeric currency code (ISO 4217, 3 numeric characters)."
                },
                "Decimal": {
                    "type": "number",
                    "description": "Maximal number of digits after the decimal separator for the currency."
                },
                "Name": {
                    "type": "string",
                    "description": "Full name of the currency."
                }
            },
            "description": "Details of a currency."
        },
        "CurrencyDetails2": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AlphaCode": {
                    "type": "string",
                    "description": "Alpha currency code (ISO 4217, 3 alphanumeric characters)."
                },
                "NumericCode": {
                    "type": "string",
                    "description": "Numeric currency code (ISO 4217, 3 numeric characters)."
                },
                "Decimal": {
                    "type": "number",
                    "description": "Maximal number of digits after the decimal separator for the currency."
                },
                "Name": {
                    "type": "string",
                    "description": "Full name of the currency."
                }
            },
            "description": "Details of a currency."
        },
        "BinRange1": {
            "type": "object",
            "required": [
                "LowerBin",
                "HigherBin"
            ],
            "additionalProperties": false,
            "properties": {
                "LowerBin": {
                    "type": "string",
                    "description": "Lower value of BIN in the range."
                },
                "HigherBin": {
                    "type": "string",
                    "description": "Higher value of BIN in the range."
                }
            },
            "description": "Specifies a set of cards which shares the same functionalities."
        },
        "OriginalAmountDetails1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "ActualAmount": {
                    "type": "number",
                    "description": "Actual amount to be converted."
                },
                "MinimumAmount": {
                    "type": "number",
                    "description": "Minimum amount for conversion (in case of range of amounts)."
                },
                "MaximumAmount": {
                    "type": "number",
                    "description": "Maximum amount for conversion (in case of range of amounts)."
                }
            },
            "description": "The OriginalAmountDetails contains all amount information in the acceptor currency code necessary to manage currency conversion in the cardholder currency code."
        },
        "Commission19": {
            "type": "object",
            "required": [
                "Amount"
            ],
            "additionalProperties": false,
            "properties": {
                "Amount": {
                    "type": "number",
                    "description": "Commission expressed as an amount of money."
                },
                "AdditionalInformation": {
                    "type": "string",
                    "description": "Additional information about the type of commission."
                }
            },
            "description": "Amount of money due to a party as compensation for a service."
        },
        "Commission18": {
            "type": "object",
            "required": [
                "Rate"
            ],
            "additionalProperties": false,
            "properties": {
                "Rate": {
                    "type": "number",
                    "description": "Commission expressed as a percentage."
                },
                "AdditionalInformation": {
                    "type": "string",
                    "description": "Additional information about the type of markup."
                }
            },
            "description": "Amount of money due to a party as compensation for a service."
        },
        "ContentInformationType38": {
            "type": "object",
            "required": [
                "ContentType"
            ],
            "additionalProperties": false,
            "properties": {
                "ContentType": {
                    "$ref": "#/$defs/ContentType2Code",
                    "description": "Type of data protection."
                },
                "AuthenticatedData": {
                    "$ref": "#/$defs/AuthenticatedData10",
                    "description": "Data protection by a message authentication code (MAC)."
                },
                "SignedData": {
                    "$ref": "#/$defs/SignedData9",
                    "description": "Data protected by a digital signatures."
                }
            },
            "description": "General cryptographic message syntax (CMS) containing data. protected by a MAC or a digital signature."
        },
        "OutputBarcode2": {
            "type": "object",
            "required": [
                "BarcodeType"
            ],
            "additionalProperties": false,
            "properties": {
                "BarcodeType": {
                    "$ref": "#/$defs/BarcodeType1Code",
                    "description": "Type of Barcode coding."
                },
                "BarcodeValue": {
                    "type": "string",
                    "description": "Value with a Barcode coding."
                },
                "QRCodeBinaryValue": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Use for binary and Kanji Quick Respone Code."
                },
                "QRCodeVersion": {
                    "type": "string",
                    "description": "Version of the Quick Response Code."
                },
                "QRCodeEncodingMode": {
                    "$ref": "#/$defs/QRCodeEncodingMode1Code",
                    "description": "Encoding Mode of Quick Response Code."
                },
                "QRCodeErrorCorrection": {
                    "$ref": "#/$defs/QRCodeErrorCorrection1Code",
                    "description": "Error Correction mode of Quick Response Code."
                }
            },
            "description": "Barcode content to display or print."
        },
        "ActionMessage11": {
            "type": "object",
            "required": [
                "MessageDestination"
            ],
            "additionalProperties": false,
            "properties": {
                "MessageDestination": {
                    "$ref": "#/$defs/UserInterface4Code",
                    "description": "Destination of the message."
                },
                "InformationQualifier": {
                    "$ref": "#/$defs/InformationQualify1Code",
                    "description": "Qualification of the information to sent to an output logical device."
                },
                "Format": {
                    "$ref": "#/$defs/OutputFormat3Code",
                    "description": "Message format."
                },
                "MessageContent": {
                    "type": "string",
                    "description": "Content or reference of the message."
                },
                "MessageContentSignature": {
                    "$ref": "#/$defs/ContentInformationType38",
                    "description": "Digital signature of the message."
                },
                "OutputBarcode": {
                    "$ref": "#/$defs/OutputBarcode2",
                    "description": "Content of message displayed or printed as Barcode."
                },
                "ResponseRequiredFlag": {
                    "type": "boolean",
                    "description": "Flag to request a message response."
                },
                "MinimumDisplayTime": {
                    "type": "number",
                    "description": "Number of seconds the message has to be displayed."
                }
            },
            "description": "Information to display, print or store."
        },
        "CurrencyConversion29": {
            "type": "object",
            "required": [
                "TargetCurrency",
                "ExchangeRate",
                "SourceCurrency"
            ],
            "additionalProperties": false,
            "properties": {
                "CurrencyConversionIdentification": {
                    "type": "string",
                    "description": "Identification of the currency conversion operation for the service provider."
                },
                "TargetCurrency": {
                    "$ref": "#/$defs/CurrencyDetails3",
                    "description": "Currency into which the amount is converted (ISO 4217, 3 alphanumeric characters)."
                },
                "ResultingAmount": {
                    "type": "number",
                    "description": "Amount converted in the target currency, including additional charges."
                },
                "ExchangeRate": {
                    "type": "number",
                    "description": "Exchange rate, expressed as a percentage, applied to convert the original amount into the resulting amount."
                },
                "InvertedExchangeRate": {
                    "type": "number",
                    "description": "Exchange rate, expressed as a percentage, applied to convert the resulting amount into the original amount."
                },
                "QuotationDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time at which the exchange rate has been quoted."
                },
                "ValidFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Specifies when the currency conversion could start."
                },
                "ValidUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Validity limit of the exchange rate."
                },
                "SourceCurrency": {
                    "$ref": "#/$defs/CurrencyDetails2",
                    "description": "Currency from which the amount is converted (ISO 4217, 3 alphanumeric characters)."
                },
                "ApplicableBinRange": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/BinRange1"
                    },
                    "minItems": 0,
                    "description": "Range of Bin for which the conversion is possible."
                },
                "OriginalAmount": {
                    "$ref": "#/$defs/OriginalAmountDetails1",
                    "description": "Original amount in the source currency."
                },
                "CommissionDetails": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Commission19"
                    },
                    "minItems": 0,
                    "description": "Commission or additional charges made as part of a currency conversion."
                },
                "MarkUpDetails": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Commission18"
                    },
                    "minItems": 0,
                    "description": "Markup made as part of a currency conversion."
                },
                "DeclarationDetails": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "description": "Card scheme declaration (disclaimer) to present to the cardholder."
                }
            },
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider. The currency conversion has to be accepted by the cardholder."
        },
        "CurrencyConversion31": {
            "type": "object",
            "required": [
                "Result"
            ],
            "additionalProperties": false,
            "properties": {
                "Result": {
                    "$ref": "#/$defs/CurrencyConversionResponse3Code",
                    "description": "Result of a requested currency conversion."
                },
                "ResultReason": {
                    "type": "string",
                    "description": "Plain text explaining the result of the currency conversion request."
                },
                "ConversionDetails": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CurrencyConversion29"
                    },
                    "minItems": 0,
                    "description": "Information about the conversion of currency."
                }
            },
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider."
        },
        "CardPaymentTransaction131": {
            "type": "object",
            "required": [
                "TransactionIdentification",
                "POIIdentification"
            ],
            "additionalProperties": false,
            "properties": {
                "SaleReferenceIdentification": {
                    "type": "string",
                    "description": "Global reference of the sale transaction for the sale system."
                },
                "TransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Unique identification of the transaction assigned by the POI (Point Of Interaction)."
                },
                "POIIdentification": {
                    "$ref": "#/$defs/GenericIdentification32",
                    "description": "Identification of the POI (Point Of Interaction) performing the transaction."
                },
                "CurrencyConversion": {
                    "$ref": "#/$defs/CurrencyConversion31",
                    "description": "Link to a previous currency conversion."
                }
            },
            "description": "Identification of the original transaction."
        },
        "DetailedAmount4": {
            "type": "object",
            "required": [
                "Amount"
            ],
            "additionalProperties": false,
            "properties": {
                "Amount": {
                    "type": "number",
                    "description": "Amount value."
                },
                "Label": {
                    "type": "string",
                    "description": "Short description of the amount to display or print."
                }
            },
            "description": "Detailed amounts associated with the total amount of transaction."
        },
        "DetailedAmount15": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AmountGoodsAndServices": {
                    "type": "number",
                    "description": "Amount of purchase goods and services without tax."
                },
                "CashBack": {
                    "type": "number",
                    "description": "Cash-back amount."
                },
                "Gratuity": {
                    "type": "number",
                    "description": "Gratuity amount."
                },
                "Fees": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "description": "Fees amount."
                },
                "Rebate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "description": "Global rebate of the transaction. This amount is counted as a negative amount."
                },
                "ValueAddedTax": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "description": "Value added tax amount."
                },
                "Surcharge": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DetailedAmount4"
                    },
                    "minItems": 0,
                    "description": "Additional charge paid by the cardholder. For example airline credit card surcharge."
                }
            },
            "description": "Detailed amounts associated with the total amount of transaction."
        },
        "CurrencyConversion30": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AcceptedByCardholder": {
                    "type": "boolean",
                    "description": "True if the cardholder has accepted the currency conversion that the acquirer has proposed."
                },
                "Conversion": {
                    "$ref": "#/$defs/CurrencyConversion29",
                    "description": "Conversion between the currency of a card acceptor and the currency of a cardholder, provided by a dedicated service provider."
                }
            },
            "description": "Conversion between the currency of a card acceptor and the currency of a card issuer, provided by a dedicated service provider."
        },
        "ActiveCurrencyAndAmount": {
            "type": "object",
            "required": [
                "Currency"
            ],
            "additionalProperties": false,
            "properties": {
                "Value": {
                    "type": "number",
                    "description": "Posting of an item to a cash account, in the context of a cash transaction, that results in an increase or decrease to the balance of the account."
                },
                "Currency": {
                    "type": "string"
                }
            },
            "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
            "example": "6545.56"
        },
        "Amount5": {
            "type": "object",
            "required": [
                "Amount"
            ],
            "additionalProperties": false,
            "properties": {
                "Amount": {
                    "type": "number",
                    "description": "Amount value."
                },
                "Sign": {
                    "type": "boolean",
                    "description": "Sign of the amount."
                }
            },
            "description": "Signed amount in a given numeric currency"
        },
        "InstalmentAmountDetails1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InstalmentAmountDetailsType1Code",
                    "description": "Grace period unit type."
                },
                "OtherType": {
                    "type": "string",
                    "description": "Grace period other unit type."
                },
                "SubType": {
                    "type": "string",
                    "description": "Grace period sub type. "
                },
                "Amount": {
                    "$ref": "#/$defs/Amount5",
                    "description": "Detailed instalment amount."
                },
                "Percentage": {
                    "type": "number",
                    "description": "Rate expressed as a percentage, that is, in hundredths, example, 0.7 is 7/10 of a percent, and 7.0 is 7%."
                }
            },
            "description": "Instalment amount details"
        },
        "InterestRateDetails1": {
            "type": "object",
            "required": [
                "Period",
                "Rate"
            ],
            "additionalProperties": false,
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InterestRate1Code",
                    "description": "Interest rate applicable to the instalment."
                },
                "OtherType": {
                    "type": "string",
                    "description": "Other type of interest applied to the instalment, when Type is OtherNational or OtherPrivate."
                },
                "Period": {
                    "$ref": "#/$defs/InstalmentPeriod1Code",
                    "description": "Contains instalment period"
                },
                "Rate": {
                    "type": "number",
                    "description": "Rate expressed as a decimal, example, 0.7 is 7/10 and 70%."
                }
            },
            "description": "Details of the interest rate"
        },
        "GracePeriod1": {
            "type": "object",
            "required": [
                "Time",
                "UnitType"
            ],
            "additionalProperties": false,
            "properties": {
                "Time": {
                    "type": "string",
                    "description": "Grace period time relative to the grace period unit type. "
                },
                "UnitType": {
                    "$ref": "#/$defs/GracePeriodUnitType1Code",
                    "description": "Grace period unit type."
                },
                "OtherUnitType": {
                    "type": "string",
                    "description": "Grace period other unit type."
                }
            },
            "description": "Grace period applicable to an instalment plan."
        },
        "Instalment5": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "InstalmentPlan": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/InstalmentPlan1Code"
                    },
                    "minItems": 0,
                    "description": "Type of instalment plan."
                },
                "PlanIdentification": {
                    "type": "string",
                    "description": "Identification of the instalment plan."
                },
                "PlanOwner": {
                    "$ref": "#/$defs/PlanOwner1Code",
                    "description": "Type of the Plan Owner."
                },
                "SequenceNumber": {
                    "type": "number",
                    "description": "Indicates the instalment occurrence of the transaction (1 = 1st instalment, 2 = 2nd instalment, etc.)."
                },
                "PeriodUnit": {
                    "$ref": "#/$defs/Frequency3Code",
                    "description": "Period unit between consecutive payments (for example day, month, year)."
                },
                "InstalmentPeriod": {
                    "type": "number",
                    "description": "Number of period units between consecutive payments."
                },
                "TotalNumberOfPayments": {
                    "type": "number",
                    "description": "Total number of instalment payments."
                },
                "FirstPaymentDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the first payment."
                },
                "TotalAmount": {
                    "$ref": "#/$defs/ActiveCurrencyAndAmount",
                    "description": "Cumulative amount of all the instalments."
                },
                "FirstAmount": {
                    "type": "number",
                    "description": "Amount of the first payment."
                },
                "SubsequentAmount": {
                    "type": "number",
                    "description": "Amount of subsequent payments but the first one."
                },
                "LastAmount": {
                    "type": "number",
                    "description": "Amount of the last payment."
                },
                "Charges": {
                    "type": "number",
                    "description": "Charges related to the transaction."
                },
                "DetailedCharges": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/InstalmentAmountDetails1"
                    },
                    "minItems": 0,
                    "description": "Contains the charge details of an instalment plan."
                },
                "InterestRate": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/InterestRateDetails1"
                    },
                    "minItems": 0,
                    "description": "Details of the interest rate."
                },
                "GracePeriod": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GracePeriod1"
                    },
                    "minItems": 0,
                    "description": "Contains grace period details."
                },
                "PlanNotice": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "description": "Notice related to the InstalmentPlan."
                }
            },
            "description": "Data exclusively related to a card issuer financial loan of the payment transaction, or instalment."
        },
        "RecurringTransaction6": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PlanIdentification": {
                    "type": "string",
                    "description": "Identification of the recurring plan."
                },
                "SequenceNumber": {
                    "type": "number",
                    "description": "Indicates the recurring occurrence of the transaction (1 = 1st recurring, 2 = 2nd recurring, etc.)."
                },
                "PeriodUnit": {
                    "$ref": "#/$defs/Frequency3Code",
                    "description": "Period unit between consecutive payments (for example day, month, year)."
                },
                "GracePeriod": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/GracePeriod1"
                    },
                    "minItems": 0,
                    "description": "Contains grace period details."
                },
                "PlanNotice": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ActionMessage11"
                    },
                    "minItems": 0,
                    "description": "Notice related to the RecurringPlan."
                }
            },
            "description": "Element related to recurring transaction."
        },
        "DetailedAmount21": {
            "type": "object",
            "required": [
                "Amount",
                "DateTime"
            ],
            "additionalProperties": false,
            "properties": {
                "Amount": {
                    "type": "number",
                    "description": "Amount value."
                },
                "DateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the payment."
                },
                "CardDataEntryMode": {
                    "$ref": "#/$defs/CardDataReading8Code",
                    "description": "Card data entry mode for the related payment."
                },
                "ICCRelatedData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Data of an integrated circuit card application for the related payment."
                },
                "Label": {
                    "type": "string",
                    "description": "Short description of the amount to display or print."
                }
            },
            "description": "Detailed amounts associated with the total amount of transaction."
        },
        "AggregationTransaction3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "FirstPaymentDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the first payment."
                },
                "LastPaymentDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date and time of the last payment."
                },
                "NumberOfPayments": {
                    "type": "number",
                    "description": "Total number of payments that has been aggregated."
                },
                "IndividualPayment": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/DetailedAmount21"
                    },
                    "minItems": 0,
                    "description": "Individual payment that has been aggregated."
                }
            },
            "description": "Payment transaction with an aggregated amount."
        },
        "Product6": {
            "type": "object",
            "required": [
                "ProductCode",
                "ProductAmount"
            ],
            "additionalProperties": false,
            "properties": {
                "ItemIdentification": {
                    "type": "string",
                    "description": "Identification of the item inside the purchase transaction."
                },
                "ProductCode": {
                    "type": "string",
                    "description": "Product code of the item."
                },
                "AdditionalProductCode": {
                    "type": "string",
                    "description": "Additional product code related to the product."
                },
                "UnitOfMeasure": {
                    "$ref": "#/$defs/UnitOfMeasure6Code",
                    "description": "Unit of measure of the item purchased."
                },
                "ProductQuantity": {
                    "type": "number",
                    "description": "Product quantity."
                },
                "UnitPrice": {
                    "type": "number",
                    "description": "Price per unit of product."
                },
                "UnitPriceSign": {
                    "type": "boolean",
                    "description": "Sign of the unit price."
                },
                "ProductAmount": {
                    "type": "number",
                    "description": "Monetary value of purchased product."
                },
                "ProductAmountSign": {
                    "type": "boolean",
                    "description": "Sign of the product amount."
                },
                "ValueAddedTax": {
                    "type": "number",
                    "description": "Value added tax amount of the item included in the product amount."
                },
                "TaxType": {
                    "type": "string",
                    "description": "Information on tax paid on the product."
                },
                "ProductDescription": {
                    "type": "string",
                    "description": "Description of the product or item."
                },
                "DeliveryLocation": {
                    "type": "string",
                    "description": "Location of the delivery of the item, for instance pump number or parking bay."
                },
                "DeliveryService": {
                    "$ref": "#/$defs/AttendanceContext2Code",
                    "description": "Identify the method of delivery or distribution of the item."
                },
                "SaleChannel": {
                    "type": "string",
                    "description": "Commercial or distribution channel associated to the line item."
                },
                "AdditionalProductDescription": {
                    "type": "string",
                    "description": "Additional information related to the line item."
                }
            },
            "description": "Purchased item."
        },
        "CardPaymentTransactionDetails53": {
            "type": "object",
            "required": [
                "TotalAmount"
            ],
            "additionalProperties": false,
            "properties": {
                "Currency": {
                    "type": "string",
                    "description": "Currency associated with the transaction."
                },
                "TotalAmount": {
                    "type": "number",
                    "description": "Total amount of the transaction."
                },
                "CumulativeAmount": {
                    "type": "number",
                    "description": "Contains the updated amount of all authorisations related to the same business transaction."
                },
                "AmountQualifier": {
                    "$ref": "#/$defs/TypeOfAmount8Code",
                    "description": "Qualifies the amount associated with the transaction."
                },
                "DetailedAmount": {
                    "$ref": "#/$defs/DetailedAmount15",
                    "description": "Detailed amounts associated with the total amount of transaction."
                },
                "RequestedAmount": {
                    "type": "number",
                    "description": "Amount requested to be authorised."
                },
                "AuthorisedAmount": {
                    "type": "number",
                    "description": "Amount authorised for the payment transaction."
                },
                "InvoiceAmount": {
                    "type": "number",
                    "description": "Amount of the transaction that will be invoiced to the cardholder."
                },
                "ValidityDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Transaction authorisation deadline to complete the related payment."
                },
                "OnLineReason": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/OnLineReason2Code"
                    },
                    "minItems": 0,
                    "description": "Reason to process an online authorisation."
                },
                "UnattendedLevelCategory": {
                    "type": "string",
                    "description": "Transaction category level on an unattended POI (Point Of Interaction)."
                },
                "AccountType": {
                    "$ref": "#/$defs/CardAccountType3Code",
                    "description": "Type of cardholder account used for the transaction."
                },
                "CurrencyConversionResult": {
                    "$ref": "#/$defs/CurrencyConversion30",
                    "description": "Result of the currency conversion proposed to the cardholder."
                },
                "Instalment": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Instalment5"
                    },
                    "minItems": 0,
                    "description": "Data related to a financial loan (instalment)."
                },
                "Recurring": {
                    "$ref": "#/$defs/RecurringTransaction6",
                    "description": "Data related to a recurring transaction."
                },
                "AggregationTransaction": {
                    "$ref": "#/$defs/AggregationTransaction3",
                    "description": "Payment transaction with an aggregated amount."
                },
                "ProductCodeSetIdentification": {
                    "type": "string",
                    "description": "Codification used to identify the products."
                },
                "SaleItem": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Product6"
                    },
                    "minItems": 0,
                    "description": "Item purchased with the transaction."
                },
                "DeliveryLocation": {
                    "type": "string",
                    "description": "Location of the delivery, for instance pump number or parking bay."
                },
                "ReSubmissionCounter": {
                    "type": "number",
                    "description": "In case a message is sent after the consumption of goods or service, it indicates the number of times the authorisation has been sent to the Acquirer in order to get an approval."
                },
                "CompletionSequenceNumber": {
                    "type": "number",
                    "description": "Total Number of Completion related to the authorisation of this transaction."
                },
                "CompletionSequenceCounter": {
                    "type": "number",
                    "description": "Identification in the Sequence of the Completion related to the authorisation of this transaction."
                },
                "TotalAuthorisedAmount": {
                    "type": "number",
                    "description": "Total Amount authorised for the payment transaction when a sequence of completion is used."
                },
                "AdditionalInformation": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/ExternallyDefinedData5"
                    },
                    "minItems": 0,
                    "description": "Additional information related to the transaction like an Invoice or IndustryData (for example  hospitality, lodging, transportation)."
                },
                "ICCRelatedData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Data related to an integrated circuit card application."
                }
            },
            "description": "Details of the transaction in the authorisation request in a batch."
        },
        "GenericIdentification90": {
            "type": "object",
            "required": [
                "Type"
            ],
            "additionalProperties": false,
            "properties": {
                "Identification": {
                    "type": "string",
                    "description": "Identification of the entity."
                },
                "Type": {
                    "$ref": "#/$defs/PartyType14Code",
                    "description": "Type of identified entity."
                },
                "Issuer": {
                    "$ref": "#/$defs/PartyType4Code",
                    "description": "Entity assigning the identification (for example merchant, acceptor, acquirer, or tax authority)."
                },
                "Country": {
                    "type": "string",
                    "description": "Country of the entity (ISO 3166-1 alpha-2 or alpha-3)."
                },
                "ShortName": {
                    "type": "string",
                    "description": "Name of the entity."
                }
            },
            "description": "Identification of an entity."
        },
        "ResponseType10": {
            "type": "object",
            "required": [
                "Response"
            ],
            "additionalProperties": false,
            "properties": {
                "Response": {
                    "$ref": "#/$defs/Response9Code",
                    "description": "Result of the transaction."
                },
                "ResponseReason": {
                    "type": "string",
                    "description": "Detailed result of the transaction."
                },
                "AdditionalResponseInformation": {
                    "type": "string",
                    "description": "Additional information on the response for further examination."
                }
            },
            "description": "Response of a requested service."
        },
        "AuthorisationResult18": {
            "type": "object",
            "required": [
                "ResponseToAuthorisation"
            ],
            "additionalProperties": false,
            "properties": {
                "AuthorisationEntity": {
                    "$ref": "#/$defs/GenericIdentification90",
                    "description": "Type of party that has delivered or declined the card payment authorisation (the party is not identified)."
                },
                "ResponseToAuthorisation": {
                    "$ref": "#/$defs/ResponseType10",
                    "description": "Response to an authorisation request."
                },
                "AuthorisationCode": {
                    "type": "string",
                    "description": "Value assigned by the authorising party."
                }
            },
            "description": "Outcome of the authorisation."
        },
        "CustomerOrder1": {
            "type": "object",
            "required": [
                "CustomerOrderIdentification",
                "SaleReferenceIdentification",
                "StartDate",
                "ForecastedAmount"
            ],
            "additionalProperties": false,
            "properties": {
                "CustomerOrderIdentification": {
                    "type": "string",
                    "description": "Identification of a customer order."
                },
                "SaleReferenceIdentification": {
                    "type": "string",
                    "description": "Identification of a Sale transaction for a sequence of related POI transactions."
                },
                "OpenOrderState": {
                    "type": "boolean",
                    "description": "Specifies if a customer order is currently open."
                },
                "StartDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time of the beginning of an operation."
                },
                "EndDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date time of the end of an operation."
                },
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code",
                    "description": "Unit of amount."
                },
                "ForecastedAmount": {
                    "type": "number",
                    "description": "Initial or global amount of the order."
                },
                "CurrentAmount": {
                    "type": "number",
                    "description": "Total amount of all completed transactions of a customer order."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of monetary amount."
                },
                "AccessedBy": {
                    "type": "string",
                    "description": "Identification of an entity accessing data to perform an operation."
                },
                "AdditionalInformation": {
                    "type": "string",
                    "description": "Unqualified information related to customer order."
                }
            },
            "description": "Customer order attached to a customer, recorded in the POI system."
        },
        "CardPaymentToken5": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Token": {
                    "type": "string",
                    "description": "Surrogate value of the PAN."
                },
                "CardSequenceNumber": {
                    "type": "string",
                    "description": "Identify a payment token inside a set of cards with the same PAN."
                },
                "TokenExpiryDate": {
                    "type": "string",
                    "description": "Expiration date of the payment token that is generated by and maintained in the token vault."
                },
                "TokenCharacteristic": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Additional payment token information."
                },
                "TokenRequestor": {
                    "$ref": "#/$defs/PaymentTokenIdentifiers1",
                    "description": "Identifier of a token provider requestor."
                },
                "TokenAssuranceLevel": {
                    "type": "number",
                    "description": "Level of confidence resulting of the identification and authentication of the cardholder performed and the entity that performed it."
                },
                "TokenAssuranceData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "integer"
                    },
                    "description": "Information about the identification and verification of the cardholder."
                },
                "TokenAssuranceMethod": {
                    "type": "string",
                    "description": "Value that allows a Token Service Provider to indicate the identification and verification performed representing the binding of the payment token to the underlying PAN and cardholder."
                },
                "TokenInitiatedIndicator": {
                    "type": "boolean",
                    "description": "Original transaction was initiated by Token."
                }
            },
            "description": "Payment token information."
        },
        "CardPaymentTransaction136": {
            "type": "object",
            "required": [
                "TransactionType",
                "TransactionIdentification",
                "TransactionDetails"
            ],
            "additionalProperties": false,
            "properties": {
                "TransactionCapture": {
                    "type": "boolean",
                    "description": "Flag indicating whether the transaction data must be captured or not in addition to the message process."
                },
                "TransactionType": {
                    "$ref": "#/$defs/CardPaymentServiceType5Code",
                    "description": "Type of transaction being undertaken for the main service."
                },
                "AdditionalService": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/CardPaymentServiceType9Code"
                    },
                    "minItems": 0,
                    "description": "Service in addition to the main service."
                },
                "ServiceAttribute": {
                    "$ref": "#/$defs/CardPaymentServiceType14Code",
                    "description": "Additional attribute of the service type."
                },
                "LastTransactionFlag": {
                    "type": "boolean",
                    "description": "Flag indicating processing of the last transaction."
                },
                "MerchantCategoryCode": {
                    "type": "string",
                    "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction."
                },
                "SaleReferenceIdentification": {
                    "type": "string",
                    "description": "Global reference of the sale transaction for the sale system."
                },
                "TransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Identification of the transaction assigned by the initiator of the request. For instance refers to POITransactionIdentification if used inside an authorisation request or to SaleTransactionIdentification if the message is a payment request initiated by a sale system."
                },
                "OriginalTransaction": {
                    "$ref": "#/$defs/CardPaymentTransaction131",
                    "description": "Identification of the original transaction."
                },
                "ReconciliationIdentification": {
                    "type": "string",
                    "description": "Unique identification of the Acquirer/Acceptor reconciliation period."
                },
                "IssuerReferenceData": {
                    "type": "string",
                    "description": "Identification of the transaction given by the Issuer."
                },
                "IssuerCITIdentification": {
                    "type": "string",
                    "description": "Identification, given by the Issuer, of the transaction processed with the cardholder that legitimates this merchant initiated transaction."
                },
                "MerchantCITIdentification": {
                    "type": "string",
                    "description": "Identification, given by the merchant, of the transaction processed with the cardholder that legitimates this merchant initiated transaction."
                },
                "TransactionDetails": {
                    "$ref": "#/$defs/CardPaymentTransactionDetails53",
                    "description": "Details of the transaction."
                },
                "AuthorisationResult": {
                    "$ref": "#/$defs/AuthorisationResult18",
                    "description": "Outcome of the authorisation request."
                },
                "MerchantReferenceData": {
                    "type": "string",
                    "description": "Merchant information that must be returned unchanged in the response."
                },
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "Customer Order processing data."
                },
                "CustomerToken": {
                    "$ref": "#/$defs/CardPaymentToken5",
                    "description": "Customer payment token information."
                },
                "CustomerConsent": {
                    "type": "boolean",
                    "description": "Indicates if the customer has explicitly validated a choice."
                },
                "CardProgrammeProposed": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Specifies the card program proposed by a retailer to a cardholder among a series of payment programmes offered by the retailer."
                },
                "CardProgrammeApplied": {
                    "type": "string",
                    "description": "Specifies the card program actually selected by the cardholder among the ones supported by the retailer and/or the one actually proposed to him."
                },
                "SaleToPOIData": {
                    "type": "string",
                    "description": "Specifies element that the sale system wants to store in the POI system."
                },
                "SaleToAcquirerData": {
                    "type": "string",
                    "description": "Sale information intended for the Acquirer."
                },
                "SaleToIssuerData": {
                    "type": "string",
                    "description": "Sale information intended for the Issuer."
                },
                "AdditionalTransactionData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Additional information related to the transaction."
                }
            },
            "description": "Data associated with the transaction for a potential currency conversion."
        },
        "LoyaltyAmount1": {
            "type": "object",
            "required": [
                "Amount"
            ],
            "additionalProperties": false,
            "properties": {
                "Unit": {
                    "$ref": "#/$defs/AmountUnit1Code",
                    "description": "Unit type for the amount."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of the amount is Unit is Monetary."
                },
                "Amount": {
                    "type": "number",
                    "description": "Amount value."
                }
            },
            "description": "Loyalty amount to apply to an Loyalty account."
        },
        "LoyaltyRequestData3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "To retrieve Card Acquisition Data."
                },
                "Account": {
                    "$ref": "#/$defs/LoyaltyAccount3",
                    "description": "Identification of a Loyalty account."
                },
                "Amount": {
                    "$ref": "#/$defs/LoyaltyAmount1",
                    "description": "Amount of a loyalty account."
                }
            },
            "description": "Data linked to card loyalty during payment."
        },
        "PaymentRequest6": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PaymentTransaction": {
                    "$ref": "#/$defs/CardPaymentTransaction136",
                    "description": "Data associated with the Transaction."
                },
                "LoyaltyData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "description": "Data linked to card loyalty during payment."
                }
            },
            "description": "Data required to request a Payment."
        },
        "ReversalRequest6": {
            "type": "object",
            "required": [
                "ReversalReason"
            ],
            "additionalProperties": false,
            "properties": {
                "ReversalTransaction": {
                    "$ref": "#/$defs/CardPaymentTransaction136",
                    "description": "Transaction to reverse."
                },
                "LoyaltyData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "description": "Data linked to card loyalty during payment."
                },
                "ReversalReason": {
                    "$ref": "#/$defs/ReversalReason1Code",
                    "description": "Reason for this reversal."
                },
                "ReversedAmount": {
                    "type": "number",
                    "description": "Amount to reverse (total or partial)."
                },
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "Specific Customer Order linked with the reversal."
                }
            },
            "description": "Data to request a reversal."
        },
        "PaymentAccountRequest1": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "AccountType": {
                    "$ref": "#/$defs/CardAccountType3Code",
                    "description": "Type of cardholder account used for the transaction. By Default the code Default is taken into account."
                },
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "To retrieve Card Acquisition Data."
                },
                "AccountReference": {
                    "type": "string",
                    "description": "Reference of an account (all types)."
                }
            },
            "description": "Data related to the account pointed by the payment card."
        },
        "LoyaltyAccountRequest3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "To retrieve Card Acquisition Data."
                },
                "Account": {
                    "$ref": "#/$defs/LoyaltyAccount3",
                    "description": "Loyalty account information."
                }
            },
            "description": "Data related to a requested Loyalty program or account."
        },
        "StoredValueData7": {
            "type": "object",
            "required": [
                "TransactionType"
            ],
            "additionalProperties": false,
            "properties": {
                "Provider": {
                    "type": "string",
                    "description": "Identification of the provider of the stored value account load/reload."
                },
                "TransactionType": {
                    "$ref": "#/$defs/StoredValueTransactionType3Code",
                    "description": "Identification of operation to proceed on the stored value account or the stored value card."
                },
                "AccountIdentification": {
                    "$ref": "#/$defs/StoredValueAccount2",
                    "description": "Identification of the stored value account or the stored value card."
                },
                "OriginalPOITransaction": {
                    "$ref": "#/$defs/CardPaymentTransaction136",
                    "description": "Identification of a previous POI transaction."
                },
                "ProductCode": {
                    "type": "string",
                    "description": "Product code of item purchased with the transaction."
                },
                "EANUPC": {
                    "type": "string",
                    "description": "Standard European Article Number Universal Product Code of item purchased with the transaction."
                },
                "ItemAmount": {
                    "type": "number",
                    "description": "Total amount of the item line."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of the monetary amount."
                },
                "HostTransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Identification of the transaction by the host in charge of the stored value transaction."
                }
            },
            "description": "Data related to the stored value card."
        },
        "StoredValueRequest7": {
            "type": "object",
            "required": [
                "Data"
            ],
            "additionalProperties": false,
            "properties": {
                "SaleTransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Sale System identification of the transaction in an unambiguous way."
                },
                "Data": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/StoredValueData7"
                    },
                    "minItems": 1,
                    "description": "Data related to the stored value card."
                }
            },
            "description": "Data to request a stored value service (prepaid card or account)."
        },
        "BalanceInquiryRequest7": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SaleTransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Sale System identification of the transaction in an unambiguous way."
                },
                "PaymentAccountRequest": {
                    "$ref": "#/$defs/PaymentAccountRequest1",
                    "description": "Data related to the account pointed by the payment card."
                },
                "LoyaltyAccountRequest": {
                    "$ref": "#/$defs/LoyaltyAccountRequest3",
                    "description": "Data related to a requested Loyalty program or account."
                },
                "StoredValueAccountRequest": {
                    "$ref": "#/$defs/StoredValueRequest7",
                    "description": "Data related to a requested Stored value account."
                }
            },
            "description": "Specifies data element nexessary to request balance information."
        },
        "LoyaltyTransaction6": {
            "type": "object",
            "required": [
                "LoyaltyTransactionType"
            ],
            "additionalProperties": false,
            "properties": {
                "SaleTransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Sale System identification of the transaction in an unambiguous way."
                },
                "LoyaltyTransactionType": {
                    "$ref": "#/$defs/LoyaltyTransactionType1Code",
                    "description": "Data related to the loyalty transaction."
                },
                "Currency": {
                    "type": "string",
                    "description": "Currency of the loyalty transaction."
                },
                "TotalAmount": {
                    "type": "number",
                    "description": "Amount of the payment transaction related to the Loyalty."
                },
                "OriginalPOITransaction": {
                    "$ref": "#/$defs/CardPaymentTransaction136",
                    "description": "Data of a previous POI payment transaction."
                },
                "SaleItem": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/Product6"
                    },
                    "minItems": 0,
                    "description": "Item purchased with the transaction."
                }
            },
            "description": "Data related to the loyalty transaction."
        },
        "LoyaltyRequest6": {
            "type": "object",
            "required": [
                "Transaction"
            ],
            "additionalProperties": false,
            "properties": {
                "CustomerOrder": {
                    "$ref": "#/$defs/CustomerOrder1",
                    "description": "To retrieve Card Acquisition Data."
                },
                "Transaction": {
                    "$ref": "#/$defs/LoyaltyTransaction6",
                    "description": "Data related to the loyalty transaction."
                },
                "Data": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/LoyaltyRequestData3"
                    },
                    "minItems": 0,
                    "description": "Data related to a Loyalty program or account."
                }
            },
            "description": "Data to request a loyalty service. A loyalty request contents : the loyalty transaction request and the loyalty data if any."
        },
        "TransactionToPerform6Choice": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "PaymentRequest": {
                    "$ref": "#/$defs/PaymentRequest6",
                    "description": "Content of the Payment Request message."
                },
                "LoyaltyRequest": {
                    "$ref": "#/$defs/LoyaltyRequest6",
                    "description": "Content of the Loyalty Request message."
                },
                "ReversalRequest": {
                    "$ref": "#/$defs/ReversalRequest6",
                    "description": "Content of the Reversal Request message."
                }
            },
            "description": "Content of the batch request message."
        },
        "BatchRequest6": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SaleBatchIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Sale System identification of the batch in an unambiguous way."
                },
                "RemoveAllFlag": {
                    "type": "boolean",
                    "description": "Flag to remove all the transactions."
                },
                "TransactionToPerform": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/TransactionToPerform6Choice"
                    },
                    "minItems": 0,
                    "description": "Content of the Batch Request message."
                }
            },
            "description": "Data to request a batch service."
        },
        "EnableServiceRequest6": {
            "type": "object",
            "required": [
                "TransactionAction"
            ],
            "additionalProperties": false,
            "properties": {
                "TransactionAction": {
                    "$ref": "#/$defs/TransactionAction1Code",
                    "description": "Action to realise on a transaction."
                },
                "ServicesEnabled": {
                    "$ref": "#/$defs/RetailerService2Code",
                    "description": "Services enabled before the start-up of a transaction."
                },
                "DisplayOutput": {
                    "$ref": "#/$defs/ActionMessage11",
                    "description": "Prompt or welcome message."
                }
            },
            "description": "Data to request to enable a service."
        },
        "CardAcquisitionRequest3": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "SaleTransactionIdentification": {
                    "$ref": "#/$defs/TransactionIdentifier1",
                    "description": "Sale System identification of the transaction in an unambiguous way."
                },
                "AllowedPaymentBrand": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Card payment brands allowed by the Sale System for the payment transaction."
                },
                "AllowedLoyaltyBrand": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "type": "string"
                    },
                    "minItems": 0,
                    "description": "Loyalty brands or programs allowed by the Sale System for the loyalty transaction."
                },
                "ForceCustomerSelectionFlag": {
                    "type": "boolean",
                    "description": "Indicates if the Customer realises the selection of the card application."
                },
                "TotalAmount": {
                    "type": "number",
                    "description": "Amount of the transaction. It allows the processing of a contactless card."
                },
                "PaymentType": {
                    "$ref": "#/$defs/CardPaymentServiceType13Code",
                    "description": "Type of payment transaction."
                },
                "CashBackFlag": {
                    "type": "boolean",
                    "description": "Indicates if Cashback is allowed"
                },
                "SaleToPOIData": {
                    "type": "string",
                    "description": "The POI System receives this information."
                },
                "SaleToAcquirerData": {
                    "type": "string",
                    "description": "Sale information intended for the Acquirer."
                },
                "SaleToIssuerData": {
                    "type": "string",
                    "description": "Sale information intended for the Issuer."
                }
            },
            "description": "Data to request to card data acquisition."
        },
        "SupplementaryDataEnvelope1": {
            "type": "object",
            "required": [
                "Any"
            ],
            "additionalProperties": false,
            "properties": {
                "Any": {
                    "type": "object",
                    "additionalProperties": false
                }
            },
            "description": "Technical component that contains the validated supplementary data information. This technical envelope allows to segregate the supplementary data information from any other information."
        },
        "SupplementaryData1": {
            "type": "object",
            "required": [
                "Envelope"
            ],
            "additionalProperties": false,
            "properties": {
                "PlaceAndName": {
                    "type": "string",
                    "description": "Unambiguous reference to the location where the supplementary data must be inserted in the message instance.\r\nIn the case of XML, this is expressed by a valid XPath."
                },
                "Envelope": {
                    "$ref": "#/$defs/SupplementaryDataEnvelope1",
                    "description": "Technical element wrapping the supplementary data."
                }
            },
            "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
        },
        "ServiceRequest7": {
            "type": "object",
            "required": [
                "Environment",
                "Context",
                "ServiceContent"
            ],
            "additionalProperties": false,
            "properties": {
                "Environment": {
                    "$ref": "#/$defs/CardPaymentEnvironment80",
                    "description": "Environment of the transaction."
                },
                "Context": {
                    "$ref": "#/$defs/CardPaymentContext30",
                    "description": "Context in which the transaction is performed (payment and sale)."
                },
                "ServiceContent": {
                    "$ref": "#/$defs/RetailerService2Code",
                    "description": "Define the type of service requested."
                },
                "PaymentRequest": {
                    "$ref": "#/$defs/PaymentRequest6",
                    "description": "Content of the payment request."
                },
                "ReversalRequest": {
                    "$ref": "#/$defs/ReversalRequest6",
                    "description": "Content of the reversal request."
                },
                "BalanceInquiryRequest": {
                    "$ref": "#/$defs/BalanceInquiryRequest7",
                    "description": "Content of a Balance Inquiry Request."
                },
                "LoyaltyRequest": {
                    "$ref": "#/$defs/LoyaltyRequest6",
                    "description": "Content of the Loyalty Request."
                },
                "StoredValueRequest": {
                    "$ref": "#/$defs/StoredValueRequest7",
                    "description": "Content of a Stored Value Request."
                },
                "BatchRequest": {
                    "$ref": "#/$defs/BatchRequest6",
                    "description": "Content of the Batch Request."
                },
                "EnableServiceRequest": {
                    "$ref": "#/$defs/EnableServiceRequest6",
                    "description": "Content of the Enable Service Request."
                },
                "CardAcquisitionRequest": {
                    "$ref": "#/$defs/CardAcquisitionRequest3",
                    "description": "Content of the Card Acquisition Request."
                },
                "SupplementaryData": {
                    "type": "array",
                    "additionalItems": false,
                    "items": {
                        "$ref": "#/$defs/SupplementaryData1"
                    },
                    "minItems": 0,
                    "description": "Additional information incorporated as an extension to the message."
                }
            },
            "description": "Defines the service to be called."
        },
        "SaleToPOIServiceRequestV06": {
            "type": "object",
            "required": [
                "Header",
                "ServiceRequest"
            ],
            "additionalProperties": false,
            "properties": {
                "Header": {
                    "$ref": "#/$defs/Header41"
                },
                "ServiceRequest": {
                    "$ref": "#/$defs/ServiceRequest7"
                },
                "SecurityTrailer": {
                    "$ref": "#/$defs/ContentInformationType38"
                }
            },
            "description": "This SaleToPOIServiceRequest message is sent by a sale system to trig a financial service on POI system."
        },
        "Document": {
            "type": "object",
            "required": [
                "SaleToPOIServiceRequestV06"
            ],
            "additionalProperties": false,
            "properties": {
                "SaleToPOIServiceRequestV06": {
                    "$ref": "#/$defs/SaleToPOIServiceRequestV06",
                    "description": "This SaleToPOIServiceRequest message is sent by a sale system to trig a financial service on POI system."
                }
            },
            "description": "General information that unambiguously identifies a document, such as identification number and issue date time."
        },
        "RetailerMessage1Code": {
            "type": "string",
            "enum": [
                "SSAB",
                "SAAQ",
                "SAAP",
                "SDDR",
                "SDDP",
                "SSEN",
                "SSMQ",
                "SSMR",
                "SSRJ",
                "SARQ",
                "SARP",
                "SFRP",
                "SFRQ",
                "SFSQ",
                "SFSP",
                "SASQ",
                "SASP"
            ],
            "description": "Identifies the type of process related to the message. \nCode: SSAB: \t Abort: \tDefinition: Abort the current process or the last request."
        },
        "PartyType33Code": {
            "type": "string",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS",
                "MTMG",
                "TAXH",
                "TMGT"
            ],
            "description": "Identification of the type of entity involved in a transaction. \nCode: OPOI: \t OriginatingPOI: \tDefinition: Point Of Interaction initiating the card payment transaction.",
            "example": "OPOI"
        },
        "NetworkType1Code": {
            "type": "string",
            "enum": [
                "IPNW",
                "PSTN"
            ],
            "description": "Type of communication network. \nCode: IPNW: \t InternetProtocol: \tDefinition: Protocol of an IP network."
        },
        "PartyType3Code": {
            "type": "string",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS"
            ],
            "description": "Identification of the type of entity involved in a transaction. \nCode: OPOI: \t OriginatingPOI: \tDefinition: Point Of Interaction initiating the card payment transaction.",
            "example": "OPOI"
        },
        "PartyType4Code": {
            "type": "string",
            "enum": [
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "TAXH"
            ],
            "description": "Entity assigning an identification (for example merchant, acceptor, acquirer, tax authority, etc.). \nCode: MERC: \t Merchant: \tDefinition: Merchant providing goods and service in the card payment transaction.",
            "example": "MERC"
        },
        "LocationCategory4Code": {
            "type": "string",
            "enum": [
                "ABRD",
                "NMDC",
                "FIXD",
                "VIRT"
            ],
            "description": "Indicates the type of integration of the POI terminal in the sale environment. \nCode: ABRD: \t Aboard: \tDefinition: Aboard is used when the sale is done in a vehicle (e.g a bus, train, ship, airplane,\r\ntaxi, etc)."
        },
        "AddressType2Code": {
            "type": "string",
            "enum": [
                "ADDR",
                "PBOX",
                "HOME",
                "BIZZ",
                "MLTO",
                "DLVY"
            ],
            "description": "Specifies the type of address. \nCode: ADDR: \t Postal: \tDefinition: Address is the complete postal address.",
            "example": "ADDR"
        },
        "CardDataReading8Code": {
            "type": "string",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL",
                "SICC",
                "UNKW",
                "QRCD",
                "OPTC"
            ],
            "description": "Type of reading of the card data. \nCode: TAGC: \t Tag: \tDefinition: Tag reading capabilities (RFID, etc.).",
            "example": "TAGC"
        },
        "CardholderVerificationCapability4Code": {
            "type": "string",
            "enum": [
                "APKI",
                "CHDT",
                "MNSG",
                "MNVR",
                "FBIG",
                "FBIO",
                "FDSG",
                "FCPN",
                "FEPN",
                "NPIN",
                "PKIS",
                "SCEC",
                "NBIO",
                "NOVF",
                "OTHR"
            ],
            "description": "Cardholder verification capabilities by the terminal. \nCode: APKI: \t AccountDigitalSignature: \tDefinition: Account based digital signature."
        },
        "OnLineCapability1Code": {
            "type": "string",
            "enum": [
                "OFLN",
                "ONLN",
                "SMON"
            ],
            "description": "On-line and off-line capabilities of the POI (Point Of Interaction). \nCode: OFLN: \t OffLine: \tDefinition: Off-line only capable.",
            "example": "OFLN"
        },
        "UserInterface4Code": {
            "type": "string",
            "enum": [
                "CDSP",
                "CRCP",
                "MDSP",
                "MRCP",
                "CRDO"
            ],
            "description": "Destination of the message. \nCode: CDSP: \t CardholderDisplay: \tDefinition: Cardholder display or interface."
        },
        "OutputFormat1Code": {
            "type": "string",
            "enum": [
                "MREF",
                "TEXT",
                "HTML"
            ],
            "description": "Message format. \nCode: MREF: \t MessageReference: \tDefinition: Predefined configured messages, identified by a reference."
        },
        "LocationCategory3Code": {
            "type": "string",
            "enum": [
                "INDR",
                "IPMP",
                "MPOI",
                "MPMP",
                "MSLE",
                "SSLE",
                "VNDG"
            ],
            "description": "Indicates the type of integration of the POI terminal in the sale environment. \nCode: INDR: \t Indoor: \tDefinition: Indoor terminal."
        },
        "POIComponentType6Code": {
            "type": "string",
            "enum": [
                "AQPP",
                "APPR",
                "TLPR",
                "SCPR",
                "SERV",
                "TERM",
                "DVCE",
                "SECM",
                "APLI",
                "EMVK",
                "EMVO",
                "MDWR",
                "DRVR",
                "OPST",
                "MRPR",
                "CRTF",
                "TMSP",
                "SACP",
                "SAPR",
                "LOGF",
                "MDFL",
                "SOFT",
                "CONF",
                "RPFL"
            ],
            "description": "Type of component belonging to a POI (Point of Interaction) Terminal. \nCode: AQPP: \t AcquirerProtocolParameters: \tDefinition: Parameters for acquirer interface of the point of interaction, including acquirer host configuration parameters.",
            "example": "AQPP"
        },
        "POIComponentStatus1Code": {
            "type": "string",
            "enum": [
                "WAIT",
                "OUTD",
                "OPER",
                "DACT"
            ],
            "description": "Status of a component belonging to a POI Terminal (Point of Interaction). \nCode: WAIT: \t WaitingActivation: \tDefinition: Component not yet activated.",
            "example": "WAIT"
        },
        "MemoryUnit1Code": {
            "type": "string",
            "enum": [
                "BYTE",
                "EXAB",
                "GIGA",
                "KILO",
                "MEGA",
                "PETA",
                "TERA"
            ],
            "description": "Unit of the memory size. \nCode: BYTE: \t Byte: \tDefinition: Byte.",
            "example": "BYTE"
        },
        "POICommunicationType2Code": {
            "type": "string",
            "enum": [
                "BLTH",
                "ETHR",
                "GPRS",
                "GSMF",
                "PSTN",
                "RS23",
                "USBD",
                "USBH",
                "WIFI",
                "WT2G",
                "WT3G",
                "WT4G",
                "WT5G"
            ],
            "description": "Low level communication of the hardware or software component toward another component or an external entity. \nCode: BLTH: \t Bluetooth: \tDefinition: Communication with a host using Bluetooth.",
            "example": "BLTH"
        },
        "PartyType7Code": {
            "type": "string",
            "enum": [
                "ACQR",
                "ITAG",
                "PCPT",
                "TMGT",
                "SALE"
            ],
            "description": "Party that communicate with a POI component (Point of Interaction), using a communication device. \nCode: ACQR: \t Acquirer: \tDefinition: Entity acquiring card transactions.",
            "example": "ACQR"
        },
        "CryptographicKeyType3Code": {
            "type": "string",
            "enum": [
                "AES2",
                "EDE3",
                "DKP9",
                "AES9",
                "AES5",
                "EDE4"
            ],
            "description": "Codes for qualifying the type of cryptographic keys. \nCode: AES2: \t AES128: \tDefinition: AES (Advanced Encryption Standard) 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).",
            "example": "AES2"
        },
        "KeyUsage1Code": {
            "type": "string",
            "enum": [
                "ENCR",
                "DCPT",
                "DENC",
                "DDEC",
                "TRNI",
                "TRNX",
                "MACG",
                "MACV",
                "SIGG",
                "SUGV",
                "PINE",
                "PIND",
                "PINV",
                "KEYG",
                "KEYI",
                "KEYX",
                "KEYD"
            ],
            "description": "Allowed usages of the key. \nCode: ENCR: \t Encryption: \tDefinition: Key may encrypt.",
            "example": "ENCR"
        },
        "ContentType2Code": {
            "type": "string",
            "enum": [
                "DATA",
                "SIGN",
                "EVLP",
                "DGST",
                "AUTH"
            ],
            "description": "Identification of the type of a Cryptographic Message Syntax (CMS) data structure. \nCode: DATA: \t PlainData: \tDefinition: Generic, non cryptographic, or unqualified data content - (ASN.1 Object Identifier: id-data).",
            "example": "DATA"
        },
        "AttributeType1Code": {
            "type": "string",
            "enum": [
                "CNAT",
                "LATT",
                "OATT",
                "OUAT",
                "CATT"
            ],
            "description": "Type of attribute of a distinguished name (DN). \nCode: CNAT: \t CommonName: \tDefinition: Common name of the attribute (ASN.1 Object Identifier: id-at-commonName).",
            "example": "CNAT"
        },
        "Algorithm7Code": {
            "type": "string",
            "enum": [
                "ERSA",
                "RSAO"
            ],
            "description": "Asymmetric encryption algorithm of a transport key. \nCode: ERSA: \t RSAEncryption: \tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).",
            "example": "ERSA"
        },
        "EncryptionFormat2Code": {
            "type": "string",
            "enum": [
                "TR31",
                "TR34",
                "I238"
            ],
            "description": "Format of data before encryption, if the format is not plaintext or implicit. \nCode: TR31: \t TR31: \tDefinition: Format of a cryptographic key specified by the ANSI X9 TR-31 standard."
        },
        "Algorithm26Code": {
            "type": "string",
            "enum": [
                "HS25",
                "HS38",
                "HS51",
                "HS01",
                "SH31",
                "SH32",
                "SH33",
                "SH35",
                "SHK1",
                "SHK2",
                "SMS3"
            ],
            "description": "Identification of a digest algorithm. \nCode: HS25: \t SHA256: \tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).",
            "example": "HS25"
        },
        "Algorithm8Code": {
            "type": "string",
            "enum": [
                "MGF1"
            ],
            "description": "Mask generator functions of the RSAES-OAEP encryption algorithm (RSA Encryption Scheme: Optimal Asymmetric Encryption Padding). \nCode: MGF1: \t MGF1: \tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).",
            "example": "MGF1"
        },
        "Algorithm28Code": {
            "type": "string",
            "enum": [
                "EA2C",
                "E3DC",
                "DKP9",
                "UKPT",
                "UKA2",
                "EA9C",
                "EA5C",
                "DA12",
                "DA19",
                "DA25",
                "N108",
                "EA5R",
                "EA9R",
                "EA2R",
                "E3DR",
                "E36C",
                "E36R",
                "SD5C",
                "UKA1",
                "UKA3",
                "SM4C",
                "SM4R"
            ],
            "description": "Cryptographic algorithms for the protection of transported keys. \nCode: EA2C: \t AES128CBC: \tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).",
            "example": "EA2C"
        },
        "BytePadding1Code": {
            "type": "string",
            "enum": [
                "LNGT",
                "NUL8",
                "NULG",
                "NULL",
                "RAND"
            ],
            "description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit. \nCode: LNGT: \t LengthPadding: \tDefinition: Message to encrypt is completed by a byte value containing the total number of added bytes."
        },
        "Algorithm27Code": {
            "type": "string",
            "enum": [
                "MACC",
                "MCCS",
                "CMA1",
                "MCC1",
                "CMA9",
                "CMA5",
                "CMA2",
                "CM31",
                "CM32",
                "CM33",
                "MCS3",
                "CCA1",
                "CCA2",
                "CCA3",
                "S34C",
                "S34R"
            ],
            "description": "Cryptographic algorithms for the MAC (Message Authentication Code). \nCode: MACC: \t RetailCBCMAC: \tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).",
            "example": "MACC"
        },
        "Algorithm29Code": {
            "type": "string",
            "enum": [
                "ERS2",
                "ERS1",
                "RPSS",
                "ERS3",
                "ED32",
                "ED33",
                "ED35",
                "ED23",
                "ED25",
                "ES22",
                "ES32",
                "ES33",
                "ES35",
                "ES23",
                "ES25",
                "ED22",
                "EF32",
                "EF22",
                "EF33",
                "EF35",
                "EF23",
                "EO33",
                "EF25",
                "EO32",
                "EO22",
                "EO35",
                "EO23",
                "EO25",
                "DD22",
                "DD32",
                "DD33",
                "DD35",
                "DD23",
                "DD25",
                "SM22",
                "SM33",
                "SM32",
                "SM35",
                "SM23",
                "SM25",
                "S2S3"
            ],
            "description": "Cryptographic algorithms for digital signatures. \nCode: ERS2: \t SHA256WithRSA: \tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).",
            "example": "ERS2"
        },
        "POIComponentAssessment1Code": {
            "type": "string",
            "enum": [
                "APPL",
                "CERT",
                "EVAL"
            ],
            "description": "Type of assessment of a POI component (Point of Interaction). \nCode: APPL: \t Approval: \tDefinition: Approval number delivered by an approval centre.",
            "example": "APPL"
        },
        "CardProductType1Code": {
            "type": "string",
            "enum": [
                "COMM",
                "CONS"
            ],
            "description": "Type of card product. \nCode: COMM: \t CommercialCard: \tDefinition: Cards issued as a means of business expenditure, for instance business card or corporate card. The user could be a company, an individual for business expenses or a self employed for business purposes."
        },
        "TrackFormat1Code": {
            "type": "string",
            "enum": [
                "AAMV",
                "CMC7",
                "E13B",
                "ISOF",
                "JIS1",
                "JIS2"
            ],
            "description": "Use to identify format of a track on a card or other documents like checks. \nCode: AAMV: \t AAMVAFormat: \tDefinition: American driver license."
        },
        "CheckType1Code": {
            "type": "string",
            "enum": [
                "BANK",
                "BUSI",
                "GOVC",
                "PAYR",
                "PERS"
            ],
            "description": "Type of bank check. \nCode: BANK: \t BankCheck: \tDefinition: The check is guaranteed by a bank."
        },
        "StoredValueAccountType1Code": {
            "type": "string",
            "enum": [
                "BNKA",
                "CWVC",
                "CPYA",
                "ELMY",
                "GIFT",
                "GCER",
                "MLVC",
                "OLVC",
                "MERC",
                "OTHR",
                "PHON",
                "CARD",
                "TRVL"
            ],
            "description": "Type of stored value account. \nCode: BNKA: \t BankPrepaidAccount: \tDefinition: Prepaid account managed by a financial institution for low income customers."
        },
        "CardIdentificationType1Code": {
            "type": "string",
            "enum": [
                "ACCT",
                "BARC",
                "ISO2",
                "PHON",
                "CPAN",
                "PRIV",
                "UUID"
            ],
            "description": "Type of account identification. \nCode: ACCT: \t AccountNumber: \tDefinition: Account identification."
        },
        "AmountUnit1Code": {
            "type": "string",
            "enum": [
                "MONE",
                "POIN"
            ],
            "description": "Unit of a amount (for loyalty or account). \nCode: MONE: \t Monetary: \tDefinition: The amount is expressed in a monetary value in a currency."
        },
        "CardDataReading5Code": {
            "type": "string",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL"
            ],
            "description": "Type of reading of the card data. \nCode: TAGC: \t Tag: \tDefinition: Tag reading capabilities (RFID, etc.).",
            "example": "TAGC"
        },
        "AuthenticationMethod8Code": {
            "type": "string",
            "enum": [
                "TOKA",
                "ADDB",
                "BYPS",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "MANU",
                "MERC",
                "MOBL",
                "FPIN",
                "NPIN",
                "OTHR",
                "PPSG",
                "PSVE",
                "PSWD",
                "TOKP",
                "SCRT",
                "SCNL",
                "CSEC",
                "SNCT",
                "ADDS",
                "CPSG",
                "TOKN",
                "UKNW"
            ],
            "description": "Method to authenticate the customer or its card. \nCode: TOKA: \t AuthenticationToken: \tDefinition: A token is used to verify an already performed authentication."
        },
        "Exemption1Code": {
            "type": "string",
            "enum": [
                "LOWA",
                "MINT",
                "RECP",
                "SCPE",
                "SCAD",
                "TRAE",
                "PKGE",
                "TMBE"
            ],
            "description": "Strong customer authentication exemption. \nCode: LOWA: \t LowAmountExemption: \tDefinition: Transaction's amount is low and could be processed without strong customer authentication."
        },
        "PINFormat3Code": {
            "type": "string",
            "enum": [
                "ISO0",
                "ISO1",
                "ISO2",
                "ISO3",
                "ISO4",
                "ISO5"
            ],
            "description": "PIN (Personal Identification Number) format used before encryption. \nCode: ISO0: \t ISO0: \tDefinition: PIN diversified with the card account number, conforming to the standard ISO 9564-2.",
            "example": "ISO0"
        },
        "AuthenticationResult1Code": {
            "type": "string",
            "enum": [
                "DENY",
                "MRCH",
                "CARD",
                "AUTH",
                "CRPT",
                "UCRP"
            ],
            "description": "Specifies the result of authentication done. \nCode: DENY: \t Denial: \tDefinition: The authentication didn’t succeed."
        },
        "AuthenticationMethod6Code": {
            "type": "string",
            "enum": [
                "NPIN",
                "PPSG",
                "PSWD",
                "SCRT",
                "SCNL",
                "SNCT",
                "CPSG",
                "ADDB",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "PSVE",
                "CSEC",
                "ADDS",
                "MANU",
                "FPIN",
                "TOKP"
            ],
            "description": "Methods used to authenticate a person or a card. \nCode: NPIN: \t OnLinePIN: \tDefinition: On-line PIN authentication (Personal Identification Number).",
            "example": "ADDB"
        },
        "AuthenticationEntity2Code": {
            "type": "string",
            "enum": [
                "ICCD",
                "AGNT",
                "MERC",
                "ACQR",
                "ISSR",
                "TRML"
            ],
            "description": "Entity or device that has performed the verification. \nCode: ICCD: \t ICC: \tDefinition: Application in the chip card (Integrated Circuit Card), for instance an offline PIN verification.",
            "example": "ICCD"
        },
        "Verification1Code": {
            "type": "string",
            "enum": [
                "FAIL",
                "MISS",
                "NOVF",
                "PART",
                "SUCC",
                "ERRR"
            ],
            "description": "Result of the verification. \nCode: FAIL: \t Failed: \tDefinition: Verification failed."
        },
        "SaleCapabilities1Code": {
            "type": "string",
            "enum": [
                "CHDI",
                "CHER",
                "CHIN",
                "CHST",
                "CUDI",
                "CUAS",
                "CUER",
                "CUIN",
                "POIR",
                "PRDC",
                "PRRP",
                "PRVC"
            ],
            "description": "Hardware capabilities of the Sale Terminal. \nCode: CHDI: \t CashierDisplay: \tDefinition: Standard Cashier display interface (to ask question, or to show information). "
        },
        "LoyaltyHandling1Code": {
            "type": "string",
            "enum": [
                "ALLO",
                "DENY",
                "PRCS",
                "PROP",
                "REQU"
            ],
            "description": "Possible types of Loyalty processing. \nCode: ALLO: \t Allowed: \tDefinition: The loyalty is accepted, but the POI has not to require or ask a loyalty card. The loyalty is involved by the payment card (e.g. an hybrid or linked card). "
        },
        "AttendanceContext1Code": {
            "type": "string",
            "enum": [
                "ATTD",
                "SATT",
                "UATT"
            ],
            "description": "Human attendance at the POI location during the transaction. \nCode: ATTD: \t Attended: \tDefinition: Attended payment, with an attendant.",
            "example": "ATTD"
        },
        "TransactionEnvironment1Code": {
            "type": "string",
            "enum": [
                "MERC",
                "PRIV",
                "PUBL"
            ],
            "description": "Indicates the environment of the transaction. \nCode: MERC: \t Merchant: \tDefinition: Merchant environment.",
            "example": "MERC"
        },
        "TransactionChannel5Code": {
            "type": "string",
            "enum": [
                "MAIL",
                "TLPH",
                "ECOM",
                "TVPY",
                "SECM",
                "MOBL",
                "MPOS"
            ],
            "description": "Identifies the type of the communication channels used by the cardholder to the acceptor system. \nCode: MAIL: \t MailOrder: \tDefinition: Mail order.",
            "example": "MAIL"
        },
        "BusinessArea2Code": {
            "type": "string",
            "enum": [
                "AIBD",
                "PPAY",
                "TKNF",
                "EOPT",
                "TOPT"
            ],
            "description": "Specifies the business context of the transaction \nCode: AIBD: \t ArtificialIntelligenceBasedDecision: \tDefinition: The payment is initiated by an artificial intelligence based decision."
        },
        "CardFallback1Code": {
            "type": "string",
            "enum": [
                "FFLB",
                "SFLB",
                "NFLB"
            ],
            "description": "Information about card entry mode fallback. \nCode: FFLB: \t FallbackAfterFailure: \tDefinition: Card fall-back occurred during the transaction in progress. The previous transaction on the terminal failed."
        },
        "SupportedPaymentOption2Code": {
            "type": "string",
            "enum": [
                "PART",
                "MSRV",
                "INSI",
                "PINQ"
            ],
            "description": "Specifies the options supported for a payment transaction. \nCode: PART: \t PartialApproval: \tDefinition: The entity supports a partial approval of the payment transaction."
        },
        "SaleTokenScope1Code": {
            "type": "string",
            "enum": [
                "MULT",
                "SNGL"
            ],
            "description": "Scope of the token that identifies the payment mean of the customer. \nCode: MULT: \t MultipleUse: \tDefinition: The token is generated to recognise a customer for a longer period."
        },
        "RetailerService2Code": {
            "type": "string",
            "enum": [
                "FSPQ",
                "FSRQ",
                "FSIQ",
                "FSBQ",
                "FSLQ",
                "FSVQ",
                "FSEQ",
                "FSAQ",
                "FSCQ"
            ],
            "description": "List of specific services for ServiceRequest \nCode: FSPQ: \t FinancialPaymentRequest: \tDefinition: The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...)."
        },
        "CardPaymentServiceType5Code": {
            "type": "string",
            "enum": [
                "BALC",
                "CACT",
                "CRDP",
                "CAFH",
                "CAVR",
                "CSHW",
                "CSHD",
                "DEFR",
                "LOAD",
                "ORCR",
                "PINC",
                "QUCH",
                "RFND",
                "RESA",
                "VALC",
                "UNLD",
                "CAFT",
                "CAFL"
            ],
            "description": "Main service provided during the card payment transaction. \nCode: BALC: \t Balance: \tDefinition: Balance enquiry.",
            "example": "CRDP"
        },
        "CardPaymentServiceType9Code": {
            "type": "string",
            "enum": [
                "AGGR",
                "DCCV",
                "GRTT",
                "LOYT",
                "NRES",
                "PUCO",
                "RECP",
                "SOAF",
                "VCAU",
                "INSI",
                "INSA",
                "CSHB",
                "INST",
                "NRFD"
            ],
            "description": "Service provided by the card payment transaction, in addition to the main service. \nCode: AGGR: \t Aggregation: \tDefinition: Aggregation of low payments.",
            "example": "AGGR"
        },
        "CardPaymentServiceType14Code": {
            "type": "string",
            "enum": [
                "IRES",
                "URES",
                "PRES",
                "ARES",
                "FREC",
                "RREC",
                "GOPT"
            ],
            "description": "Additional attributes of the service provided by the card payment transaction. \nCode: IRES: \t InitialReservation: \tDefinition: Initial reservation.",
            "example": "IRES"
        },
        "CurrencyConversionResponse3Code": {
            "type": "string",
            "enum": [
                "ODCC",
                "DCCA",
                "ICRD",
                "IMER",
                "IPRD",
                "IRAT",
                "NDCC",
                "REST",
                "CATG"
            ],
            "description": "Result of a requested currency conversion. \nCode: ODCC: \t Allowed: \tDefinition: Dynamic currency conversion may be offered to the cardholder."
        },
        "InformationQualify1Code": {
            "type": "string",
            "enum": [
                "CUSA",
                "DISP",
                "DOCT",
                "ERRO",
                "INPT",
                "POIR",
                "RCPT",
                "SOND",
                "STAT",
                "VCHR"
            ],
            "description": "Qualification of the information to sent to an output logical device, to display or print to the Cashier or the Customer. \nCode: CUSA: \t CustomerAssistance: \tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer."
        },
        "OutputFormat3Code": {
            "type": "string",
            "enum": [
                "BARC",
                "MENT",
                "MREF",
                "SREF",
                "TEXT",
                "HTML"
            ],
            "description": "Type of output format. \nCode: BARC: \t Barcode: \tDefinition: Barcode to output in several possible format."
        },
        "BarcodeType1Code": {
            "type": "string",
            "enum": [
                "COQR",
                "C128",
                "C025",
                "C039",
                "EA13",
                "EAN8",
                "P417",
                "UPCA"
            ],
            "description": "Type of BarCode coding. \nCode: COQR: \t BarcodeEncodedAs2DQRCode: \tDefinition: Barcode encoded according to the 2Dimensions Quick Response Code Standard."
        },
        "QRCodeEncodingMode1Code": {
            "type": "string",
            "enum": [
                "ALFA",
                "BINA",
                "KANJ",
                "NUME"
            ],
            "description": "Encoding Mode of Quick Response Code. \nCode: ALFA: \t Alphanumeric: \tDefinition: Alphanumeric value provided in Barcode field."
        },
        "QRCodeErrorCorrection1Code": {
            "type": "string",
            "enum": [
                "M015",
                "Q025",
                "H030",
                "L007"
            ],
            "description": "Error Correction mode of Quick Response Code. \nCode: M015: \t ErrorCorrection15Percent: \tDefinition: Reed-Solomon error correction 15%"
        },
        "TypeOfAmount8Code": {
            "type": "string",
            "enum": [
                "ACTL",
                "ESTM",
                "MAXI",
                "DFLT",
                "RPLT",
                "INCR",
                "DECR",
                "RESD"
            ],
            "description": "Qualifies the amount associated with the transaction. \nCode: ACTL: \t Actual: \tDefinition: Actual amount.",
            "example": "ACTL"
        },
        "OnLineReason2Code": {
            "type": "string",
            "enum": [
                "RNDM",
                "ICCF",
                "MERF",
                "TRMF",
                "ISSF",
                "FRLT",
                "EXFL",
                "TAMT",
                "CBIN",
                "UBIN",
                "CPAN",
                "FLOW",
                "CRCY",
                "IFPR"
            ],
            "description": "Reason to process an online authorisation. \nCode: RNDM: \t RandomSelection: \tDefinition: Transaction random selection to go online.",
            "example": "RNDM"
        },
        "CardAccountType3Code": {
            "type": "string",
            "enum": [
                "CTDP",
                "CHCK",
                "CRDT",
                "CURR",
                "CDBT",
                "DFLT",
                "EPRS",
                "HEQL",
                "ISTL",
                "INVS",
                "LCDT",
                "MBNW",
                "MNMK",
                "MNMC",
                "MTGL",
                "RTRM",
                "RVLV",
                "SVNG",
                "STBD",
                "UVRL",
                "PRPD",
                "FLTC"
            ],
            "description": "Type of cardholder account used for the transaction. \nCode: CTDP: \t CertificateOfDeposit: \tDefinition: Certificate of deposit saving account."
        },
        "InstalmentPlan1Code": {
            "type": "string",
            "enum": [
                "EQPM",
                "NQPM",
                "DFRI"
            ],
            "description": "Type of instalment plan. \nCode: EQPM: \t EqualPayment: \tDefinition: The payment is split in several instalments of equal amounts."
        },
        "PlanOwner1Code": {
            "type": "string",
            "enum": [
                "ACCP",
                "ACQR",
                "ISSR",
                "OTHN",
                "OTHP"
            ],
            "description": "Contains list of plan owners \nCode: ACCP: \t Acceptor: \tDefinition: Plan owner is an acceptor."
        },
        "Frequency3Code": {
            "type": "string",
            "enum": [
                "YEAR",
                "MNTH",
                "QURT",
                "MIAN",
                "WEEK",
                "DAIL",
                "TEND"
            ],
            "description": "Specifies the regularity of an event. \nCode: YEAR: \t Annual: \tDefinition: Event takes place every year or once a year.",
            "example": "YEAR"
        },
        "InstalmentAmountDetailsType1Code": {
            "type": "string",
            "enum": [
                "TAXX",
                "RQST",
                "OTHP",
                "OTHN",
                "OTHC",
                "INSU",
                "FUNA",
                "FEES",
                "EXPN",
                "AFCO"
            ],
            "description": "Contains the details of the grace period applicable to the instalment. \nCode: TAXX: \t Tax: \tDefinition: Instalment amount tax"
        },
        "InterestRate1Code": {
            "type": "string",
            "enum": [
                "GSRT",
                "NTRT",
                "OTHN",
                "OTHP"
            ],
            "description": "Contains the list of interest rates. \nCode: GSRT: \t GrossRate: \tDefinition: Gross interest rate of the instalment"
        },
        "InstalmentPeriod1Code": {
            "type": "string",
            "enum": [
                "MNTH",
                "ANNU"
            ],
            "description": "Instalment period. \nCode: MNTH: \t Monthly: \tDefinition: Monthly instalment period."
        },
        "GracePeriodUnitType1Code": {
            "type": "string",
            "enum": [
                "WEKS",
                "PMTS",
                "OTHP",
                "OTHN",
                "MNTH",
                "DAYS"
            ],
            "description": "Contains the details of the grace period applicable to the instalment. \nCode: WEKS: \t Weeks: \tDefinition: Grace period weeks."
        },
        "UnitOfMeasure6Code": {
            "type": "string",
            "enum": [
                "PIEC",
                "TONS",
                "FOOT",
                "GBGA",
                "USGA",
                "GRAM",
                "INCH",
                "KILO",
                "PUND",
                "METR",
                "CMET",
                "MMET",
                "LITR",
                "CELI",
                "MILI",
                "GBOU",
                "USOU",
                "GBQA",
                "USQA",
                "GBPI",
                "USPI",
                "MILE",
                "KMET",
                "YARD",
                "SQKI",
                "HECT",
                "ARES",
                "SMET",
                "SCMT",
                "SMIL",
                "SQMI",
                "SQYA",
                "SQFO",
                "SQIN",
                "ACRE",
                "KWHO",
                "DGEU",
                "GGEU"
            ],
            "description": "Unit of measure of the item purchased. \nCode: PIEC: \t Piece: \tDefinition: Standard length of cloth, wallpaper, as an item for sale or amount of a substance.",
            "example": "PIEC"
        },
        "AttendanceContext2Code": {
            "type": "string",
            "enum": [
                "ATTL",
                "CARR",
                "CUST",
                "FULL",
                "SELF"
            ],
            "description": "Identify the method of delivery or distribution. \nCode: ATTL: \t AttendantDelivery: \tDefinition: Delivery by an attendant."
        },
        "PartyType14Code": {
            "type": "string",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS",
                "ICCA"
            ],
            "description": "Identification of the type of entity involved in a transaction. \nCode: OPOI: \t OriginatingPOI: \tDefinition: Point Of Interaction initiating the card payment transaction.",
            "example": "OPOI"
        },
        "Response9Code": {
            "type": "string",
            "enum": [
                "APPR",
                "DECL",
                "PART",
                "SUSP",
                "TECH"
            ],
            "description": "Result of the performed service. \nCode: APPR: \t Approved: \tDefinition: Service has been successfuly provided."
        },
        "ReversalReason1Code": {
            "type": "string",
            "enum": [
                "CUSC",
                "MALF",
                "MERC",
                "UNAB"
            ],
            "description": "Reason of the payment or loyalty reversal. \nCode: CUSC: \t CustomerCancellation: \tDefinition: Customer cancels the transaction."
        },
        "StoredValueTransactionType3Code": {
            "type": "string",
            "enum": [
                "ACTV",
                "DUPL",
                "LOAD",
                "RESV",
                "REVS",
                "ULOA",
                "CLOS",
                "DCTV",
                "OPEN",
                "BALC"
            ],
            "description": "Identification of operation to proceed on the stored value account or the stored value card. \nCode: ACTV: \t Activate: \tDefinition: Activate the account or the card."
        },
        "LoyaltyTransactionType1Code": {
            "type": "string",
            "enum": [
                "AWRD",
                "AWRR",
                "REBR",
                "REBA",
                "REDE",
                "REDR"
            ],
            "description": "Type of loyalty transaction. \nCode: AWRD: \t Award: \tDefinition: Direct or payment related award on a loyalty account. Award alone, award associated to a payment (may be with an additional award alone), award because of \ta payment resulting on rebates."
        },
        "TransactionAction1Code": {
            "type": "string",
            "enum": [
                "STAR",
                "STOP"
            ],
            "description": "Action to realise on a transaction. \nCode: STAR: \t StartTransaction: \tDefinition: Start a transaction by a swipe ahead mechanism, with the services which are enabled."
        },
        "CardPaymentServiceType13Code": {
            "type": "string",
            "enum": [
                "CRDP",
                "CSHW",
                "CSHD",
                "IRES",
                "DEFR",
                "URES",
                "PRES",
                "RECP",
                "INSP",
                "INSI",
                "RFND",
                "VCAU"
            ],
            "description": "Additional attribute of the service type. \nCode: CRDP: \t CardPayment: \tDefinition: Card payment."
        }
    }
}