# generated by datamodel-codegen:
#   filename:  casp.001.001.06.json
#   timestamp: 2024-06-19T14:59:17+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import Field
from pydantic_v2 import BaseModel


class GeolocationGeographicCoordinates1(BaseModel):
    Latitude: str
    Longitude: str


class GeolocationUTMCoordinates1(BaseModel):
    UTMZone: str
    UTMEastward: str
    UTMNorthward: str


class Geolocation1(BaseModel):
    GeographicCoordinates: Optional[GeolocationGeographicCoordinates1] = None
    UTMCoordinates: Optional[GeolocationUTMCoordinates1] = None


class PointOfInteractionComponentIdentification2(BaseModel):
    ItemNumber: Optional[str] = None
    ProviderIdentification: Optional[str] = None
    Identification: Optional[str] = None
    SerialNumber: Optional[str] = None


class GenericIdentification48(BaseModel):
    Identification: str
    Version: str
    Issuer: str


class OriginatorInformation1(BaseModel):
    Certificate: Optional[List[List[int]]] = Field(None, min_items=0)


class KEKIdentifier7(BaseModel):
    KeyIdentification: str
    KeyVersion: str
    SequenceNumber: Optional[float] = None
    DerivationIdentification: Optional[List[int]] = None


class GenericInformation1(BaseModel):
    Name: str
    Value: Optional[str] = None


class PlainCardData22(BaseModel):
    PAN: str
    CardSequenceNumber: Optional[str] = None
    EffectiveDate: Optional[str] = None
    ExpiryDate: Optional[str] = None
    ServiceCode: Optional[str] = None
    Track1: Optional[str] = None
    Track2: Optional[str] = None
    Track3: Optional[str] = None
    CardholderName: Optional[str] = None


class CustomerDevice3(BaseModel):
    Identification: Optional[str] = None
    Type: Optional[str] = None
    Provider: Optional[str] = None


class Token1(BaseModel):
    PaymentToken: Optional[str] = None
    TokenExpiryDate: Optional[str] = None
    TokenRequestorIdentification: Optional[str] = None
    TokenAssuranceData: Optional[str] = None
    TokenAssuranceMethod: Optional[str] = None
    TokenInitiatedIndicator: Optional[bool] = None


class PaymentTokenIdentifiers1(BaseModel):
    ProviderIdentification: str
    RequestorIdentification: str


class MerchantToken2(BaseModel):
    Token: Optional[str] = None
    TokenExpiryDate: Optional[str] = None
    TokenCharacteristic: Optional[List[str]] = Field(None, min_items=0)
    TokenRequestor: Optional[PaymentTokenIdentifiers1] = None
    TokenAssuranceLevel: Optional[float] = None
    TokenAssuranceData: Optional[List[int]] = None
    TokenAssuranceMethod: Optional[str] = None
    TokenInitiatedIndicator: Optional[bool] = None


class DateAndPlaceOfBirth1(BaseModel):
    BirthDate: date
    ProvinceOfBirth: Optional[str] = None
    CityOfBirth: str
    CountryOfBirth: str


class GenericIdentification4(BaseModel):
    Identification: str
    IdentificationType: str


class PersonIdentification15(BaseModel):
    DriverLicenseNumber: Optional[str] = None
    DriverLicenseLocation: Optional[str] = None
    DriverLicenseName: Optional[str] = None
    DriverIdentification: Optional[str] = None
    CustomerNumber: Optional[str] = None
    SocialSecurityNumber: Optional[str] = None
    AlienRegistrationNumber: Optional[str] = None
    PassportNumber: Optional[str] = None
    TaxIdentificationNumber: Optional[str] = None
    IdentityCardNumber: Optional[str] = None
    EmployerIdentificationNumber: Optional[str] = None
    EmployeeIdentificationNumber: Optional[str] = None
    JobNumber: Optional[str] = None
    Department: Optional[str] = None
    EmailAddress: Optional[str] = None
    DateAndPlaceOfBirth: Optional[DateAndPlaceOfBirth1] = None
    Other: Optional[List[GenericIdentification4]] = Field(None, min_items=0)


class AddressVerification1(BaseModel):
    AddressDigits: Optional[str] = None
    PostalCodeDigits: Optional[str] = None


class SensitiveMobileData1(BaseModel):
    MSISDN: str
    IMSI: Optional[str] = None
    IMEI: Optional[str] = None


class Organisation26(BaseModel):
    CommonName: str
    Address: Optional[str] = None
    CountryCode: str
    MerchantCategoryCode: str
    RegisteredIdentifier: str


class GenericIdentification36(BaseModel):
    Identification: str
    Issuer: str
    SchemeName: Optional[str] = None


class PostalAddress2(BaseModel):
    StreetName: Optional[str] = None
    PostCodeIdentification: str
    TownName: str
    CountrySubDivision: Optional[str] = None
    Country: str


class NameAndAddress6(BaseModel):
    Name: str
    Address: PostalAddress2


class PartyIdentification178Choice(BaseModel):
    AnyBIC: str
    ProprietaryIdentification: GenericIdentification36
    NameAndAddress: NameAndAddress6


class SimpleIdentificationInformation4(BaseModel):
    Identification: str


class CashAccountIdentification7Choice(BaseModel):
    IBAN: str
    BBAN: str
    UPIC: str
    DomesticAccount: SimpleIdentificationInformation4


class Debtor4(BaseModel):
    Debtor: Optional[PartyIdentification178Choice] = None
    AccountIdentification: Optional[CashAccountIdentification7Choice] = None


class Creditor4(BaseModel):
    Creditor: PartyIdentification178Choice
    RegistrationIdentification: Optional[str] = None


class MandateRelatedInformation13(BaseModel):
    MandateIdentification: str
    DateOfSignature: Optional[date] = None
    MandateImage: Optional[List[int]] = None


class CardDirectDebit2(BaseModel):
    DebtorIdentification: Optional[Debtor4] = None
    CreditorIdentification: Creditor4
    MandateRelatedInformation: MandateRelatedInformation13


class TransactionIdentifier1(BaseModel):
    TransactionDateTime: datetime
    TransactionReference: str


class CurrencyDetails3(BaseModel):
    AlphaCode: str
    NumericCode: str
    Decimal: float
    Name: Optional[str] = None


class CurrencyDetails2(BaseModel):
    AlphaCode: Optional[str] = None
    NumericCode: Optional[str] = None
    Decimal: Optional[float] = None
    Name: Optional[str] = None


class BinRange1(BaseModel):
    LowerBin: str
    HigherBin: str


class OriginalAmountDetails1(BaseModel):
    ActualAmount: Optional[float] = None
    MinimumAmount: Optional[float] = None
    MaximumAmount: Optional[float] = None


class Commission19(BaseModel):
    Amount: float
    AdditionalInformation: Optional[str] = None


class Commission18(BaseModel):
    Rate: float
    AdditionalInformation: Optional[str] = None


class DetailedAmount4(BaseModel):
    Amount: float
    Label: Optional[str] = None


class DetailedAmount15(BaseModel):
    AmountGoodsAndServices: Optional[float] = None
    CashBack: Optional[float] = None
    Gratuity: Optional[float] = None
    Fees: Optional[List[DetailedAmount4]] = Field(None, min_items=0)
    Rebate: Optional[List[DetailedAmount4]] = Field(None, min_items=0)
    ValueAddedTax: Optional[List[DetailedAmount4]] = Field(None, min_items=0)
    Surcharge: Optional[List[DetailedAmount4]] = Field(None, min_items=0)


class ActiveCurrencyAndAmount(BaseModel):
    Value: Optional[float] = None
    Currency: str


class Amount5(BaseModel):
    Amount: float
    Sign: Optional[bool] = None


class CardPaymentToken5(BaseModel):
    Token: Optional[str] = None
    CardSequenceNumber: Optional[str] = None
    TokenExpiryDate: Optional[str] = None
    TokenCharacteristic: Optional[List[str]] = Field(None, min_items=0)
    TokenRequestor: Optional[PaymentTokenIdentifiers1] = None
    TokenAssuranceLevel: Optional[float] = None
    TokenAssuranceData: Optional[List[int]] = None
    TokenAssuranceMethod: Optional[str] = None
    TokenInitiatedIndicator: Optional[bool] = None


class SupplementaryDataEnvelope1(BaseModel):
    Any: Dict[str, Any]


class SupplementaryData1(BaseModel):
    PlaceAndName: Optional[str] = None
    Envelope: SupplementaryDataEnvelope1


class RetailerMessage1Code(Enum):
    SSAB = 'SSAB'
    SAAQ = 'SAAQ'
    SAAP = 'SAAP'
    SDDR = 'SDDR'
    SDDP = 'SDDP'
    SSEN = 'SSEN'
    SSMQ = 'SSMQ'
    SSMR = 'SSMR'
    SSRJ = 'SSRJ'
    SARQ = 'SARQ'
    SARP = 'SARP'
    SFRP = 'SFRP'
    SFRQ = 'SFRQ'
    SFSQ = 'SFSQ'
    SFSP = 'SFSP'
    SASQ = 'SASQ'
    SASP = 'SASP'


class PartyType33Code(Enum):
    OPOI = 'OPOI'
    MERC = 'MERC'
    ACCP = 'ACCP'
    ITAG = 'ITAG'
    ACQR = 'ACQR'
    CISS = 'CISS'
    DLIS = 'DLIS'
    MTMG = 'MTMG'
    TAXH = 'TAXH'
    TMGT = 'TMGT'


class NetworkType1Code(Enum):
    IPNW = 'IPNW'
    PSTN = 'PSTN'


class PartyType3Code(Enum):
    OPOI = 'OPOI'
    MERC = 'MERC'
    ACCP = 'ACCP'
    ITAG = 'ITAG'
    ACQR = 'ACQR'
    CISS = 'CISS'
    DLIS = 'DLIS'


class PartyType4Code(Enum):
    MERC = 'MERC'
    ACCP = 'ACCP'
    ITAG = 'ITAG'
    ACQR = 'ACQR'
    CISS = 'CISS'
    TAXH = 'TAXH'


class LocationCategory4Code(Enum):
    ABRD = 'ABRD'
    NMDC = 'NMDC'
    FIXD = 'FIXD'
    VIRT = 'VIRT'


class AddressType2Code(Enum):
    ADDR = 'ADDR'
    PBOX = 'PBOX'
    HOME = 'HOME'
    BIZZ = 'BIZZ'
    MLTO = 'MLTO'
    DLVY = 'DLVY'


class CardDataReading8Code(Enum):
    TAGC = 'TAGC'
    PHYS = 'PHYS'
    BRCD = 'BRCD'
    MGST = 'MGST'
    CICC = 'CICC'
    DFLE = 'DFLE'
    CTLS = 'CTLS'
    ECTL = 'ECTL'
    CDFL = 'CDFL'
    SICC = 'SICC'
    UNKW = 'UNKW'
    QRCD = 'QRCD'
    OPTC = 'OPTC'


class CardholderVerificationCapability4Code(Enum):
    APKI = 'APKI'
    CHDT = 'CHDT'
    MNSG = 'MNSG'
    MNVR = 'MNVR'
    FBIG = 'FBIG'
    FBIO = 'FBIO'
    FDSG = 'FDSG'
    FCPN = 'FCPN'
    FEPN = 'FEPN'
    NPIN = 'NPIN'
    PKIS = 'PKIS'
    SCEC = 'SCEC'
    NBIO = 'NBIO'
    NOVF = 'NOVF'
    OTHR = 'OTHR'


class OnLineCapability1Code(Enum):
    OFLN = 'OFLN'
    ONLN = 'ONLN'
    SMON = 'SMON'


class UserInterface4Code(Enum):
    CDSP = 'CDSP'
    CRCP = 'CRCP'
    MDSP = 'MDSP'
    MRCP = 'MRCP'
    CRDO = 'CRDO'


class OutputFormat1Code(Enum):
    MREF = 'MREF'
    TEXT = 'TEXT'
    HTML = 'HTML'


class LocationCategory3Code(Enum):
    INDR = 'INDR'
    IPMP = 'IPMP'
    MPOI = 'MPOI'
    MPMP = 'MPMP'
    MSLE = 'MSLE'
    SSLE = 'SSLE'
    VNDG = 'VNDG'


class POIComponentType6Code(Enum):
    AQPP = 'AQPP'
    APPR = 'APPR'
    TLPR = 'TLPR'
    SCPR = 'SCPR'
    SERV = 'SERV'
    TERM = 'TERM'
    DVCE = 'DVCE'
    SECM = 'SECM'
    APLI = 'APLI'
    EMVK = 'EMVK'
    EMVO = 'EMVO'
    MDWR = 'MDWR'
    DRVR = 'DRVR'
    OPST = 'OPST'
    MRPR = 'MRPR'
    CRTF = 'CRTF'
    TMSP = 'TMSP'
    SACP = 'SACP'
    SAPR = 'SAPR'
    LOGF = 'LOGF'
    MDFL = 'MDFL'
    SOFT = 'SOFT'
    CONF = 'CONF'
    RPFL = 'RPFL'


class POIComponentStatus1Code(Enum):
    WAIT = 'WAIT'
    OUTD = 'OUTD'
    OPER = 'OPER'
    DACT = 'DACT'


class MemoryUnit1Code(Enum):
    BYTE = 'BYTE'
    EXAB = 'EXAB'
    GIGA = 'GIGA'
    KILO = 'KILO'
    MEGA = 'MEGA'
    PETA = 'PETA'
    TERA = 'TERA'


class POICommunicationType2Code(Enum):
    BLTH = 'BLTH'
    ETHR = 'ETHR'
    GPRS = 'GPRS'
    GSMF = 'GSMF'
    PSTN = 'PSTN'
    RS23 = 'RS23'
    USBD = 'USBD'
    USBH = 'USBH'
    WIFI = 'WIFI'
    WT2G = 'WT2G'
    WT3G = 'WT3G'
    WT4G = 'WT4G'
    WT5G = 'WT5G'


class PartyType7Code(Enum):
    ACQR = 'ACQR'
    ITAG = 'ITAG'
    PCPT = 'PCPT'
    TMGT = 'TMGT'
    SALE = 'SALE'


class CryptographicKeyType3Code(Enum):
    AES2 = 'AES2'
    EDE3 = 'EDE3'
    DKP9 = 'DKP9'
    AES9 = 'AES9'
    AES5 = 'AES5'
    EDE4 = 'EDE4'


class KeyUsage1Code(Enum):
    ENCR = 'ENCR'
    DCPT = 'DCPT'
    DENC = 'DENC'
    DDEC = 'DDEC'
    TRNI = 'TRNI'
    TRNX = 'TRNX'
    MACG = 'MACG'
    MACV = 'MACV'
    SIGG = 'SIGG'
    SUGV = 'SUGV'
    PINE = 'PINE'
    PIND = 'PIND'
    PINV = 'PINV'
    KEYG = 'KEYG'
    KEYI = 'KEYI'
    KEYX = 'KEYX'
    KEYD = 'KEYD'


class ContentType2Code(Enum):
    DATA = 'DATA'
    SIGN = 'SIGN'
    EVLP = 'EVLP'
    DGST = 'DGST'
    AUTH = 'AUTH'


class AttributeType1Code(Enum):
    CNAT = 'CNAT'
    LATT = 'LATT'
    OATT = 'OATT'
    OUAT = 'OUAT'
    CATT = 'CATT'


class Algorithm7Code(Enum):
    ERSA = 'ERSA'
    RSAO = 'RSAO'


class EncryptionFormat2Code(Enum):
    TR31 = 'TR31'
    TR34 = 'TR34'
    I238 = 'I238'


class Algorithm26Code(Enum):
    HS25 = 'HS25'
    HS38 = 'HS38'
    HS51 = 'HS51'
    HS01 = 'HS01'
    SH31 = 'SH31'
    SH32 = 'SH32'
    SH33 = 'SH33'
    SH35 = 'SH35'
    SHK1 = 'SHK1'
    SHK2 = 'SHK2'
    SMS3 = 'SMS3'


class Algorithm8Code(Enum):
    MGF1 = 'MGF1'


class Algorithm28Code(Enum):
    EA2C = 'EA2C'
    E3DC = 'E3DC'
    DKP9 = 'DKP9'
    UKPT = 'UKPT'
    UKA2 = 'UKA2'
    EA9C = 'EA9C'
    EA5C = 'EA5C'
    DA12 = 'DA12'
    DA19 = 'DA19'
    DA25 = 'DA25'
    N108 = 'N108'
    EA5R = 'EA5R'
    EA9R = 'EA9R'
    EA2R = 'EA2R'
    E3DR = 'E3DR'
    E36C = 'E36C'
    E36R = 'E36R'
    SD5C = 'SD5C'
    UKA1 = 'UKA1'
    UKA3 = 'UKA3'
    SM4C = 'SM4C'
    SM4R = 'SM4R'


class BytePadding1Code(Enum):
    LNGT = 'LNGT'
    NUL8 = 'NUL8'
    NULG = 'NULG'
    NULL = 'NULL'
    RAND = 'RAND'


class Algorithm27Code(Enum):
    MACC = 'MACC'
    MCCS = 'MCCS'
    CMA1 = 'CMA1'
    MCC1 = 'MCC1'
    CMA9 = 'CMA9'
    CMA5 = 'CMA5'
    CMA2 = 'CMA2'
    CM31 = 'CM31'
    CM32 = 'CM32'
    CM33 = 'CM33'
    MCS3 = 'MCS3'
    CCA1 = 'CCA1'
    CCA2 = 'CCA2'
    CCA3 = 'CCA3'
    S34C = 'S34C'
    S34R = 'S34R'


class Algorithm29Code(Enum):
    ERS2 = 'ERS2'
    ERS1 = 'ERS1'
    RPSS = 'RPSS'
    ERS3 = 'ERS3'
    ED32 = 'ED32'
    ED33 = 'ED33'
    ED35 = 'ED35'
    ED23 = 'ED23'
    ED25 = 'ED25'
    ES22 = 'ES22'
    ES32 = 'ES32'
    ES33 = 'ES33'
    ES35 = 'ES35'
    ES23 = 'ES23'
    ES25 = 'ES25'
    ED22 = 'ED22'
    EF32 = 'EF32'
    EF22 = 'EF22'
    EF33 = 'EF33'
    EF35 = 'EF35'
    EF23 = 'EF23'
    EO33 = 'EO33'
    EF25 = 'EF25'
    EO32 = 'EO32'
    EO22 = 'EO22'
    EO35 = 'EO35'
    EO23 = 'EO23'
    EO25 = 'EO25'
    DD22 = 'DD22'
    DD32 = 'DD32'
    DD33 = 'DD33'
    DD35 = 'DD35'
    DD23 = 'DD23'
    DD25 = 'DD25'
    SM22 = 'SM22'
    SM33 = 'SM33'
    SM32 = 'SM32'
    SM35 = 'SM35'
    SM23 = 'SM23'
    SM25 = 'SM25'
    S2S3 = 'S2S3'


class POIComponentAssessment1Code(Enum):
    APPL = 'APPL'
    CERT = 'CERT'
    EVAL = 'EVAL'


class CardProductType1Code(Enum):
    COMM = 'COMM'
    CONS = 'CONS'


class TrackFormat1Code(Enum):
    AAMV = 'AAMV'
    CMC7 = 'CMC7'
    E13B = 'E13B'
    ISOF = 'ISOF'
    JIS1 = 'JIS1'
    JIS2 = 'JIS2'


class CheckType1Code(Enum):
    BANK = 'BANK'
    BUSI = 'BUSI'
    GOVC = 'GOVC'
    PAYR = 'PAYR'
    PERS = 'PERS'


class StoredValueAccountType1Code(Enum):
    BNKA = 'BNKA'
    CWVC = 'CWVC'
    CPYA = 'CPYA'
    ELMY = 'ELMY'
    GIFT = 'GIFT'
    GCER = 'GCER'
    MLVC = 'MLVC'
    OLVC = 'OLVC'
    MERC = 'MERC'
    OTHR = 'OTHR'
    PHON = 'PHON'
    CARD = 'CARD'
    TRVL = 'TRVL'


class CardIdentificationType1Code(Enum):
    ACCT = 'ACCT'
    BARC = 'BARC'
    ISO2 = 'ISO2'
    PHON = 'PHON'
    CPAN = 'CPAN'
    PRIV = 'PRIV'
    UUID = 'UUID'


class AmountUnit1Code(Enum):
    MONE = 'MONE'
    POIN = 'POIN'


class CardDataReading5Code(Enum):
    TAGC = 'TAGC'
    PHYS = 'PHYS'
    BRCD = 'BRCD'
    MGST = 'MGST'
    CICC = 'CICC'
    DFLE = 'DFLE'
    CTLS = 'CTLS'
    ECTL = 'ECTL'
    CDFL = 'CDFL'


class AuthenticationMethod8Code(Enum):
    TOKA = 'TOKA'
    ADDB = 'ADDB'
    BYPS = 'BYPS'
    BIOM = 'BIOM'
    CDHI = 'CDHI'
    CRYP = 'CRYP'
    CSCV = 'CSCV'
    MANU = 'MANU'
    MERC = 'MERC'
    MOBL = 'MOBL'
    FPIN = 'FPIN'
    NPIN = 'NPIN'
    OTHR = 'OTHR'
    PPSG = 'PPSG'
    PSVE = 'PSVE'
    PSWD = 'PSWD'
    TOKP = 'TOKP'
    SCRT = 'SCRT'
    SCNL = 'SCNL'
    CSEC = 'CSEC'
    SNCT = 'SNCT'
    ADDS = 'ADDS'
    CPSG = 'CPSG'
    TOKN = 'TOKN'
    UKNW = 'UKNW'


class Exemption1Code(Enum):
    LOWA = 'LOWA'
    MINT = 'MINT'
    RECP = 'RECP'
    SCPE = 'SCPE'
    SCAD = 'SCAD'
    TRAE = 'TRAE'
    PKGE = 'PKGE'
    TMBE = 'TMBE'


class PINFormat3Code(Enum):
    ISO0 = 'ISO0'
    ISO1 = 'ISO1'
    ISO2 = 'ISO2'
    ISO3 = 'ISO3'
    ISO4 = 'ISO4'
    ISO5 = 'ISO5'


class AuthenticationResult1Code(Enum):
    DENY = 'DENY'
    MRCH = 'MRCH'
    CARD = 'CARD'
    AUTH = 'AUTH'
    CRPT = 'CRPT'
    UCRP = 'UCRP'


class AuthenticationMethod6Code(Enum):
    NPIN = 'NPIN'
    PPSG = 'PPSG'
    PSWD = 'PSWD'
    SCRT = 'SCRT'
    SCNL = 'SCNL'
    SNCT = 'SNCT'
    CPSG = 'CPSG'
    ADDB = 'ADDB'
    BIOM = 'BIOM'
    CDHI = 'CDHI'
    CRYP = 'CRYP'
    CSCV = 'CSCV'
    PSVE = 'PSVE'
    CSEC = 'CSEC'
    ADDS = 'ADDS'
    MANU = 'MANU'
    FPIN = 'FPIN'
    TOKP = 'TOKP'


class AuthenticationEntity2Code(Enum):
    ICCD = 'ICCD'
    AGNT = 'AGNT'
    MERC = 'MERC'
    ACQR = 'ACQR'
    ISSR = 'ISSR'
    TRML = 'TRML'


class Verification1Code(Enum):
    FAIL = 'FAIL'
    MISS = 'MISS'
    NOVF = 'NOVF'
    PART = 'PART'
    SUCC = 'SUCC'
    ERRR = 'ERRR'


class SaleCapabilities1Code(Enum):
    CHDI = 'CHDI'
    CHER = 'CHER'
    CHIN = 'CHIN'
    CHST = 'CHST'
    CUDI = 'CUDI'
    CUAS = 'CUAS'
    CUER = 'CUER'
    CUIN = 'CUIN'
    POIR = 'POIR'
    PRDC = 'PRDC'
    PRRP = 'PRRP'
    PRVC = 'PRVC'


class LoyaltyHandling1Code(Enum):
    ALLO = 'ALLO'
    DENY = 'DENY'
    PRCS = 'PRCS'
    PROP = 'PROP'
    REQU = 'REQU'


class AttendanceContext1Code(Enum):
    ATTD = 'ATTD'
    SATT = 'SATT'
    UATT = 'UATT'


class TransactionEnvironment1Code(Enum):
    MERC = 'MERC'
    PRIV = 'PRIV'
    PUBL = 'PUBL'


class TransactionChannel5Code(Enum):
    MAIL = 'MAIL'
    TLPH = 'TLPH'
    ECOM = 'ECOM'
    TVPY = 'TVPY'
    SECM = 'SECM'
    MOBL = 'MOBL'
    MPOS = 'MPOS'


class BusinessArea2Code(Enum):
    AIBD = 'AIBD'
    PPAY = 'PPAY'
    TKNF = 'TKNF'
    EOPT = 'EOPT'
    TOPT = 'TOPT'


class CardFallback1Code(Enum):
    FFLB = 'FFLB'
    SFLB = 'SFLB'
    NFLB = 'NFLB'


class SupportedPaymentOption2Code(Enum):
    PART = 'PART'
    MSRV = 'MSRV'
    INSI = 'INSI'
    PINQ = 'PINQ'


class SaleTokenScope1Code(Enum):
    MULT = 'MULT'
    SNGL = 'SNGL'


class RetailerService2Code(Enum):
    FSPQ = 'FSPQ'
    FSRQ = 'FSRQ'
    FSIQ = 'FSIQ'
    FSBQ = 'FSBQ'
    FSLQ = 'FSLQ'
    FSVQ = 'FSVQ'
    FSEQ = 'FSEQ'
    FSAQ = 'FSAQ'
    FSCQ = 'FSCQ'


class CardPaymentServiceType5Code(Enum):
    BALC = 'BALC'
    CACT = 'CACT'
    CRDP = 'CRDP'
    CAFH = 'CAFH'
    CAVR = 'CAVR'
    CSHW = 'CSHW'
    CSHD = 'CSHD'
    DEFR = 'DEFR'
    LOAD = 'LOAD'
    ORCR = 'ORCR'
    PINC = 'PINC'
    QUCH = 'QUCH'
    RFND = 'RFND'
    RESA = 'RESA'
    VALC = 'VALC'
    UNLD = 'UNLD'
    CAFT = 'CAFT'
    CAFL = 'CAFL'


class CardPaymentServiceType9Code(Enum):
    AGGR = 'AGGR'
    DCCV = 'DCCV'
    GRTT = 'GRTT'
    LOYT = 'LOYT'
    NRES = 'NRES'
    PUCO = 'PUCO'
    RECP = 'RECP'
    SOAF = 'SOAF'
    VCAU = 'VCAU'
    INSI = 'INSI'
    INSA = 'INSA'
    CSHB = 'CSHB'
    INST = 'INST'
    NRFD = 'NRFD'


class CardPaymentServiceType14Code(Enum):
    IRES = 'IRES'
    URES = 'URES'
    PRES = 'PRES'
    ARES = 'ARES'
    FREC = 'FREC'
    RREC = 'RREC'
    GOPT = 'GOPT'


class CurrencyConversionResponse3Code(Enum):
    ODCC = 'ODCC'
    DCCA = 'DCCA'
    ICRD = 'ICRD'
    IMER = 'IMER'
    IPRD = 'IPRD'
    IRAT = 'IRAT'
    NDCC = 'NDCC'
    REST = 'REST'
    CATG = 'CATG'


class InformationQualify1Code(Enum):
    CUSA = 'CUSA'
    DISP = 'DISP'
    DOCT = 'DOCT'
    ERRO = 'ERRO'
    INPT = 'INPT'
    POIR = 'POIR'
    RCPT = 'RCPT'
    SOND = 'SOND'
    STAT = 'STAT'
    VCHR = 'VCHR'


class OutputFormat3Code(Enum):
    BARC = 'BARC'
    MENT = 'MENT'
    MREF = 'MREF'
    SREF = 'SREF'
    TEXT = 'TEXT'
    HTML = 'HTML'


class BarcodeType1Code(Enum):
    COQR = 'COQR'
    C128 = 'C128'
    C025 = 'C025'
    C039 = 'C039'
    EA13 = 'EA13'
    EAN8 = 'EAN8'
    P417 = 'P417'
    UPCA = 'UPCA'


class QRCodeEncodingMode1Code(Enum):
    ALFA = 'ALFA'
    BINA = 'BINA'
    KANJ = 'KANJ'
    NUME = 'NUME'


class QRCodeErrorCorrection1Code(Enum):
    M015 = 'M015'
    Q025 = 'Q025'
    H030 = 'H030'
    L007 = 'L007'


class TypeOfAmount8Code(Enum):
    ACTL = 'ACTL'
    ESTM = 'ESTM'
    MAXI = 'MAXI'
    DFLT = 'DFLT'
    RPLT = 'RPLT'
    INCR = 'INCR'
    DECR = 'DECR'
    RESD = 'RESD'


class OnLineReason2Code(Enum):
    RNDM = 'RNDM'
    ICCF = 'ICCF'
    MERF = 'MERF'
    TRMF = 'TRMF'
    ISSF = 'ISSF'
    FRLT = 'FRLT'
    EXFL = 'EXFL'
    TAMT = 'TAMT'
    CBIN = 'CBIN'
    UBIN = 'UBIN'
    CPAN = 'CPAN'
    FLOW = 'FLOW'
    CRCY = 'CRCY'
    IFPR = 'IFPR'


class CardAccountType3Code(Enum):
    CTDP = 'CTDP'
    CHCK = 'CHCK'
    CRDT = 'CRDT'
    CURR = 'CURR'
    CDBT = 'CDBT'
    DFLT = 'DFLT'
    EPRS = 'EPRS'
    HEQL = 'HEQL'
    ISTL = 'ISTL'
    INVS = 'INVS'
    LCDT = 'LCDT'
    MBNW = 'MBNW'
    MNMK = 'MNMK'
    MNMC = 'MNMC'
    MTGL = 'MTGL'
    RTRM = 'RTRM'
    RVLV = 'RVLV'
    SVNG = 'SVNG'
    STBD = 'STBD'
    UVRL = 'UVRL'
    PRPD = 'PRPD'
    FLTC = 'FLTC'


class InstalmentPlan1Code(Enum):
    EQPM = 'EQPM'
    NQPM = 'NQPM'
    DFRI = 'DFRI'


class PlanOwner1Code(Enum):
    ACCP = 'ACCP'
    ACQR = 'ACQR'
    ISSR = 'ISSR'
    OTHN = 'OTHN'
    OTHP = 'OTHP'


class Frequency3Code(Enum):
    YEAR = 'YEAR'
    MNTH = 'MNTH'
    QURT = 'QURT'
    MIAN = 'MIAN'
    WEEK = 'WEEK'
    DAIL = 'DAIL'
    TEND = 'TEND'


class InstalmentAmountDetailsType1Code(Enum):
    TAXX = 'TAXX'
    RQST = 'RQST'
    OTHP = 'OTHP'
    OTHN = 'OTHN'
    OTHC = 'OTHC'
    INSU = 'INSU'
    FUNA = 'FUNA'
    FEES = 'FEES'
    EXPN = 'EXPN'
    AFCO = 'AFCO'


class InterestRate1Code(Enum):
    GSRT = 'GSRT'
    NTRT = 'NTRT'
    OTHN = 'OTHN'
    OTHP = 'OTHP'


class InstalmentPeriod1Code(Enum):
    MNTH = 'MNTH'
    ANNU = 'ANNU'


class GracePeriodUnitType1Code(Enum):
    WEKS = 'WEKS'
    PMTS = 'PMTS'
    OTHP = 'OTHP'
    OTHN = 'OTHN'
    MNTH = 'MNTH'
    DAYS = 'DAYS'


class UnitOfMeasure6Code(Enum):
    PIEC = 'PIEC'
    TONS = 'TONS'
    FOOT = 'FOOT'
    GBGA = 'GBGA'
    USGA = 'USGA'
    GRAM = 'GRAM'
    INCH = 'INCH'
    KILO = 'KILO'
    PUND = 'PUND'
    METR = 'METR'
    CMET = 'CMET'
    MMET = 'MMET'
    LITR = 'LITR'
    CELI = 'CELI'
    MILI = 'MILI'
    GBOU = 'GBOU'
    USOU = 'USOU'
    GBQA = 'GBQA'
    USQA = 'USQA'
    GBPI = 'GBPI'
    USPI = 'USPI'
    MILE = 'MILE'
    KMET = 'KMET'
    YARD = 'YARD'
    SQKI = 'SQKI'
    HECT = 'HECT'
    ARES = 'ARES'
    SMET = 'SMET'
    SCMT = 'SCMT'
    SMIL = 'SMIL'
    SQMI = 'SQMI'
    SQYA = 'SQYA'
    SQFO = 'SQFO'
    SQIN = 'SQIN'
    ACRE = 'ACRE'
    KWHO = 'KWHO'
    DGEU = 'DGEU'
    GGEU = 'GGEU'


class AttendanceContext2Code(Enum):
    ATTL = 'ATTL'
    CARR = 'CARR'
    CUST = 'CUST'
    FULL = 'FULL'
    SELF = 'SELF'


class PartyType14Code(Enum):
    OPOI = 'OPOI'
    MERC = 'MERC'
    ACCP = 'ACCP'
    ITAG = 'ITAG'
    ACQR = 'ACQR'
    CISS = 'CISS'
    DLIS = 'DLIS'
    ICCA = 'ICCA'


class Response9Code(Enum):
    APPR = 'APPR'
    DECL = 'DECL'
    PART = 'PART'
    SUSP = 'SUSP'
    TECH = 'TECH'


class ReversalReason1Code(Enum):
    CUSC = 'CUSC'
    MALF = 'MALF'
    MERC = 'MERC'
    UNAB = 'UNAB'


class StoredValueTransactionType3Code(Enum):
    ACTV = 'ACTV'
    DUPL = 'DUPL'
    LOAD = 'LOAD'
    RESV = 'RESV'
    REVS = 'REVS'
    ULOA = 'ULOA'
    CLOS = 'CLOS'
    DCTV = 'DCTV'
    OPEN = 'OPEN'
    BALC = 'BALC'


class LoyaltyTransactionType1Code(Enum):
    AWRD = 'AWRD'
    AWRR = 'AWRR'
    REBR = 'REBR'
    REBA = 'REBA'
    REDE = 'REDE'
    REDR = 'REDR'


class TransactionAction1Code(Enum):
    STAR = 'STAR'
    STOP = 'STOP'


class CardPaymentServiceType13Code(Enum):
    CRDP = 'CRDP'
    CSHW = 'CSHW'
    CSHD = 'CSHD'
    IRES = 'IRES'
    DEFR = 'DEFR'
    URES = 'URES'
    PRES = 'PRES'
    RECP = 'RECP'
    INSP = 'INSP'
    INSI = 'INSI'
    RFND = 'RFND'
    VCAU = 'VCAU'


class NetworkParameters9(BaseModel):
    NetworkType: NetworkType1Code
    AddressValue: str


class NetworkParameters7(BaseModel):
    Address: List[NetworkParameters9] = Field(..., min_items=1)
    UserName: Optional[str] = None
    AccessCode: Optional[List[int]] = None
    ServerCertificate: Optional[List[List[int]]] = Field(None, min_items=0)
    ServerCertificateIdentifier: Optional[List[List[int]]] = Field(None, min_items=0)
    ClientCertificate: Optional[List[List[int]]] = Field(None, min_items=0)
    SecurityProfile: Optional[str] = None


class GenericIdentification177(BaseModel):
    Identification: str
    Type: Optional[PartyType33Code] = None
    Issuer: Optional[PartyType33Code] = None
    Country: Optional[str] = None
    ShortName: Optional[str] = None
    RemoteAccess: Optional[NetworkParameters7] = None
    Geolocation: Optional[Geolocation1] = None


class Traceability8(BaseModel):
    RelayIdentification: GenericIdentification177
    ProtocolName: Optional[str] = None
    ProtocolVersion: Optional[str] = None
    TraceDateTimeIn: datetime
    TraceDateTimeOut: datetime


class Header41(BaseModel):
    MessageFunction: RetailerMessage1Code
    ProtocolVersion: str
    ExchangeIdentification: str
    CreationDateTime: datetime
    InitiatingParty: GenericIdentification177
    RecipientParty: Optional[GenericIdentification177] = None
    Traceability: Optional[List[Traceability8]] = Field(None, min_items=0)


class Acquirer10(BaseModel):
    Identification: Optional[GenericIdentification177] = None
    ParametersVersion: Optional[str] = None


class GenericIdentification32(BaseModel):
    Identification: str
    Type: Optional[PartyType3Code] = None
    Issuer: Optional[PartyType4Code] = None
    ShortName: Optional[str] = None


class PostalAddress22(BaseModel):
    AddressType: Optional[AddressType2Code] = None
    Department: Optional[str] = None
    SubDepartment: Optional[str] = None
    AddressLine: Optional[List[str]] = Field(None, max_items=2, min_items=0)
    StreetName: Optional[str] = None
    BuildingNumber: Optional[str] = None
    PostCode: Optional[str] = None
    TownName: Optional[str] = None
    CountrySubDivision: Optional[List[str]] = Field(None, max_items=2, min_items=0)
    CountryCode: Optional[str] = None


class CommunicationAddress9(BaseModel):
    PostalAddress: Optional[PostalAddress22] = None
    Email: Optional[str] = None
    URLAddress: Optional[str] = None
    Phone: Optional[str] = None
    CustomerService: Optional[str] = None
    AdditionalContactInformation: Optional[str] = None


class Organisation41(BaseModel):
    Identification: Optional[GenericIdentification32] = None
    CommonName: Optional[str] = None
    LocationCategory: Optional[LocationCategory4Code] = None
    LocationAndContact: Optional[CommunicationAddress9] = None
    SchemeData: Optional[str] = None


class DisplayCapabilities4(BaseModel):
    Destination: List[UserInterface4Code] = Field(..., min_items=1)
    AvailableFormat: Optional[List[OutputFormat1Code]] = Field(None, min_items=0)
    NumberOfLines: Optional[float] = None
    LineWidth: Optional[float] = None
    AvailableLanguage: Optional[List[str]] = Field(None, min_items=0)


class PointOfInteractionCapabilities9(BaseModel):
    CardReadingCapabilities: Optional[List[CardDataReading8Code]] = Field(
        None, min_items=0
    )
    CardholderVerificationCapabilities: Optional[
        List[CardholderVerificationCapability4Code]
    ] = Field(None, min_items=0)
    PINLengthCapabilities: Optional[float] = None
    ApprovalCodeLength: Optional[float] = None
    MaxScriptLength: Optional[float] = None
    CardCaptureCapable: Optional[bool] = None
    OnLineCapabilities: Optional[OnLineCapability1Code] = None
    MessageCapabilities: Optional[List[DisplayCapabilities4]] = Field(None, min_items=0)


class PointOfInteractionComponentStatus3(BaseModel):
    VersionNumber: Optional[str] = None
    Status: Optional[POIComponentStatus1Code] = None
    ExpiryDate: Optional[date] = None


class MemoryCharacteristics1(BaseModel):
    Identification: str
    TotalSize: float
    FreeSize: float
    Unit: MemoryUnit1Code


class PhysicalInterfaceParameter1(BaseModel):
    InterfaceName: str
    InterfaceType: Optional[POICommunicationType2Code] = None
    UserName: Optional[str] = None
    AccessCode: Optional[List[int]] = None
    SecurityProfile: Optional[str] = None
    AdditionalParameters: Optional[List[int]] = None


class CommunicationCharacteristics5(BaseModel):
    CommunicationType: POICommunicationType2Code
    RemoteParty: List[PartyType7Code] = Field(..., min_items=1)
    Active: bool
    Parameters: Optional[NetworkParameters7] = None
    PhysicalInterface: Optional[PhysicalInterfaceParameter1] = None


class RelativeDistinguishedName1(BaseModel):
    AttributeType: AttributeType1Code
    AttributeValue: str


class CertificateIssuer1(BaseModel):
    RelativeDistinguishedName: List[RelativeDistinguishedName1] = Field(
        ..., min_items=1
    )


class IssuerAndSerialNumber2(BaseModel):
    Issuer: CertificateIssuer1
    SerialNumber: List[int]


class Recipient13Choice(BaseModel):
    IssuerAndSerialNumber: IssuerAndSerialNumber2
    SubjectKeyIdentifier: List[int]


class Parameter18(BaseModel):
    DigestAlgorithm: Optional[Algorithm26Code] = None


class AlgorithmIdentification34(BaseModel):
    Algorithm: Algorithm8Code
    Parameter: Optional[Parameter18] = None


class Parameter17(BaseModel):
    EncryptionFormat: Optional[EncryptionFormat2Code] = None
    DigestAlgorithm: Optional[Algorithm26Code] = None
    MaskGeneratorAlgorithm: Optional[AlgorithmIdentification34] = None


class AlgorithmIdentification35(BaseModel):
    Algorithm: Algorithm7Code
    Parameter: Optional[Parameter17] = None


class KeyTransport10(BaseModel):
    Version: Optional[float] = None
    RecipientIdentification: Recipient13Choice
    KeyEncryptionAlgorithm: AlgorithmIdentification35
    EncryptedKey: List[int]


class Parameter12(BaseModel):
    EncryptionFormat: Optional[EncryptionFormat2Code] = None
    InitialisationVector: Optional[List[int]] = None
    BytePadding: Optional[BytePadding1Code] = None


class AlgorithmIdentification32(BaseModel):
    Algorithm: Algorithm28Code
    Parameter: Optional[Parameter12] = None


class KEK9(BaseModel):
    Version: Optional[float] = None
    KEKIdentification: KEKIdentifier7
    KeyEncryptionAlgorithm: AlgorithmIdentification32
    EncryptedKey: Optional[List[int]] = None


class Recipient15Choice(BaseModel):
    KeyTransport: KeyTransport10
    KEK: KEK9
    KeyIdentifier: KEKIdentifier7


class EncryptedContent7(BaseModel):
    ContentType: ContentType2Code
    ContentEncryptionAlgorithm: Optional[AlgorithmIdentification32] = None
    EncryptedData: List[int]


class EnvelopedData11(BaseModel):
    Version: Optional[float] = None
    OriginatorInformation: Optional[OriginatorInformation1] = None
    Recipient: List[Recipient15Choice] = Field(..., min_items=1)
    EncryptedContent: Optional[EncryptedContent7] = None


class Parameter7(BaseModel):
    InitialisationVector: Optional[List[int]] = None
    BytePadding: Optional[BytePadding1Code] = None


class AlgorithmIdentification31(BaseModel):
    Algorithm: Algorithm27Code
    Parameter: Optional[Parameter7] = None


class EncapsulatedContent3(BaseModel):
    ContentType: ContentType2Code
    Content: Optional[List[int]] = None


class AuthenticatedData10(BaseModel):
    Version: Optional[float] = None
    Recipient: List[Recipient15Choice] = Field(..., min_items=1)
    MACAlgorithm: AlgorithmIdentification31
    EncapsulatedContent: EncapsulatedContent3
    MAC: List[int]


class AlgorithmIdentification36(BaseModel):
    Algorithm: Algorithm26Code


class Parameter16(BaseModel):
    DigestAlgorithm: Optional[Algorithm26Code] = None
    MaskGeneratorAlgorithm: Optional[AlgorithmIdentification34] = None
    SaltLength: Optional[float] = None
    TrailerField: Optional[float] = None
    OIDCurveName: Optional[str] = None


class AlgorithmIdentification33(BaseModel):
    Algorithm: Algorithm29Code
    Parameter: Optional[Parameter16] = None


class Signer8(BaseModel):
    Version: Optional[float] = None
    SignerIdentification: Optional[Recipient13Choice] = None
    DigestAlgorithm: AlgorithmIdentification36
    SignedAttributes: Optional[List[GenericInformation1]] = Field(None, min_items=0)
    SignatureAlgorithm: AlgorithmIdentification33
    Signature: List[int]


class SignedData9(BaseModel):
    Version: Optional[float] = None
    DigestAlgorithm: Optional[List[AlgorithmIdentification36]] = Field(
        None, min_items=0
    )
    EncapsulatedContent: Optional[EncapsulatedContent3] = None
    Certificate: Optional[List[List[int]]] = Field(None, min_items=0)
    Signer: Optional[List[Signer8]] = Field(None, min_items=0)


class DigestedData6(BaseModel):
    Version: Optional[float] = None
    DigestAlgorithm: AlgorithmIdentification36
    EncapsulatedContent: EncapsulatedContent3
    Digest: List[int]


class ContentInformationType39(BaseModel):
    ContentType: ContentType2Code
    EnvelopedData: Optional[EnvelopedData11] = None
    AuthenticatedData: Optional[AuthenticatedData10] = None
    SignedData: Optional[SignedData9] = None
    DigestedData: Optional[DigestedData6] = None


class GenericIdentification186(BaseModel):
    Identification: str
    Type: PartyType7Code


class CryptographicKey18(BaseModel):
    Identification: str
    AdditionalIdentification: Optional[List[int]] = None
    Name: Optional[str] = None
    SecurityProfile: Optional[str] = None
    ItemNumber: Optional[str] = None
    Version: str
    Type: Optional[CryptographicKeyType3Code] = None
    Function: Optional[List[KeyUsage1Code]] = Field(None, min_items=0)
    ActivationDate: Optional[datetime] = None
    DeactivationDate: Optional[datetime] = None
    KeyValue: Optional[ContentInformationType39] = None
    ComponentWithAuthorisedAccess: Optional[List[GenericIdentification186]] = Field(
        None, min_items=0
    )
    ProtectedComponentWithAuthorisedAccess: Optional[List[ContentInformationType39]] = (
        Field(None, min_items=0)
    )
    KeyCheckValue: Optional[List[int]] = None
    AdditionalManagementInformation: Optional[List[GenericInformation1]] = Field(
        None, min_items=0
    )


class PointOfInteractionComponentCharacteristics10(BaseModel):
    Memory: Optional[List[MemoryCharacteristics1]] = Field(None, min_items=0)
    Communication: Optional[List[CommunicationCharacteristics5]] = Field(
        None, min_items=0
    )
    SecurityAccessModules: Optional[float] = None
    SubscriberIdentityModules: Optional[float] = None
    SecurityElement: Optional[List[CryptographicKey18]] = Field(None, min_items=0)


class PointOfInteractionComponentAssessment1(BaseModel):
    Type: POIComponentAssessment1Code
    Assigner: List[str] = Field(..., min_items=1)
    DeliveryDate: Optional[datetime] = None
    ExpirationDate: Optional[datetime] = None
    Number: str


class GenericIdentification176(BaseModel):
    Identification: str
    Type: Optional[PartyType33Code] = None
    Issuer: Optional[PartyType33Code] = None
    Country: Optional[str] = None
    ShortName: Optional[str] = None


class ExternallyDefinedData5(BaseModel):
    Identification: str
    Value: Optional[List[int]] = None
    ProtectedValue: Optional[ContentInformationType39] = None
    Type: Optional[str] = None


class PackageType5(BaseModel):
    PackageIdentification: Optional[GenericIdentification176] = None
    PackageLength: Optional[float] = None
    OffsetStart: Optional[float] = None
    OffsetEnd: Optional[float] = None
    PackageBlock: Optional[List[ExternallyDefinedData5]] = Field(None, min_items=0)


class PointOfInteractionComponent15(BaseModel):
    Type: POIComponentType6Code
    SubTypeInformation: Optional[str] = None
    Identification: PointOfInteractionComponentIdentification2
    Status: Optional[PointOfInteractionComponentStatus3] = None
    StandardCompliance: Optional[List[GenericIdentification48]] = Field(
        None, min_items=0
    )
    Characteristics: Optional[PointOfInteractionComponentCharacteristics10] = None
    Assessment: Optional[List[PointOfInteractionComponentAssessment1]] = Field(
        None, min_items=0
    )
    Package: Optional[List[PackageType5]] = Field(None, min_items=0)


class PointOfInteraction14(BaseModel):
    Identification: GenericIdentification177
    SystemName: Optional[str] = None
    GroupIdentification: Optional[str] = None
    Capabilities: Optional[PointOfInteractionCapabilities9] = None
    TimeZone: Optional[str] = None
    TerminalIntegration: Optional[LocationCategory3Code] = None
    Component: Optional[List[PointOfInteractionComponent15]] = Field(None, min_items=0)


class ContentInformationType40(BaseModel):
    ContentType: ContentType2Code
    EnvelopedData: EnvelopedData11


class PaymentCard35(BaseModel):
    ProtectedCardData: Optional[ContentInformationType40] = None
    PrivateCardData: Optional[List[int]] = None
    PlainCardData: Optional[PlainCardData22] = None
    PaymentAccountReference: Optional[str] = None
    MaskedPAN: Optional[str] = None
    IssuerBIN: Optional[str] = None
    CardCountryCode: Optional[str] = None
    CardCurrencyCode: Optional[str] = None
    CardProductProfile: Optional[str] = None
    CardBrand: Optional[str] = None
    CardProductType: Optional[CardProductType1Code] = None
    CardProductSubType: Optional[str] = None
    InternationalCard: Optional[bool] = None
    AllowedProduct: Optional[List[str]] = Field(None, min_items=0)
    ServiceOption: Optional[str] = None
    AdditionalCardData: Optional[str] = None


class TrackData2(BaseModel):
    TrackNumber: Optional[float] = None
    TrackFormat: Optional[TrackFormat1Code] = None
    TrackValue: str


class Check1(BaseModel):
    BankIdentification: Optional[str] = None
    AccountNumber: Optional[str] = None
    CheckNumber: Optional[str] = None
    CheckCardNumber: Optional[str] = None
    CheckTrackData2: Optional[TrackData2] = None
    CheckType: Optional[CheckType1Code] = None
    Country: Optional[str] = None


class StoredValueAccount2(BaseModel):
    AccountType: Optional[StoredValueAccountType1Code] = None
    IdentificationType: Optional[CardIdentificationType1Code] = None
    Identification: Optional[str] = None
    Brand: Optional[str] = None
    Provider: Optional[str] = None
    OwnerName: Optional[str] = None
    ExpiryDate: Optional[str] = None
    EntryMode: Optional[CardDataReading8Code] = None
    Currency: Optional[str] = None
    Balance: Optional[float] = None


class LoyaltyAccount3(BaseModel):
    LoyaltyIdentification: str
    EntryMode: Optional[CardDataReading8Code] = None
    IdentificationType: Optional[CardIdentificationType1Code] = None
    Brand: Optional[str] = None
    Provider: Optional[str] = None
    OwnerName: Optional[str] = None
    Unit: Optional[AmountUnit1Code] = None
    Currency: Optional[str] = None
    Balance: Optional[float] = None


class PlainCardData17(BaseModel):
    PAN: Optional[str] = None
    Track1: Optional[str] = None
    Track2: Optional[str] = None
    Track3: Optional[str] = None
    AdditionalCardData: Optional[List[str]] = Field(None, min_items=0)
    EntryMode: Optional[CardDataReading5Code] = None


class Vehicle2(BaseModel):
    Type: Optional[str] = None
    EntryMode: Optional[CardDataReading5Code] = None
    Data: str


class Vehicle1(BaseModel):
    VehicleNumber: Optional[str] = None
    TrailerNumber: Optional[str] = None
    VehicleTag: Optional[str] = None
    VehicleTagEntryMode: Optional[CardDataReading5Code] = None
    UnitNumber: Optional[str] = None
    ReplacementCar: Optional[bool] = None
    Odometer: Optional[float] = None
    Hubometer: Optional[float] = None
    TrailerHours: Optional[str] = None
    ReferHours: Optional[str] = None
    MaintenanceIdentification: Optional[str] = None
    DriverOrVehicleCard: Optional[PlainCardData17] = None
    AdditionalVehicleData: Optional[List[Vehicle2]] = Field(None, min_items=0)


class OnLinePIN11(BaseModel):
    EncryptedPINBlock: ContentInformationType40
    PINFormat: PINFormat3Code
    AdditionalInput: Optional[str] = None


class CardholderAuthentication17(BaseModel):
    AuthenticationMethod: Optional[AuthenticationMethod8Code] = None
    AuthenticationExemption: Optional[Exemption1Code] = None
    AuthenticationValue: Optional[List[int]] = None
    ProtectedAuthenticationValue: Optional[ContentInformationType40] = None
    CardholderOnLinePIN: Optional[OnLinePIN11] = None
    CardholderIdentification: Optional[PersonIdentification15] = None
    AddressVerification: Optional[AddressVerification1] = None
    AuthenticationType: Optional[str] = None
    AuthenticationLevel: Optional[str] = None
    AuthenticationResult: Optional[AuthenticationResult1Code] = None
    AuthenticationAdditionalInformation: Optional[ExternallyDefinedData5] = None


class TransactionVerificationResult4(BaseModel):
    Method: AuthenticationMethod6Code
    VerificationEntity: Optional[AuthenticationEntity2Code] = None
    Result: Optional[Verification1Code] = None
    AdditionalResult: Optional[str] = None


class MobileData6(BaseModel):
    MobileCountryCode: Optional[str] = None
    MobileNetworkCode: Optional[str] = None
    MobileMaskedMSISDN: Optional[str] = None
    Geolocation: Optional[Geolocation1] = None
    SensitiveMobileData: Optional[SensitiveMobileData1] = None
    ProtectedMobileData: Optional[ContentInformationType40] = None


class Cardholder21(BaseModel):
    Identification: Optional[PersonIdentification15] = None
    Name: Optional[str] = None
    Language: Optional[str] = None
    BillingAddress: Optional[PostalAddress22] = None
    ShippingAddress: Optional[PostalAddress22] = None
    TripNumber: Optional[str] = None
    Vehicle: Optional[Vehicle1] = None
    Authentication: Optional[List[CardholderAuthentication17]] = Field(
        None, min_items=0
    )
    TransactionVerificationResult: Optional[List[TransactionVerificationResult4]] = (
        Field(None, min_items=0)
    )
    PersonalData: Optional[str] = None
    MobileData: Optional[List[MobileData6]] = Field(None, min_items=0)


class RetailerSaleEnvironment2(BaseModel):
    SaleCapabilities: Optional[List[SaleCapabilities1Code]] = Field(None, min_items=0)
    Currency: Optional[str] = None
    MinimumAmountToDeliver: Optional[float] = None
    MaximumCashBackAmount: Optional[float] = None
    MinimumSplitAmount: Optional[float] = None
    DebitPreferredFlag: Optional[bool] = None
    LoyaltyHandling: Optional[LoyaltyHandling1Code] = None


class CardPaymentEnvironment80(BaseModel):
    Acquirer: Optional[Acquirer10] = None
    ServiceProvider: Optional[Acquirer10] = None
    Merchant: Optional[Organisation41] = None
    POI: Optional[PointOfInteraction14] = None
    Card: Optional[PaymentCard35] = None
    Check: Optional[Check1] = None
    StoredValueAccount: Optional[List[StoredValueAccount2]] = Field(None, min_items=0)
    LoyaltyAccount: Optional[List[LoyaltyAccount3]] = Field(None, min_items=0)
    CustomerDevice: Optional[CustomerDevice3] = None
    Wallet: Optional[CustomerDevice3] = None
    PaymentToken: Optional[Token1] = None
    MerchantToken: Optional[MerchantToken2] = None
    Cardholder: Optional[Cardholder21] = None
    ProtectedCardholderData: Optional[ContentInformationType40] = None
    SaleEnvironment: Optional[RetailerSaleEnvironment2] = None


class PaymentContext29(BaseModel):
    CardPresent: Optional[bool] = None
    CardholderPresent: Optional[bool] = None
    OnLineContext: Optional[bool] = None
    AttendanceContext: Optional[AttendanceContext1Code] = None
    TransactionEnvironment: Optional[TransactionEnvironment1Code] = None
    TransactionChannel: Optional[TransactionChannel5Code] = None
    BusinessArea: Optional[BusinessArea2Code] = None
    AttendantMessageCapable: Optional[bool] = None
    AttendantLanguage: Optional[str] = None
    CardDataEntryMode: Optional[CardDataReading8Code] = None
    FallbackIndicator: Optional[CardFallback1Code] = None
    SupportedOption: Optional[List[SupportedPaymentOption2Code]] = Field(
        None, min_items=0
    )


class SaleContext4(BaseModel):
    SaleIdentification: Optional[str] = None
    SaleReferenceNumber: Optional[str] = None
    SaleReconciliationIdentification: Optional[str] = None
    CashierIdentification: Optional[str] = None
    CashierLanguage: Optional[List[str]] = Field(None, min_items=0)
    ShiftNumber: Optional[str] = None
    CustomerOrderRequestFlag: Optional[bool] = None
    PurchaseOrderNumber: Optional[str] = None
    InvoiceNumber: Optional[str] = None
    DeliveryNoteNumber: Optional[str] = None
    SponsoredMerchant: Optional[List[Organisation26]] = Field(None, min_items=0)
    SplitPayment: Optional[bool] = None
    RemainingAmount: Optional[float] = None
    ForceOnlineFlag: Optional[bool] = None
    ReuseCardDataFlag: Optional[bool] = None
    AllowedEntryMode: Optional[List[CardDataReading8Code]] = Field(None, min_items=0)
    SaleTokenScope: Optional[SaleTokenScope1Code] = None
    AdditionalSaleData: Optional[str] = None


class CardPaymentContext30(BaseModel):
    PaymentContext: Optional[PaymentContext29] = None
    SaleContext: Optional[SaleContext4] = None
    DirectDebitContext: Optional[CardDirectDebit2] = None


class ContentInformationType38(BaseModel):
    ContentType: ContentType2Code
    AuthenticatedData: Optional[AuthenticatedData10] = None
    SignedData: Optional[SignedData9] = None


class OutputBarcode2(BaseModel):
    BarcodeType: BarcodeType1Code
    BarcodeValue: Optional[str] = None
    QRCodeBinaryValue: Optional[List[int]] = None
    QRCodeVersion: Optional[str] = None
    QRCodeEncodingMode: Optional[QRCodeEncodingMode1Code] = None
    QRCodeErrorCorrection: Optional[QRCodeErrorCorrection1Code] = None


class ActionMessage11(BaseModel):
    MessageDestination: UserInterface4Code
    InformationQualifier: Optional[InformationQualify1Code] = None
    Format: Optional[OutputFormat3Code] = None
    MessageContent: Optional[str] = None
    MessageContentSignature: Optional[ContentInformationType38] = None
    OutputBarcode: Optional[OutputBarcode2] = None
    ResponseRequiredFlag: Optional[bool] = None
    MinimumDisplayTime: Optional[float] = None


class CurrencyConversion29(BaseModel):
    CurrencyConversionIdentification: Optional[str] = None
    TargetCurrency: CurrencyDetails3
    ResultingAmount: Optional[float] = None
    ExchangeRate: float
    InvertedExchangeRate: Optional[float] = None
    QuotationDate: Optional[datetime] = None
    ValidFrom: Optional[datetime] = None
    ValidUntil: Optional[datetime] = None
    SourceCurrency: CurrencyDetails2
    ApplicableBinRange: Optional[List[BinRange1]] = Field(None, min_items=0)
    OriginalAmount: Optional[OriginalAmountDetails1] = None
    CommissionDetails: Optional[List[Commission19]] = Field(None, min_items=0)
    MarkUpDetails: Optional[List[Commission18]] = Field(None, min_items=0)
    DeclarationDetails: Optional[List[ActionMessage11]] = Field(None, min_items=0)


class CurrencyConversion31(BaseModel):
    Result: CurrencyConversionResponse3Code
    ResultReason: Optional[str] = None
    ConversionDetails: Optional[List[CurrencyConversion29]] = Field(None, min_items=0)


class CardPaymentTransaction131(BaseModel):
    SaleReferenceIdentification: Optional[str] = None
    TransactionIdentification: TransactionIdentifier1
    POIIdentification: GenericIdentification32
    CurrencyConversion: Optional[CurrencyConversion31] = None


class CurrencyConversion30(BaseModel):
    AcceptedByCardholder: Optional[bool] = None
    Conversion: Optional[CurrencyConversion29] = None


class InstalmentAmountDetails1(BaseModel):
    Type: Optional[InstalmentAmountDetailsType1Code] = None
    OtherType: Optional[str] = None
    SubType: Optional[str] = None
    Amount: Optional[Amount5] = None
    Percentage: Optional[float] = None


class InterestRateDetails1(BaseModel):
    Type: Optional[InterestRate1Code] = None
    OtherType: Optional[str] = None
    Period: InstalmentPeriod1Code
    Rate: float


class GracePeriod1(BaseModel):
    Time: str
    UnitType: GracePeriodUnitType1Code
    OtherUnitType: Optional[str] = None


class Instalment5(BaseModel):
    InstalmentPlan: Optional[List[InstalmentPlan1Code]] = Field(None, min_items=0)
    PlanIdentification: Optional[str] = None
    PlanOwner: Optional[PlanOwner1Code] = None
    SequenceNumber: Optional[float] = None
    PeriodUnit: Optional[Frequency3Code] = None
    InstalmentPeriod: Optional[float] = None
    TotalNumberOfPayments: Optional[float] = None
    FirstPaymentDate: Optional[date] = None
    TotalAmount: Optional[ActiveCurrencyAndAmount] = None
    FirstAmount: Optional[float] = None
    SubsequentAmount: Optional[float] = None
    LastAmount: Optional[float] = None
    Charges: Optional[float] = None
    DetailedCharges: Optional[List[InstalmentAmountDetails1]] = Field(None, min_items=0)
    InterestRate: Optional[List[InterestRateDetails1]] = Field(None, min_items=0)
    GracePeriod: Optional[List[GracePeriod1]] = Field(None, min_items=0)
    PlanNotice: Optional[List[ActionMessage11]] = Field(None, min_items=0)


class RecurringTransaction6(BaseModel):
    PlanIdentification: Optional[str] = None
    SequenceNumber: Optional[float] = None
    PeriodUnit: Optional[Frequency3Code] = None
    GracePeriod: Optional[List[GracePeriod1]] = Field(None, min_items=0)
    PlanNotice: Optional[List[ActionMessage11]] = Field(None, min_items=0)


class DetailedAmount21(BaseModel):
    Amount: float
    DateTime: datetime
    CardDataEntryMode: Optional[CardDataReading8Code] = None
    ICCRelatedData: Optional[List[int]] = None
    Label: Optional[str] = None


class AggregationTransaction3(BaseModel):
    FirstPaymentDateTime: Optional[datetime] = None
    LastPaymentDateTime: Optional[datetime] = None
    NumberOfPayments: Optional[float] = None
    IndividualPayment: Optional[List[DetailedAmount21]] = Field(None, min_items=0)


class Product6(BaseModel):
    ItemIdentification: Optional[str] = None
    ProductCode: str
    AdditionalProductCode: Optional[str] = None
    UnitOfMeasure: Optional[UnitOfMeasure6Code] = None
    ProductQuantity: Optional[float] = None
    UnitPrice: Optional[float] = None
    UnitPriceSign: Optional[bool] = None
    ProductAmount: float
    ProductAmountSign: Optional[bool] = None
    ValueAddedTax: Optional[float] = None
    TaxType: Optional[str] = None
    ProductDescription: Optional[str] = None
    DeliveryLocation: Optional[str] = None
    DeliveryService: Optional[AttendanceContext2Code] = None
    SaleChannel: Optional[str] = None
    AdditionalProductDescription: Optional[str] = None


class CardPaymentTransactionDetails53(BaseModel):
    Currency: Optional[str] = None
    TotalAmount: float
    CumulativeAmount: Optional[float] = None
    AmountQualifier: Optional[TypeOfAmount8Code] = None
    DetailedAmount: Optional[DetailedAmount15] = None
    RequestedAmount: Optional[float] = None
    AuthorisedAmount: Optional[float] = None
    InvoiceAmount: Optional[float] = None
    ValidityDate: Optional[date] = None
    OnLineReason: Optional[List[OnLineReason2Code]] = Field(None, min_items=0)
    UnattendedLevelCategory: Optional[str] = None
    AccountType: Optional[CardAccountType3Code] = None
    CurrencyConversionResult: Optional[CurrencyConversion30] = None
    Instalment: Optional[List[Instalment5]] = Field(None, min_items=0)
    Recurring: Optional[RecurringTransaction6] = None
    AggregationTransaction: Optional[AggregationTransaction3] = None
    ProductCodeSetIdentification: Optional[str] = None
    SaleItem: Optional[List[Product6]] = Field(None, min_items=0)
    DeliveryLocation: Optional[str] = None
    ReSubmissionCounter: Optional[float] = None
    CompletionSequenceNumber: Optional[float] = None
    CompletionSequenceCounter: Optional[float] = None
    TotalAuthorisedAmount: Optional[float] = None
    AdditionalInformation: Optional[List[ExternallyDefinedData5]] = Field(
        None, min_items=0
    )
    ICCRelatedData: Optional[List[int]] = None


class GenericIdentification90(BaseModel):
    Identification: Optional[str] = None
    Type: PartyType14Code
    Issuer: Optional[PartyType4Code] = None
    Country: Optional[str] = None
    ShortName: Optional[str] = None


class ResponseType10(BaseModel):
    Response: Response9Code
    ResponseReason: Optional[str] = None
    AdditionalResponseInformation: Optional[str] = None


class AuthorisationResult18(BaseModel):
    AuthorisationEntity: Optional[GenericIdentification90] = None
    ResponseToAuthorisation: ResponseType10
    AuthorisationCode: Optional[str] = None


class CustomerOrder1(BaseModel):
    CustomerOrderIdentification: str
    SaleReferenceIdentification: str
    OpenOrderState: Optional[bool] = None
    StartDate: datetime
    EndDate: Optional[datetime] = None
    Unit: Optional[AmountUnit1Code] = None
    ForecastedAmount: float
    CurrentAmount: Optional[float] = None
    Currency: Optional[str] = None
    AccessedBy: Optional[str] = None
    AdditionalInformation: Optional[str] = None


class CardPaymentTransaction136(BaseModel):
    TransactionCapture: Optional[bool] = None
    TransactionType: CardPaymentServiceType5Code
    AdditionalService: Optional[List[CardPaymentServiceType9Code]] = Field(
        None, min_items=0
    )
    ServiceAttribute: Optional[CardPaymentServiceType14Code] = None
    LastTransactionFlag: Optional[bool] = None
    MerchantCategoryCode: Optional[str] = None
    SaleReferenceIdentification: Optional[str] = None
    TransactionIdentification: TransactionIdentifier1
    OriginalTransaction: Optional[CardPaymentTransaction131] = None
    ReconciliationIdentification: Optional[str] = None
    IssuerReferenceData: Optional[str] = None
    IssuerCITIdentification: Optional[str] = None
    MerchantCITIdentification: Optional[str] = None
    TransactionDetails: CardPaymentTransactionDetails53
    AuthorisationResult: Optional[AuthorisationResult18] = None
    MerchantReferenceData: Optional[str] = None
    CustomerOrder: Optional[CustomerOrder1] = None
    CustomerToken: Optional[CardPaymentToken5] = None
    CustomerConsent: Optional[bool] = None
    CardProgrammeProposed: Optional[List[str]] = Field(None, min_items=0)
    CardProgrammeApplied: Optional[str] = None
    SaleToPOIData: Optional[str] = None
    SaleToAcquirerData: Optional[str] = None
    SaleToIssuerData: Optional[str] = None
    AdditionalTransactionData: Optional[List[str]] = Field(None, min_items=0)


class LoyaltyAmount1(BaseModel):
    Unit: Optional[AmountUnit1Code] = None
    Currency: Optional[str] = None
    Amount: float


class LoyaltyRequestData3(BaseModel):
    CustomerOrder: Optional[CustomerOrder1] = None
    Account: Optional[LoyaltyAccount3] = None
    Amount: Optional[LoyaltyAmount1] = None


class PaymentRequest6(BaseModel):
    PaymentTransaction: Optional[CardPaymentTransaction136] = None
    LoyaltyData: Optional[List[LoyaltyRequestData3]] = Field(None, min_items=0)


class ReversalRequest6(BaseModel):
    ReversalTransaction: Optional[CardPaymentTransaction136] = None
    LoyaltyData: Optional[List[LoyaltyRequestData3]] = Field(None, min_items=0)
    ReversalReason: ReversalReason1Code
    ReversedAmount: Optional[float] = None
    CustomerOrder: Optional[CustomerOrder1] = None


class PaymentAccountRequest1(BaseModel):
    AccountType: Optional[CardAccountType3Code] = None
    CustomerOrder: Optional[CustomerOrder1] = None
    AccountReference: Optional[str] = None


class LoyaltyAccountRequest3(BaseModel):
    CustomerOrder: Optional[CustomerOrder1] = None
    Account: Optional[LoyaltyAccount3] = None


class StoredValueData7(BaseModel):
    Provider: Optional[str] = None
    TransactionType: StoredValueTransactionType3Code
    AccountIdentification: Optional[StoredValueAccount2] = None
    OriginalPOITransaction: Optional[CardPaymentTransaction136] = None
    ProductCode: Optional[str] = None
    EANUPC: Optional[str] = None
    ItemAmount: Optional[float] = None
    Currency: Optional[str] = None
    HostTransactionIdentification: Optional[TransactionIdentifier1] = None


class StoredValueRequest7(BaseModel):
    SaleTransactionIdentification: Optional[TransactionIdentifier1] = None
    Data: List[StoredValueData7] = Field(..., min_items=1)


class BalanceInquiryRequest7(BaseModel):
    SaleTransactionIdentification: Optional[TransactionIdentifier1] = None
    PaymentAccountRequest: Optional[PaymentAccountRequest1] = None
    LoyaltyAccountRequest: Optional[LoyaltyAccountRequest3] = None
    StoredValueAccountRequest: Optional[StoredValueRequest7] = None


class LoyaltyTransaction6(BaseModel):
    SaleTransactionIdentification: Optional[TransactionIdentifier1] = None
    LoyaltyTransactionType: LoyaltyTransactionType1Code
    Currency: Optional[str] = None
    TotalAmount: Optional[float] = None
    OriginalPOITransaction: Optional[CardPaymentTransaction136] = None
    SaleItem: Optional[List[Product6]] = Field(None, min_items=0)


class LoyaltyRequest6(BaseModel):
    CustomerOrder: Optional[CustomerOrder1] = None
    Transaction: LoyaltyTransaction6
    Data: Optional[List[LoyaltyRequestData3]] = Field(None, min_items=0)


class TransactionToPerform6Choice(BaseModel):
    PaymentRequest: Optional[PaymentRequest6] = None
    LoyaltyRequest: Optional[LoyaltyRequest6] = None
    ReversalRequest: Optional[ReversalRequest6] = None


class BatchRequest6(BaseModel):
    SaleBatchIdentification: Optional[TransactionIdentifier1] = None
    RemoveAllFlag: Optional[bool] = None
    TransactionToPerform: Optional[List[TransactionToPerform6Choice]] = Field(
        None, min_items=0
    )


class EnableServiceRequest6(BaseModel):
    TransactionAction: TransactionAction1Code
    ServicesEnabled: Optional[RetailerService2Code] = None
    DisplayOutput: Optional[ActionMessage11] = None


class CardAcquisitionRequest3(BaseModel):
    SaleTransactionIdentification: Optional[TransactionIdentifier1] = None
    AllowedPaymentBrand: Optional[List[str]] = Field(None, min_items=0)
    AllowedLoyaltyBrand: Optional[List[str]] = Field(None, min_items=0)
    ForceCustomerSelectionFlag: Optional[bool] = None
    TotalAmount: Optional[float] = None
    PaymentType: Optional[CardPaymentServiceType13Code] = None
    CashBackFlag: Optional[bool] = None
    SaleToPOIData: Optional[str] = None
    SaleToAcquirerData: Optional[str] = None
    SaleToIssuerData: Optional[str] = None


class ServiceRequest7(BaseModel):
    Environment: CardPaymentEnvironment80
    Context: CardPaymentContext30
    ServiceContent: RetailerService2Code
    PaymentRequest: Optional[PaymentRequest6] = None
    ReversalRequest: Optional[ReversalRequest6] = None
    BalanceInquiryRequest: Optional[BalanceInquiryRequest7] = None
    LoyaltyRequest: Optional[LoyaltyRequest6] = None
    StoredValueRequest: Optional[StoredValueRequest7] = None
    BatchRequest: Optional[BatchRequest6] = None
    EnableServiceRequest: Optional[EnableServiceRequest6] = None
    CardAcquisitionRequest: Optional[CardAcquisitionRequest3] = None
    SupplementaryData: Optional[List[SupplementaryData1]] = Field(None, min_items=0)


class SaleToPOIServiceRequestV06(BaseModel):
    Header: Header41
    SvcReq: ServiceRequest7
    SctyTrlr: Optional[ContentInformationType38] = None


class Document(BaseModel):
    SaleToPOIServiceRequestV06: SaleToPOIServiceRequestV06


class Model(BaseModel):
    Document: Optional[Document] = None
