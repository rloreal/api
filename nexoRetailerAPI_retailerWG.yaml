openapi: 3.1.0
info:
  title: nexo retailer API
  version: "2025-01"
  # Please note that the OpenAPI files may be updated frequently due to technical errata 
  # and that the normative reference still is the Message Usage Guide document. 
  # Also note that starting from the version ‘nexo-retailer-api 1.3.6 2020-05-28’ the version number and contents of the OpenAPI file 
  # are related to the corresponding published and latest version of the Message Usage Guide plus errata 
  # The date in the OpenAPI filename (format: yyyy-mm-dd) is reflecting the date of publication of the OpenAPI file.
  description: |
    API defining resources for interactions between POI and POS, using underlying nexo messages
    # Summary
    The **nexo retailer** *Protocol Version 8* offers a modern, open, harmonised and interoperable set of
    Application Programming Interfaces (APIs) as the safest and most efficient way to exchange data securely,
    between a Point Of sale System (POS) and Point Of Interaction (POI) System.
    The nexo retailer protocol reduces sale to payment terminal communication complexity and costs, 
    addresses the problem of multiple private standards, aligned with the goals of nexo association,
    enables point of sale system providers to use a single interface with multiple payment systems, 
    for multiple payment instruments, and payment methods, 
    with a clear delimitation between with the retail world and the payment world.

    The possible approaches are:
      * Multiple POS to Multiple POI 
      * One to One POS to POI
      * App 2 App when POS and POI are embedded in a single device

      Not every message defined in this API definition is necessary for all approaches. 
      Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional.
      Therefore for a particular implementation of a nexo compliant API it is only necessary to support 
      a certain subset of the methods defined in this API definition.

      **Please have a look at the nexo retailer message usage guide if you are not sure 
      which message has to be used for the approach you are going to use.**
    
    ## Some General Remarks Related to this version of the OpenAPI Specification:
    * **This API definition is based on the Message Usage Guide of the nexo retailer protocol.** 
      It is not a replacement in any sense.
      The main specification is always the nexo Message Usage Guide, with ISO20022 definitions of the protocol (MDR Part 1 and 2).
      It is highly recommended to read through the standards documentations in conjunction with this API definition. 
      Namely regarding :
        * The rules regarding dialogue initiation, termination and combination 
        * The rules and constraints applied to data fields, depending on the use case
        * The error management on Sale system and POI system sides
        * The security that can be applied to the protocol
    * **This API definition contains the messages for all different approaches defined in the Message Usage Guide.**

    * According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.1.md]
      
        "If in is "header" and the name field is "Accept", "Content-Type" or "Authorization", the parameter definition SHALL be ignored."
      
      The element "Accept" will not be defined in this file at any place.
      
      The elements "Content-Type" and "Authorization" are implicitly defined by the OpenApi tags "content" and "security".
      

    * **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional) 
      except they are mentioned in the Implementation Guidelines.**
      Therefore the implementer might add these in his own realisation of a nexo complient API in addition to the elements defined in this file.
  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/

  contact:
    name: nexo retailer Working group
    email: romain.loreal@lorealconsulting.com
    url: https://www.nexo-standards.org

externalDocs:
    description: |
      Full Documentation of nexo retailer protocol is provided by nexo standards :
      Messages Usage Guide, Architecture, Examples nexo standards specifications and documentation.
    url: https://www.nexo-standards.org


servers:
  - url : https://test.poisystem.com:8099
    description: Test server for API exchanges between merchant and payment system, secured with X509

security:
  ##################################################### 
  # REMARKS ON SECURITY IN THIS OPENAPI FILE
  # In this file only the basic security element to transport
  # the bearer token of an OAuth2 process, which has to 
  # be included in the HTTP header is described.
  #
  # WARNING:
  # If you want to use this file for a productive implementation, 
  # it is recommended to adjust the security schemes according to 
  # your system environments and security policies.
  #####################################################
  - {}
  - BearerAuthOAuth: []

tags:
  - name: "financial services"
    description: "financial services such as payment"
  - name: "admin services"
    description: "admin services such as login"
  - name: "device services"
    description: "device services such as display"
  - name: "system services"
    description: "system services such as abort"



components:
  schemas:
    SaleToPOIServiceRequestV06: 
      $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
    SaleToPOIServiceResponseV06: 
      $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
    RetailPayment:
      $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
    Problem:
      $ref: "https://devlc.lorealconsulting.com:8099/schemas/problem.schema.json#/$defs/Problem"

  headers:
  #####################################################
  # Reusable Response Header Elements
  #####################################################
  

    Location:
      description: |
        Location of the created resource.
      schema:
        type: string
        format: url
      required: false
      
    Idempotency-Key:
      description: |
          The idempotency key is a free identifier created by the client to
          identify a request. It is used by the service to identify subsequent
          retries of the same request and ensure idempotent behavior by sending
          the same response without executing the request a second time.

          Clients should be careful as any subsequent requests with the same key
          may return the same response without further check. Therefore, it is
          recommended to use an UUID version 4 (random) or any other random
          string with enough entropy to avoid collisions.

          Idempotency keys expire after 24 hours. Clients are responsible to stay
          within this limits, if they require idempotent behavior.
      schema:
        type: string
        format: uuid
      required: false
      examples:
        idempotency-key-example:
          value:  "7da7a728-f910-11e6-942a-68f728c1ba70"


  responses:
    #####################################################
    # Negative Responses
    #####################################################

    BAD_REQUEST_400:
      description: Bad Request
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem" 

        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem" 

    UNAUTHORIZED_401:
      description: Unauthorized
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Problem" 

    FORBIDDEN_403:
      description: Forbidden
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Problem" 


    NOT_FOUND_404:
      description: Not found
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Problem" 


    METHOD_NOT_ALLOWED_405:
      description: Method Not Allowed
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Problem" 

        application/problem+json:
          schema:
             $ref: "#/components/schemas/Problem" 

    NOT_ACCEPTABLE_406:
      description: Not Acceptable
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      #No Response body because there are no valid message codes in case of HTTP code 406

    REQUEST_TIMEOUT_408: 
      description: Request Timeout
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      #No Response body because there are no valid message codes in case of HTTP code 408

    CONFLICT_409: 
      description: Conflict
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      content:
        application/json:
          schema:
             $ref: "#/components/schemas/Problem" 
          
        application/problem+json:
          schema:
             $ref: "#/components/schemas/Problem" 


    UNSUPPORTED_MEDIA_TYPE_415:
      description: Unsupported Media Type
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      #No Response body because there are no valid message codes in case of HTTP code 415 

    TOO_MANY_REQUESTS_429:
      description: Too Many Requests
      
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      
      #No Response body because there are no valid message codes in case of HTTP code 429 

    INTERNAL_SERVER_ERROR_500:
      description: Internal Server Error
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      #No Response body because there are no valid message codes in case of HTTP code 500 

    SERVICE_UNAVAILABLE_503:
      description: Service Unavailable
      headers:
        Location:
          $ref: "#/components/headers/Location"
        X-Request-ID:
          $ref: "#/components/headers/Idempotency-Key"
      #No Response body because there are no valid message codes in case of HTTP code 503

  
paths:
  ##################################################### 
  # FINANCIAL SERVICES
  #####################################################

  /financial:
    post:
      tags: 
        - "financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          $ref: "#/components/headers/Idempotency-Key"

        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: 
            traceparent-example:
              value: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: 
            tracestate-example:
              value: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: 
            origin-example:
              value: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
            examples:
              body-example:
                value:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /financial/{exchangeId}:
    get:
      tags: 
        - "financial services"
      summary : provides the result of a service previously requested
      description: |
        request a service, such as payment, to be done on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: serviceInformation
      parameters:
        - in: path
          required: true
          name: exchangeId 
          schema:
            type: string
            minlength: 1
            maxlength: 35
          description: | 
            exchangeId is the identifier of the resource representing a service dialog that has been initiated by a POST /service message.
            This operation allows to have the result of a service that has been processed asynchronously.
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      responses:
        '200':
          description: service dialogue representation with its current state
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
  
  /retailPayment:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /retailPayment/{exchangeId}:
    get:
      tags: 
        - "retail financial services"
      summary : provides the result of a service previously requested
      description: |
        request a service, such as payment, to be done on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: serviceInformation
      parameters:
        - in: path
          required: true
          name: exchangeId 
          schema:
            type: string
            minlength: 1
            maxlength: 35
          description: | 
            exchangeId is the identifier of the resource representing a service dialog that has been initiated by a POST /service message.
            This operation allows to have the result of a service that has been processed asynchronously.
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      responses:
        '200':
          description: service dialogue representation with its current state
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
  

  /reconciliation:
    post:
      tags: 
        - "financial services"
      summary : initiate a reconcialiation with the specified POI
      description: The SaleToPOIReconciliationRequest message is sent by a sale system to request for reconciliation between sale and POI systems.
      operationId: initiateReconciliation
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /balance:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /loyalty:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /reversal:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /storedValue:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /cardAcquisition:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /batch:
    post:
      tags: 
        - "retail financial services"
      summary : creates a service dialogue between a POI and a POS or enables a service
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /enable:
    post:
      tags: 
        - "retail financial services"
      summary : enables a service on the POI
      description: |
        request a service, such as payment, to be executed on the specified POI.
        Response can be immediate (HTTP 201) or postponed (HTTP 202) in which case Response will be delivered through a GET request
      operationId: createFinancialService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
        - in: header
          name: origin
          description: |
              hostname of the initiating party.
              Useful if POI want to send event notification to the POS.
          schema:
            type: string
          required: false
          examples: "myPOS.merchantname.com"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
                - $ref: "https://devlc.lorealconsulting.com:8099/schemas/desc_alt_casp.001.001.06.json#/$defs/RetailPayment"
                
              examples:
                - Hdr:
                    CreDtTm: '2020-05-04T18:13:51.0+01:00'
                    MsgFctn: SFSQ
                    PrtcolVrsn: '8.0'
                    XchgId: '642'
                    InitgPty: 
                      Id: SaleTermA
                      Tp: MERC
                    RcptPty:
                      Id: 'POITerm1'
                      Tp: OPOI
                  SvcReq:
                    Envt:
                    Cntxt:
                    SvcCntt: FSPQ
                    PmtReq:
                      PmtTx:
                        TxId:
                          TxDtTm: '2020-05-04T18:13:51.0+01:00'
                          TxRef: '579'
                        TxTp: CRDP
                        TxDtls:
                          Ccy: EUR
                          TtlAmt: '104.11'
      responses:
        '200':
          description :  financial service created - Use HTTP GET to get the state of the service
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
        '201':
          description: service request created - full resource document is provided
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.002.001.06.schema.json#/$defs/SaleToPOIServiceResponseV06"
        "202":
          description: service creation ongoing - Use GET with provided resource identifier provided for resource description
          headers:
            x-duration:
              schema:
                type: integer
              description : life duration of the resource
            Location:
              schema:
                type: string
                format: uuid
              description: ID of the dialogue created
              required: true
            origin:
              schema:
                type: string
              description: hostname of the recipient party
              required: false
              examples: "POI1234.myPSPname.net"
            content:
              application/json:
                schema:
                  $ref: "https://devlc.lorealconsulting.com:8099/schemas/accepted.yaml"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"


  /device:
    post:
      tags: 
        - "device services"
      summary : act on a device POI, POS or their attached devices such as printer, screen, card reader, input (secured)
      description: The SaleToPOIReconciliationRequest message is sent by a sale system to request for reconciliation between sale and POI systems.
      operationId: deviceService
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /display/{deviceId}:
    post:
      tags: 
        - "device services"
      summary : display something on a pos or poi
      description: The display message is used by the sale system or POI system to request a display on a device .
      operationId: print
      parameters:
        - in: path
          name: deviceId
          description: Identifier of the device that will display content, can be POSId or POId
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 36
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
            length: 55
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/display.yaml"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"


  /session:
    post:
      tags: 
        - "admin services"
      summary : session management on a POI such as login, logout, diagnosis
      description: used by a POS to login on a POI
      operationId: session
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

 
  /admin:
    post:
      tags: 
        - "admin services"
      summary : administrative action on a POI
      description: used by a POS to trigger some administrative action on a POI
      operationId: admin
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /report:
    post:
      tags: 
        - "admin services"
      summary : ask a report of a POI
      description: used by a POS to get reports (transactions, totals) of a POI
      operationId: report
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"


  /abort/{exchangeId}:
    patch:
      tags: 
        - "system services"
      summary : abort an action on a POI
      description: used by a POS to abort an ongoing action on a POI
      operationId: abort
      parameters:
        - in: path
          name: exchangeId
          required: true
          description: ExchangeIdentification is a Unique identification of an exchange occurrence.
          schema:
              type: string
              maxLength: 35
              minLength: 1
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /reject/{exchangeId}:
    post:
      tags: 
        - "system services"
      summary : message rejection by a POS
      description: used by a POS to reject a POI message
      operationId: reject
      parameters:
        - in: path
          name: exchangeId
          required: true
          description: | 
            this exchange Identification is the Unique identification of the rejected message.
            It is the original message exchangeId.
          schema:
              type: string
              maxLength: 35
              minLength: 1
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /status/{exchangeId}:
    post:
      tags: 
        - "system services"
      summary : message status 
      description: used by a POS to know the status of message sent to POI
      operationId: status
      parameters:
        - in: path
          name: exchangeId
          required: true
          description: | 
            this exchange Identification is the Unique identification 
            of the message for which the POS needs a status.
            It is the original message exchangeId.
          schema:
              type: string
              maxLength: 35
              minLength: 1
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"

  /eventNotification:
    post:
      tags: 
        - "system services"
      summary: event notification from a POI the a POS of an event
      description: used by a POI to notify POS of some events, such as parameters updated or lese upto implementors needs
      operationId: eventNotification
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
            format: uuid
          description: |
              The idempotency key is a free identifier created by the client to
              identify a request. It is used by the service to identify subsequent
              retries of the same request and ensure idempotent behavior by sending
              the same response without executing the request a second time.

              Clients should be careful as any subsequent requests with the same key
              may return the same response without further check. Therefore, it is
              recommended to use an UUID version 4 (random) or any other random
              string with enough entropy to avoid collisions.

              Idempotency keys expire after 24 hours. Clients are responsible to stay
              within this limits, if they require idempotent behavior.
          required: false
          examples: "7da7a728-f910-11e6-942a-68f728c1ba70"
        - in: header  
          name: traceparent
          description: |
              describes the position of the incoming request in its trace graph 
              in a portable, fixed-length format. 
              Its design focuses on fast parsing. 
              Every tracing tool MUST properly set traceparent even when it only relies 
              on vendor-specific information in tracestate.
              The traceparent HTTP header field identifies the incoming request in a tracing system. It has four fields:
              - version-format: 2 bytes, "00-" in ASCII
              - trace-id: 32 bytes, a unique identifier for the trace, represented as a 16-byte array, formatted as a 32-digit hexadecimal number
              - parent-id: 16 bytes, a unique identifier for the span, represented as an 8-byte array, formatted as a 16-digit hexadecimal number
              - trace-flags: An 8-bit field that controls tracing flags such as sampling, trace level, etc
                Example Value = 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01
                base16(version) = 00
                base16(trace-id) = 4bf92f3577b34da6a3ce929d0e0e4736
                base16(parent-id) = 00f067aa0ba902b7
                base16(trace-flags) = 01  // sampled
          schema:
            type: string
          required: false
          examples: "00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"
        - in: header
          name: tracestate
          description: |
              extends traceparent with vendor-specific data represented by a set of name/value pairs.
              Storing information in tracestate is optional.
          schema:
            type: string
          required: false
          examples: "congo=t61rcWkgMzE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://devlc.lorealconsulting.com:8099/schemas/casp.001.001.06.schema.json#/$defs/SaleToPOIServiceRequestV06"
      responses:
        "201":
          description: service request created
        "400":
          description: Invalid request
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "404":
          description: POI not found
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"
        "500":
          description: Unexpected error
          $ref: "https://devlc.lorealconsulting.com:8099/schemas/Problem.yaml"


