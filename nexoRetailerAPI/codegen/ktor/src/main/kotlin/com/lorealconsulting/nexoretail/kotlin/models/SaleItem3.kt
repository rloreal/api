/**
* nexo retailer API
* API defining resources for interactions between POI and POS, using underlying nexo messages # Summary The **nexo retailer** *Protocol Version 8* offers a modern, open, harmonised and interoperable set of Application Programming Interfaces (APIs) as the safest and most efficient way to exchange data securely, between a Point Of sale System (POS) and Point Of Interaction (POI) System. The nexo retailer protocol reduces sale to payment terminal communication complexity and costs,  addresses the problem of multiple private standards, aligned with the goals of nexo association, enables point of sale system providers to use a single interface with multiple payment systems,  for multiple payment instruments, and payment methods,  with a clear delimitation between with the retail world and the payment world.  The possible approaches are:   * Multiple POS to Multiple POI    * One to One POS to POI   * App 2 App when POS and POI are embedded in a single device    Not every message defined in this API definition is necessary for all approaches.    Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional.   Therefore for a particular implementation of a nexo compliant API it is only necessary to support    a certain subset of the methods defined in this API definition.    **Please have a look at the nexo retailer message usage guide if you are not sure    which message has to be used for the approach you are going to use.**  ## Some General Remarks Related to this version of the OpenAPI Specification: * **This API definition is based on the Message Usage Guide of the nexo retailer protocol.**    It is not a replacement in any sense.   The main specification is always the nexo Message Usage Guide, with ISO20022 definitions of the protocol (MDR Part 1 and 2).   It is highly recommended to read through the standards documentations in conjunction with this API definition.    Namely regarding :     * The rules regarding dialogue initiation, termination and combination      * The rules and constraints applied to data fields, depending on the use case     * The error management on Sale system and POI system sides     * The security that can be applied to the protocol * **This API definition contains the messages for all different approaches defined in the Message Usage Guide.**  * According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.1.md]        \"If in is \"header\"and the name field is \"Accept\", \"Content-Type\"or \"Authorization\", the parameter definition SHALL be ignored.\"      The element \"Accept\"will not be defined in this file at any place.      The elements \"Content-Type\"and \"Authorization\"are implicitly defined by the OpenApi tags \"content\"and \"security\".     * **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional)    except they are mentioned in the Implementation Guidelines.**   Therefore the implementer might add these in his own realisation of a nexo complient API in addition to the elements defined in this file. 
*
* The version of the OpenAPI document: 2025-01
* Contact: romain.loreal@lorealconsulting.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.lorealconsulting.nexoretail.kotlin.models

import com.lorealconsulting.nexoretail.kotlin.models.AdditionalProductCode1
import com.lorealconsulting.nexoretail.kotlin.models.AdditionalProductDescription1
import com.lorealconsulting.nexoretail.kotlin.models.DeliveryLocation2
import com.lorealconsulting.nexoretail.kotlin.models.ItemIdentification1
import com.lorealconsulting.nexoretail.kotlin.models.ProductAmount2
import com.lorealconsulting.nexoretail.kotlin.models.ProductCode3
import com.lorealconsulting.nexoretail.kotlin.models.ProductDescription1
import com.lorealconsulting.nexoretail.kotlin.models.SaleChannel1
import com.lorealconsulting.nexoretail.kotlin.models.TaxType1
import com.lorealconsulting.nexoretail.kotlin.models.UnitPrice2
import com.lorealconsulting.nexoretail.kotlin.models.ValueAddedTax3

import kotlinx.serialization.Serializable
/**
 * Data of the Sale item. SaleItem
 * @param pdctAmt 
 * @param pdctCd 
 * @param atId 
 * @param addtlPdctCd 
 * @param addtlPdctDesc 
 * @param dlvryLctn 
 * @param dlvrySvc Identify the method of delivery or distribution of the item. DeliveryService\\n\\n- ***ATTL*** : **AttendantDelivery** Definition: Delivery by an attendant.  \\n\\n- ***CARR*** : **CarrierDelivery** Definition: Delivery by a carrier.  \\n\\n- ***CUST*** : **CustomerDelivery** Definition: Delivery by the customer.  \\n\\n- ***FULL*** : **FullServe** Definition: Full service for fuel distribution.  \\n\\n- ***SELF*** : **SelfServe** Definition: Self service for fuel distribution.  
 * @param itmId 
 * @param pdctAmtSgn Sign of the product amount. ProductAmountSign
 * @param pdctDesc 
 * @param pdctQty Product quantity. ProductQuantity
 * @param saleChanl 
 * @param taxTp 
 * @param unitOfMeasr Unit of measure of the item purchased. UnitOfMeasure\\n\\n- ***PIEC*** : **Piece** Definition: Standard length of cloth, wallpaper, as an item for sale or amount of a substance.  \\n\\n- ***TONS*** : **Ton** Definition: Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).  \\n\\n- ***FOOT*** : **Foot** Definition: Unit of length equal to 1/3 yard.  \\n\\n- ***GBGA*** : **GBGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***USGA*** : **USGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***GRAM*** : **Gram** Definition: Unit of measure that is equal to a 1, 000th of a kilo.  \\n\\n- ***INCH*** : **Inch** Definition: Measure of length equal to 2.54 cm.  \\n\\n- ***KILO*** : **Kilogram** Definition: Basic unit of mass in the SI system, 1000 grams.  \\n\\n- ***PUND*** : **Pound** Definition: Unit of weight equal to 0.454 kilograms.  \\n\\n- ***METR*** : **Metre** Definition: Unit of length in the metric system, equal to 39.37 inches.  \\n\\n- ***CMET*** : **Centimetre** Definition: Unit of measure that is equal to one hundredth of a metre.  \\n\\n- ***MMET*** : **Millimetre** Definition: Unit of measure that is a thousandth of one metre.  \\n\\n- ***LITR*** : **Litre** Definition: Unit of volume that is equal to a thousand cubic centimetres.  \\n\\n- ***CELI*** : **Centilitre** Definition: Unit of volume that is equal to one hundredth of a litre.  \\n\\n- ***MILI*** : **MilliLitre** Definition: Unit of volume that is equal to one thousandth of a litre.  \\n\\n- ***GBOU*** : **GBOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***USOU*** : **USOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***GBQA*** : **GBQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***USQA*** : **USQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***GBPI*** : **GBPint** Definition: Unit of volume that is equal to 568 cubic centimetres.  \\n\\n- ***USPI*** : **USPint** Definition: Unit of volume that is equal to 473 cubic centimetres.  \\n\\n- ***MILE*** : **Mile** Definition: Unit of length equal to 1, 760 yards.  \\n\\n- ***KMET*** : **Kilometre** Definition: Unit of measure that is equal to 1, 000 meters.  \\n\\n- ***YARD*** : **Yard** Definition: Unit of length equal to 3 feet or 0.9144 metre.  \\n\\n- ***SQKI*** : **SquareKilometre** Definition: Measure of a surface, one kilometre by one kilometre.  \\n\\n- ***HECT*** : **Hectare** Definition: Unit of measure that is equal to 10, 000 square meters.  \\n\\n- ***ARES*** : **Are** Definition: Unit of measure equal to a 100 square meters.  \\n\\n- ***SMET*** : **SquareMetre** Definition: Measure of a surface, one metre by one metre.  \\n\\n- ***SCMT*** : **SquareCentimetre** Definition: Measure of a surface, one centimetre by one centimetre.  \\n\\n- ***SMIL*** : **SquareMillimetre** Definition: Measure of a surface, one millimetre by one millimetre.  \\n\\n- ***SQMI*** : **SquareMile** Definition: Measure of a surface, one mile by one mile.  \\n\\n- ***SQYA*** : **SquareYard** Definition: Measure of a surface, one yard by one yard.  \\n\\n- ***SQFO*** : **SquareFoot** Definition: Measure of a surface, one foot by one foot.  \\n\\n- ***SQIN*** : **SquareInch** Definition: Measure of a surface, one inch by one inch.  \\n\\n- ***ACRE*** : **Acre** Definition: Unit of measure equal to 4, 840 square yards.  \\n\\n- ***KWHO*** : **KilowattHours** Definition: Unit of measure that is equal to the power consumption of one kilowatt during one hour.  \\n\\n- ***DGEU*** : **DieselGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of diesel.  \\n\\n- ***GGEU*** : **GasolineGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of gasoline.  
 * @param unitPric 
 * @param unitPricSgn Sign of the unit price. UnitPriceSign
 * @param valAddedTax 
 */
@Serializable
data class SaleItem3(
    val pdctAmt: ProductAmount2,
    val pdctCd: ProductCode3,
    /*  */
    val atId: kotlin.String? = null,
    val addtlPdctCd: AdditionalProductCode1? = null,
    val addtlPdctDesc: AdditionalProductDescription1? = null,
    val dlvryLctn: DeliveryLocation2? = null,
    /* Identify the method of delivery or distribution of the item. DeliveryService\\n\\n- ***ATTL*** : **AttendantDelivery** Definition: Delivery by an attendant.  \\n\\n- ***CARR*** : **CarrierDelivery** Definition: Delivery by a carrier.  \\n\\n- ***CUST*** : **CustomerDelivery** Definition: Delivery by the customer.  \\n\\n- ***FULL*** : **FullServe** Definition: Full service for fuel distribution.  \\n\\n- ***SELF*** : **SelfServe** Definition: Self service for fuel distribution.   */
    val dlvrySvc: SaleItem3.DlvrySvc? = null,
    val itmId: ItemIdentification1? = null,
    /* Sign of the product amount. ProductAmountSign */
    val pdctAmtSgn: kotlin.Boolean? = null,
    val pdctDesc: ProductDescription1? = null,
    /* Product quantity. ProductQuantity */
    val pdctQty: java.math.BigDecimal? = null,
    val saleChanl: SaleChannel1? = null,
    val taxTp: TaxType1? = null,
    /* Unit of measure of the item purchased. UnitOfMeasure\\n\\n- ***PIEC*** : **Piece** Definition: Standard length of cloth, wallpaper, as an item for sale or amount of a substance.  \\n\\n- ***TONS*** : **Ton** Definition: Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).  \\n\\n- ***FOOT*** : **Foot** Definition: Unit of length equal to 1/3 yard.  \\n\\n- ***GBGA*** : **GBGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***USGA*** : **USGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***GRAM*** : **Gram** Definition: Unit of measure that is equal to a 1, 000th of a kilo.  \\n\\n- ***INCH*** : **Inch** Definition: Measure of length equal to 2.54 cm.  \\n\\n- ***KILO*** : **Kilogram** Definition: Basic unit of mass in the SI system, 1000 grams.  \\n\\n- ***PUND*** : **Pound** Definition: Unit of weight equal to 0.454 kilograms.  \\n\\n- ***METR*** : **Metre** Definition: Unit of length in the metric system, equal to 39.37 inches.  \\n\\n- ***CMET*** : **Centimetre** Definition: Unit of measure that is equal to one hundredth of a metre.  \\n\\n- ***MMET*** : **Millimetre** Definition: Unit of measure that is a thousandth of one metre.  \\n\\n- ***LITR*** : **Litre** Definition: Unit of volume that is equal to a thousand cubic centimetres.  \\n\\n- ***CELI*** : **Centilitre** Definition: Unit of volume that is equal to one hundredth of a litre.  \\n\\n- ***MILI*** : **MilliLitre** Definition: Unit of volume that is equal to one thousandth of a litre.  \\n\\n- ***GBOU*** : **GBOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***USOU*** : **USOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***GBQA*** : **GBQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***USQA*** : **USQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***GBPI*** : **GBPint** Definition: Unit of volume that is equal to 568 cubic centimetres.  \\n\\n- ***USPI*** : **USPint** Definition: Unit of volume that is equal to 473 cubic centimetres.  \\n\\n- ***MILE*** : **Mile** Definition: Unit of length equal to 1, 760 yards.  \\n\\n- ***KMET*** : **Kilometre** Definition: Unit of measure that is equal to 1, 000 meters.  \\n\\n- ***YARD*** : **Yard** Definition: Unit of length equal to 3 feet or 0.9144 metre.  \\n\\n- ***SQKI*** : **SquareKilometre** Definition: Measure of a surface, one kilometre by one kilometre.  \\n\\n- ***HECT*** : **Hectare** Definition: Unit of measure that is equal to 10, 000 square meters.  \\n\\n- ***ARES*** : **Are** Definition: Unit of measure equal to a 100 square meters.  \\n\\n- ***SMET*** : **SquareMetre** Definition: Measure of a surface, one metre by one metre.  \\n\\n- ***SCMT*** : **SquareCentimetre** Definition: Measure of a surface, one centimetre by one centimetre.  \\n\\n- ***SMIL*** : **SquareMillimetre** Definition: Measure of a surface, one millimetre by one millimetre.  \\n\\n- ***SQMI*** : **SquareMile** Definition: Measure of a surface, one mile by one mile.  \\n\\n- ***SQYA*** : **SquareYard** Definition: Measure of a surface, one yard by one yard.  \\n\\n- ***SQFO*** : **SquareFoot** Definition: Measure of a surface, one foot by one foot.  \\n\\n- ***SQIN*** : **SquareInch** Definition: Measure of a surface, one inch by one inch.  \\n\\n- ***ACRE*** : **Acre** Definition: Unit of measure equal to 4, 840 square yards.  \\n\\n- ***KWHO*** : **KilowattHours** Definition: Unit of measure that is equal to the power consumption of one kilowatt during one hour.  \\n\\n- ***DGEU*** : **DieselGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of diesel.  \\n\\n- ***GGEU*** : **GasolineGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of gasoline.   */
    val unitOfMeasr: SaleItem3.UnitOfMeasr? = null,
    val unitPric: UnitPrice2? = null,
    /* Sign of the unit price. UnitPriceSign */
    val unitPricSgn: kotlin.Boolean? = null,
    val valAddedTax: ValueAddedTax3? = null
)
{
    /**
    * Identify the method of delivery or distribution of the item. DeliveryService\\n\\n- ***ATTL*** : **AttendantDelivery** Definition: Delivery by an attendant.  \\n\\n- ***CARR*** : **CarrierDelivery** Definition: Delivery by a carrier.  \\n\\n- ***CUST*** : **CustomerDelivery** Definition: Delivery by the customer.  \\n\\n- ***FULL*** : **FullServe** Definition: Full service for fuel distribution.  \\n\\n- ***SELF*** : **SelfServe** Definition: Self service for fuel distribution.  
    * Values: ATTL,CARR,CUST,FULL,SELF
    */
    enum class DlvrySvc(val value: kotlin.String){
        ATTL("ATTL"),
        CARR("CARR"),
        CUST("CUST"),
        FULL("FULL"),
        SELF("SELF");
    }
    /**
    * Unit of measure of the item purchased. UnitOfMeasure\\n\\n- ***PIEC*** : **Piece** Definition: Standard length of cloth, wallpaper, as an item for sale or amount of a substance.  \\n\\n- ***TONS*** : **Ton** Definition: Measure of weight, in Britain 2240lb (long ton)and in the US 2000lb (short ton).  \\n\\n- ***FOOT*** : **Foot** Definition: Unit of length equal to 1/3 yard.  \\n\\n- ***GBGA*** : **GBGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***USGA*** : **USGallon** Definition: Unit of volume that is equal to 8 pints.  \\n\\n- ***GRAM*** : **Gram** Definition: Unit of measure that is equal to a 1, 000th of a kilo.  \\n\\n- ***INCH*** : **Inch** Definition: Measure of length equal to 2.54 cm.  \\n\\n- ***KILO*** : **Kilogram** Definition: Basic unit of mass in the SI system, 1000 grams.  \\n\\n- ***PUND*** : **Pound** Definition: Unit of weight equal to 0.454 kilograms.  \\n\\n- ***METR*** : **Metre** Definition: Unit of length in the metric system, equal to 39.37 inches.  \\n\\n- ***CMET*** : **Centimetre** Definition: Unit of measure that is equal to one hundredth of a metre.  \\n\\n- ***MMET*** : **Millimetre** Definition: Unit of measure that is a thousandth of one metre.  \\n\\n- ***LITR*** : **Litre** Definition: Unit of volume that is equal to a thousand cubic centimetres.  \\n\\n- ***CELI*** : **Centilitre** Definition: Unit of volume that is equal to one hundredth of a litre.  \\n\\n- ***MILI*** : **MilliLitre** Definition: Unit of volume that is equal to one thousandth of a litre.  \\n\\n- ***GBOU*** : **GBOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***USOU*** : **USOunce** Definition: Unit of weight equal to a sixteenth of a pound.  \\n\\n- ***GBQA*** : **GBQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***USQA*** : **USQuart** Definition: Unit of volume that is equal to 2 pints.  \\n\\n- ***GBPI*** : **GBPint** Definition: Unit of volume that is equal to 568 cubic centimetres.  \\n\\n- ***USPI*** : **USPint** Definition: Unit of volume that is equal to 473 cubic centimetres.  \\n\\n- ***MILE*** : **Mile** Definition: Unit of length equal to 1, 760 yards.  \\n\\n- ***KMET*** : **Kilometre** Definition: Unit of measure that is equal to 1, 000 meters.  \\n\\n- ***YARD*** : **Yard** Definition: Unit of length equal to 3 feet or 0.9144 metre.  \\n\\n- ***SQKI*** : **SquareKilometre** Definition: Measure of a surface, one kilometre by one kilometre.  \\n\\n- ***HECT*** : **Hectare** Definition: Unit of measure that is equal to 10, 000 square meters.  \\n\\n- ***ARES*** : **Are** Definition: Unit of measure equal to a 100 square meters.  \\n\\n- ***SMET*** : **SquareMetre** Definition: Measure of a surface, one metre by one metre.  \\n\\n- ***SCMT*** : **SquareCentimetre** Definition: Measure of a surface, one centimetre by one centimetre.  \\n\\n- ***SMIL*** : **SquareMillimetre** Definition: Measure of a surface, one millimetre by one millimetre.  \\n\\n- ***SQMI*** : **SquareMile** Definition: Measure of a surface, one mile by one mile.  \\n\\n- ***SQYA*** : **SquareYard** Definition: Measure of a surface, one yard by one yard.  \\n\\n- ***SQFO*** : **SquareFoot** Definition: Measure of a surface, one foot by one foot.  \\n\\n- ***SQIN*** : **SquareInch** Definition: Measure of a surface, one inch by one inch.  \\n\\n- ***ACRE*** : **Acre** Definition: Unit of measure equal to 4, 840 square yards.  \\n\\n- ***KWHO*** : **KilowattHours** Definition: Unit of measure that is equal to the power consumption of one kilowatt during one hour.  \\n\\n- ***DGEU*** : **DieselGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of diesel.  \\n\\n- ***GGEU*** : **GasolineGallonEquivalent** Definition: Amount of fuel alternative equal to one gallon of gasoline.  
    * Values: PIEC,TONS,FOOT,GBGA,USGA,GRAM,INCH,KILO,PUND,METR,CMET,MMET,LITR,CELI,MILI,GBOU,USOU,GBQA,USQA,GBPI,USPI,MILE,KMET,YARD,SQKI,HECT,ARES,SMET,SCMT,SMIL,SQMI,SQYA,SQFO,SQIN,ACRE,KWHO,DGEU,GGEU
    */
    enum class UnitOfMeasr(val value: kotlin.String){
        PIEC("PIEC"),
        TONS("TONS"),
        FOOT("FOOT"),
        GBGA("GBGA"),
        USGA("USGA"),
        GRAM("GRAM"),
        INCH("INCH"),
        KILO("KILO"),
        PUND("PUND"),
        METR("METR"),
        CMET("CMET"),
        MMET("MMET"),
        LITR("LITR"),
        CELI("CELI"),
        MILI("MILI"),
        GBOU("GBOU"),
        USOU("USOU"),
        GBQA("GBQA"),
        USQA("USQA"),
        GBPI("GBPI"),
        USPI("USPI"),
        MILE("MILE"),
        KMET("KMET"),
        YARD("YARD"),
        SQKI("SQKI"),
        HECT("HECT"),
        ARES("ARES"),
        SMET("SMET"),
        SCMT("SCMT"),
        SMIL("SMIL"),
        SQMI("SQMI"),
        SQYA("SQYA"),
        SQFO("SQFO"),
        SQIN("SQIN"),
        ACRE("ACRE"),
        KWHO("KWHO"),
        DGEU("DGEU"),
        GGEU("GGEU");
    }
}

