/**
* nexo retailer API
* API defining resources for interactions between POI and POS, using underlying nexo messages # Summary The **nexo retailer** *Protocol Version 8* offers a modern, open, harmonised and interoperable set of Application Programming Interfaces (APIs) as the safest and most efficient way to exchange data securely, between a Point Of sale System (POS) and Point Of Interaction (POI) System. The nexo retailer protocol reduces sale to payment terminal communication complexity and costs,  addresses the problem of multiple private standards, aligned with the goals of nexo association, enables point of sale system providers to use a single interface with multiple payment systems,  for multiple payment instruments, and payment methods,  with a clear delimitation between with the retail world and the payment world.  The possible approaches are:   * Multiple POS to Multiple POI    * One to One POS to POI   * App 2 App when POS and POI are embedded in a single device    Not every message defined in this API definition is necessary for all approaches.    Furthermore this API definition does not differ between methods which are mandatory, conditional, or optional.   Therefore for a particular implementation of a nexo compliant API it is only necessary to support    a certain subset of the methods defined in this API definition.    **Please have a look at the nexo retailer message usage guide if you are not sure    which message has to be used for the approach you are going to use.**  ## Some General Remarks Related to this version of the OpenAPI Specification: * **This API definition is based on the Message Usage Guide of the nexo retailer protocol.**    It is not a replacement in any sense.   The main specification is always the nexo Message Usage Guide, with ISO20022 definitions of the protocol (MDR Part 1 and 2).   It is highly recommended to read through the standards documentations in conjunction with this API definition.    Namely regarding :     * The rules regarding dialogue initiation, termination and combination      * The rules and constraints applied to data fields, depending on the use case     * The error management on Sale system and POI system sides     * The security that can be applied to the protocol * **This API definition contains the messages for all different approaches defined in the Message Usage Guide.**  * According to the OpenAPI-Specification [https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.1.1.md]        \"If in is \"header\"and the name field is \"Accept\", \"Content-Type\"or \"Authorization\", the parameter definition SHALL be ignored.\"      The element \"Accept\"will not be defined in this file at any place.      The elements \"Content-Type\"and \"Authorization\"are implicitly defined by the OpenApi tags \"content\"and \"security\".     * **We omit the definition of all standard HTTP header elements (mandatory/optional/conditional)    except they are mentioned in the Implementation Guidelines.**   Therefore the implementer might add these in his own realisation of a nexo complient API in addition to the elements defined in this file. 
*
* The version of the OpenAPI document: 2025-01
* Contact: romain.loreal@lorealconsulting.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.lorealconsulting.nexoretail.kotlin.models

import com.lorealconsulting.nexoretail.kotlin.models.ExchangeIdentification
import com.lorealconsulting.nexoretail.kotlin.models.InitiatingParty
import com.lorealconsulting.nexoretail.kotlin.models.ProtocolVersion
import com.lorealconsulting.nexoretail.kotlin.models.RecipientParty
import com.lorealconsulting.nexoretail.kotlin.models.Traceability

import kotlinx.serialization.Serializable
/**
 * Set of characteristics related to the transfer of the request. Header
 * @param creDtTm Date and time at which the message was created. CreationDateTime
 * @param initgPty 
 * @param msgFctn Identifies the type of process related to the message. MessageFunction\\n\\n- ***SSAB*** : **Abort** Definition: Abort the current process or the last request.  \\n\\n- ***SAAQ*** : **AdminRequest** Definition: To select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.  \\n\\n- ***SAAP*** : **AdminResponse** Definition: Response to the Admin request.  \\n\\n- ***SDDR*** : **DeviceRequest** Definition: Request one or several functions of the device, from user Interface or payment peripherals on the POI system or on the Sale system. Functions can be Display, Input, Print, play sound, Card reader capabilities or Transmit a message.  \\n\\n- ***SDDP*** : **DeviceResponse** Definition: Response to a Device request.  \\n\\n- ***SSEN*** : **EventNotification** Definition: Notify the other party of an event that occurs on its side.  \\n\\n- ***SSMQ*** : **MessageStatusRequest** Definition: Request the status of a previous message for which the Sale system has no response.  \\n\\n- ***SSMR*** : **MessageStatusResponse** Definition: Response to a Message Status request.  \\n\\n- ***SSRJ*** : **Rejection** Definition: Reject a previous received message, for technical or functional reasons.  \\n\\n- ***SARQ*** : **ReportRequest** Definition: To request, by the Sale System, a report on a list of transactions on the POI system, or the status of a transaction.  \\n\\n- ***SARP*** : **ReportResponse** Definition: Response to a Report request.  \\n\\n- ***SFRP*** : **SaleFinancialReconciliationResponse** Definition: Response to a Reconciliation Request.  \\n\\n- ***SFRQ*** : **SaleFinancialReconciliationRequest** Definition: Request a reconciliation (different types) between Sale System and POI System.  \\n\\n- ***SFSQ*** : **SaleFinancialServiceRequest** Definition: Request a financial service like payment, reversal, loyalty, Balance Inquiry, etc.  \\n\\n- ***SFSP*** : **SaleFinancialServiceResponse** Definition: Response to a financial service request.  \\n\\n- ***SASQ*** : **SessionManagementRequest** Definition: Request the management of a session: login, logout and diagnosis services. Initiated by the Sale system.  \\n\\n- ***SASP*** : **SessionManagementResponse** Definition: Response to a session management request to initiate/terminate a session.  
 * @param prtcolVrsn 
 * @param xchgId 
 * @param atId 
 * @param rcptPty 
 * @param tracblt 
 */
@Serializable
data class Header(
    /* Date and time at which the message was created. CreationDateTime */
    val creDtTm: kotlin.String,
    val initgPty: InitiatingParty,
    /* Identifies the type of process related to the message. MessageFunction\\n\\n- ***SSAB*** : **Abort** Definition: Abort the current process or the last request.  \\n\\n- ***SAAQ*** : **AdminRequest** Definition: To select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.  \\n\\n- ***SAAP*** : **AdminResponse** Definition: Response to the Admin request.  \\n\\n- ***SDDR*** : **DeviceRequest** Definition: Request one or several functions of the device, from user Interface or payment peripherals on the POI system or on the Sale system. Functions can be Display, Input, Print, play sound, Card reader capabilities or Transmit a message.  \\n\\n- ***SDDP*** : **DeviceResponse** Definition: Response to a Device request.  \\n\\n- ***SSEN*** : **EventNotification** Definition: Notify the other party of an event that occurs on its side.  \\n\\n- ***SSMQ*** : **MessageStatusRequest** Definition: Request the status of a previous message for which the Sale system has no response.  \\n\\n- ***SSMR*** : **MessageStatusResponse** Definition: Response to a Message Status request.  \\n\\n- ***SSRJ*** : **Rejection** Definition: Reject a previous received message, for technical or functional reasons.  \\n\\n- ***SARQ*** : **ReportRequest** Definition: To request, by the Sale System, a report on a list of transactions on the POI system, or the status of a transaction.  \\n\\n- ***SARP*** : **ReportResponse** Definition: Response to a Report request.  \\n\\n- ***SFRP*** : **SaleFinancialReconciliationResponse** Definition: Response to a Reconciliation Request.  \\n\\n- ***SFRQ*** : **SaleFinancialReconciliationRequest** Definition: Request a reconciliation (different types) between Sale System and POI System.  \\n\\n- ***SFSQ*** : **SaleFinancialServiceRequest** Definition: Request a financial service like payment, reversal, loyalty, Balance Inquiry, etc.  \\n\\n- ***SFSP*** : **SaleFinancialServiceResponse** Definition: Response to a financial service request.  \\n\\n- ***SASQ*** : **SessionManagementRequest** Definition: Request the management of a session: login, logout and diagnosis services. Initiated by the Sale system.  \\n\\n- ***SASP*** : **SessionManagementResponse** Definition: Response to a session management request to initiate/terminate a session.   */
    val msgFctn: Header.MsgFctn,
    val prtcolVrsn: ProtocolVersion,
    val xchgId: ExchangeIdentification,
    /*  */
    val atId: kotlin.String? = null,
    val rcptPty: RecipientParty? = null,
    val tracblt: Traceability? = null
)
{
    /**
    * Identifies the type of process related to the message. MessageFunction\\n\\n- ***SSAB*** : **Abort** Definition: Abort the current process or the last request.  \\n\\n- ***SAAQ*** : **AdminRequest** Definition: To select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.  \\n\\n- ***SAAP*** : **AdminResponse** Definition: Response to the Admin request.  \\n\\n- ***SDDR*** : **DeviceRequest** Definition: Request one or several functions of the device, from user Interface or payment peripherals on the POI system or on the Sale system. Functions can be Display, Input, Print, play sound, Card reader capabilities or Transmit a message.  \\n\\n- ***SDDP*** : **DeviceResponse** Definition: Response to a Device request.  \\n\\n- ***SSEN*** : **EventNotification** Definition: Notify the other party of an event that occurs on its side.  \\n\\n- ***SSMQ*** : **MessageStatusRequest** Definition: Request the status of a previous message for which the Sale system has no response.  \\n\\n- ***SSMR*** : **MessageStatusResponse** Definition: Response to a Message Status request.  \\n\\n- ***SSRJ*** : **Rejection** Definition: Reject a previous received message, for technical or functional reasons.  \\n\\n- ***SARQ*** : **ReportRequest** Definition: To request, by the Sale System, a report on a list of transactions on the POI system, or the status of a transaction.  \\n\\n- ***SARP*** : **ReportResponse** Definition: Response to a Report request.  \\n\\n- ***SFRP*** : **SaleFinancialReconciliationResponse** Definition: Response to a Reconciliation Request.  \\n\\n- ***SFRQ*** : **SaleFinancialReconciliationRequest** Definition: Request a reconciliation (different types) between Sale System and POI System.  \\n\\n- ***SFSQ*** : **SaleFinancialServiceRequest** Definition: Request a financial service like payment, reversal, loyalty, Balance Inquiry, etc.  \\n\\n- ***SFSP*** : **SaleFinancialServiceResponse** Definition: Response to a financial service request.  \\n\\n- ***SASQ*** : **SessionManagementRequest** Definition: Request the management of a session: login, logout and diagnosis services. Initiated by the Sale system.  \\n\\n- ***SASP*** : **SessionManagementResponse** Definition: Response to a session management request to initiate/terminate a session.  
    * Values: SSAB,SAAQ,SAAP,SDDR,SDDP,SSEN,SSMQ,SSMR,SSRJ,SARQ,SARP,SFRP,SFRQ,SFSQ,SFSP,SASQ,SASP
    */
    enum class MsgFctn(val value: kotlin.String){
        SSAB("SSAB"),
        SAAQ("SAAQ"),
        SAAP("SAAP"),
        SDDR("SDDR"),
        SDDP("SDDP"),
        SSEN("SSEN"),
        SSMQ("SSMQ"),
        SSMR("SSMR"),
        SSRJ("SSRJ"),
        SARQ("SARQ"),
        SARP("SARP"),
        SFRP("SFRP"),
        SFRQ("SFRQ"),
        SFSQ("SFSQ"),
        SFSP("SFSP"),
        SASQ("SASQ"),
        SASP("SASP");
    }
}

