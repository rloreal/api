{
    "$defs": {
        "ActiveCurrencyCode": {
            "type": "string",
            "pattern": "[A-Z]{3,3}",
            "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
            "example": "EUR"
        },
        "AddressType2Code": {
            "description": "Specifies the type of address.\nCode: HOME:\tResidential:\tDefinition: Address is the home address.\nCode: BIZZ:\tBusiness:\tDefinition: Address is the business address.\nCode: ADDR:\tPostal:\tDefinition: Address is the complete postal address.\nCode: PBOX:\tPOBox:\tDefinition: Address is a postal office (PO) box.\nCode: MLTO:\tMailTo:\tDefinition: Address is the address to which mail is sent.\nCode: DLVY:\tDeliveryTo:\tDefinition: Address is the address to which delivery is to take place.",
            "enum": [
                "ADDR",
                "PBOX",
                "HOME",
                "BIZZ",
                "MLTO",
                "DLVY"
            ],
            "example": "ADDR",
            "type": "string"
        },
        "Algorithm26Code": {
            "description": "Identification of a digest algorithm.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "HS25",
                "HS38",
                "HS51",
                "HS01",
                "SH31",
                "SH32",
                "SH33",
                "SH35",
                "SHK1",
                "SHK2",
                "SMS3"
            ],
            "example": "HS25",
            "type": "string"
        },
        "Algorithm27Code": {
            "description": "Cryptographic algorithms for the MAC (Message Authentication Code).\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "MACC",
                "MCCS",
                "CMA1",
                "MCC1",
                "CMA9",
                "CMA5",
                "CMA2",
                "CM31",
                "CM32",
                "CM33",
                "MCS3",
                "CCA1",
                "CCA2",
                "CCA3",
                "S34C",
                "S34R"
            ],
            "example": "MACC",
            "type": "string"
        },
        "Algorithm28Code": {
            "description": "Cryptographic algorithms for the protection of transported keys.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "EA2C",
                "E3DC",
                "DKP9",
                "UKPT",
                "UKA2",
                "EA9C",
                "EA5C",
                "DA12",
                "DA19",
                "DA25",
                "N108",
                "EA5R",
                "EA9R",
                "EA2R",
                "E3DR",
                "E36C",
                "E36R",
                "SD5C",
                "UKA1",
                "UKA3",
                "SM4C",
                "SM4R"
            ],
            "example": "EA2C",
            "type": "string"
        },
        "Algorithm29Code": {
            "description": "Cryptographic algorithms for digital signatures.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "ERS2",
                "ERS1",
                "RPSS",
                "ERS3",
                "ED32",
                "ED33",
                "ED35",
                "ED23",
                "ED25",
                "ES22",
                "ES32",
                "ES33",
                "ES35",
                "ES23",
                "ES25",
                "ED22",
                "EF32",
                "EF22",
                "EF33",
                "EF35",
                "EF23",
                "EO33",
                "EF25",
                "EO32",
                "EO22",
                "EO35",
                "EO23",
                "EO25",
                "DD22",
                "DD32",
                "DD33",
                "DD35",
                "DD23",
                "DD25",
                "SM22",
                "SM33",
                "SM32",
                "SM35",
                "SM23",
                "SM25",
                "S2S3"
            ],
            "example": "ERS2",
            "type": "string"
        },
        "Algorithm7Code": {
            "description": "Asymmetric encryption algorithm of a transport key.\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "ERSA",
                "RSAO"
            ],
            "example": "ERSA",
            "type": "string"
        },
        "Algorithm8Code": {
            "description": "Mask generator functions of the RSAES-OAEP encryption algorithm (RSA Encryption Scheme: Optimal Asymmetric Encryption Padding).\nCode: MACC:\tRetailCBCMAC:\tDefinition: Retail CBC (Chaining Block Cypher) MAC (Message Authentication Code) (cf. ISO 9807, ANSI X9.19) - (ASN.1 Object Identifier: id-retail-cbc-mac).\nCode: MCCS:\tRetailSHA256MAC:\tDefinition: Retail-CBC-MAC with SHA-256 (Secure HAsh standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-256).\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption - (ASN.1 Object Identifier: id-ukpt-wrap).\nCode: DKPT:\tDUKPT:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2004, Annex A, and ISO/DIS 13492-2006. - (ASN.1 Object Identifier: id-dukpt-wrap).\nCode: E3DC:\tDES112CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with double length key (112 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: HS25:\tSHA256:\tDefinition: Message digest algorithm SHA-256 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha256).\nCode: ERS2:\tSHA256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA-256 digest algorithm - (ASN.1 Object Identifier: sha256WithRSAEncryption).\nCode: ERSA:\tRSAEncryption:\tDefinition: RSA encryption algorithm - (ASN.1 Object Identifier: rsaEncryption).\nCode: EA2C:\tAES128CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) algorithm, as specified in ANSI X9.24-2009 Annex A.\nCode: UKA1:\tUKPTwithAES128:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CMA1:\tSHA256CMACwithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CMD1:\tSHA256CMACwithDES112:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Triple DES with a double length key (112 Bit) as defined in FIPS PUB 46-3. The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: HS38:\tSHA384:\tDefinition: Message digest algorithm SHA-384 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha384).\nCode: HS51:\tSHA512:\tDefinition: Message digest algorithm SHA-512 as defined in FIPS 180-1 and 2 - (ASN.1 Object Identifier: id-sha512).\nCode: RSAO:\tRSAES-OAEP:\tDefinition: RSA encryption scheme based on Optimal Asymmetric Encryption scheme (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-RSAES-OAEP).\nCode: MGF1:\tMGF1:\tDefinition: Generator Function, used for RSA encryption and RSA igital signature (PKCS #1 version 2.1) - (ASN.1 Object Identifier: id-mgf1).\nCode: HS01:\tSHA1:\tDefinition: The DEPRECATED Message digest algorithm SHA-1 as defined in FIPS 180-1 - (ASN.1 Object Identifier: id-sha1).\nCode: MCC1:\tRetailSHA1MAC:\tDefinition: The DEPRECATED Retail-CBC-MAC with SHA-1 (Secure Hash standard) - (ASN.1 Object Identifier: id-retail-cbc-mac-sha-1).\nCode: CMA9:\tSHA384CMACwithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-384 digest of the message.\nCode: CMA5:\tSHA512CMACwithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-512 digest of the message.\nCode: EA5C:\tAES256CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EA9C:\tAES192CBC:\tDefinition: AES (Advanced Encryption Standard) CBC (Chaining Block Cypher) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: ERS1:\tSHA1WithRSA:\tDefinition: The DEPRECATED Signature algorithms with RSA (PKCS #1 version 2.1), using SHA-1 digest algorithm - (ASN.1 Object Identifier: sha1WithRSAEncryption).\nCode: RPSS:\tRSASSA-PSS:\tDefinition: Signature algorithm with Appendix, Probabilistic Signature Scheme (PKCS #1 version 2.1), - (ASN.1 Object Identifier: id-RSASSA-PSS).\nCode: ECC1:\tEllipticCryptographicCurveFirstAlgorithm:\tDefinition: First Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC2:\tEllipticCryptographicCurveSecondAlgorithm:\tDefinition: Second Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC3:\tEllipticCryptographicCurveThirdAlgorithm:\tDefinition: Third Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC4:\tEllipticCryptographicCurveFourthAlgorithm:\tDefinition: Fourth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: ECC5:\tEllipticCryptographicCurveFifthAlgortihm:\tDefinition: Fifth Elliptic Cryptographic Curve Algorithm identified by EMVCo Nextgen.\nCode: SH31:\tSHA3-224:\tDefinition: Message digest algorithm SHA3-224 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-224).\nCode: SH32:\tSHA3-256:\tDefinition: Message digest algorithm SHA3-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-256).\nCode: SH33:\tSHA3-384:\tDefinition: Message digest algorithm SHA3-384 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-384).\nCode: SH35:\tSHA3-512:\tDefinition: Message digest algorithm SHA3-512 as defined in FIPS 202 - (ASN.1 Object Identifier: id-sha3-512).\nCode: SHK1:\tSHAKE128:\tDefinition: Message digest algorithm SHAKE-128 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake128).\nCode: SHK2:\tSHAKE256:\tDefinition: Message digest algorithm SHAKE-256 as defined in FIPS 202 - (ASN.1 Object Identifier: id-shake256).\nCode: CMA2:\tSHA256CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA-256 digest of the message.\nCode: CM31:\tSHA3-256CMACWithAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-256 digest of the message.\nCode: CM32:\tSHA3-384CMACWithAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-384 digest of the message.\nCode: CM33:\tSHA3-512CMACWithAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard). The CMAC algorithm is computed on the SHA3-512 digest of the message.\nCode: ERS3:\tSHA3-256WithRSA:\tDefinition: Signature algorithms with RSA, using SHA3-256 digest algorithm. (ASN.1 Object Identifier: id-rsassa-pkcs1-v1-5-with-sha3-256).\nCode: MCS3:\tSHA3-256-3DESMAC:\tDefinition: 3DES CBC-MAC with SHA3-256 (SecureHAsh standard) and ISO/IEC9797-1 method 2 padding.\nCode: DA12:\tAESDUKPT128ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A, With key length of 128 bits.\nCode: DA25:\tAESDUKPT256ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 256 bits.\nCode: DA19:\tAESDUKPT192ECB:\tDefinition: AES DUKPT (Derived Unique Key Per Transaction) ECB algorithm, as specified in ANSI X9.24-3-2017 Annex A.With key length of 192 bits.\nCode: N108:\tNist800-108KeyDerivation:\tDefinition: Key Derivation according to the Special Publication from the NIST entitled 800-108.\nCode: EA2R:\tAES128CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA9R:\tAES192CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EA5R:\tAES256CTR:\tDefinition: AES (Advanced Encryption Standard) CTR (Counter) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ECP2:\tSignatureWithEllipticCurveP-256:\tDefinition: Elliptic Curve Signature with the Curve P-256 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP3:\tSignatureWithEllipticCurveP-384:\tDefinition: Elliptic Curve Signature with the Curve P-384 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: ECP5:\tSignatureWithEllipticCurveP-512:\tDefinition: Elliptic Curve Signature with the Curve P-512 as defined by the Federal Information Processing Standards (FIPS 186-4 - July, 2013 - Digital Signature Standard).\nCode: E3DR:\tDES112CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with double length key (112 Bit) as defined in FIPS SP 800-38a.\nCode: E36C:\tDES168CBC:\tDefinition: Triple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with triple length key (168 Bit) as defined in FIPS PUB 46-3 - (ASN.1 Object Identifier: des-ede3-cbc).\nCode: E36R:\tDES168CTR:\tDefinition: Triple DES (Data Encryption Standard) CTR (Counter) encryption with triple length key (168 Bit) as defined in FIPS SP 800-38a.\nCode: SD5C:\tSDE056CBC:\tDefinition: The DEPRECATED Simple DES (Data Encryption Standard) CBC (Chaining Block Cypher) encryption with simple length key (56 Bit) as defined in FIPS PUB 81 - (ASN.1 Object Identifier: des-cbc).\nCode: CCA1:\tCMACAES128:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 128 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA2:\tCMACAES192:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: CCA3:\tCMACAES256:\tDefinition: CMAC (Cipher based Message Authentication Code) defined by the National Institute of Standards and Technology (NIST 800-38B - May 2005), using the block cipher Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: MC3S:\tRetailSHA3-256MAC:\tDefinition: Reatil SHA3 256 length MAC\nCode: DAES:\tAESDUKPT:\tDefinition: AES with DUKPT\nCode: SDES:\tDES56CBC:\tDefinition: Single DES CBC mode\nCode: UKA2:\tUKPTwithAES192:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 192 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: UKA3:\tUKPTwithAES256:\tDefinition: UKPT (Unique Key Per Transaction) or Master Session Key key encryption, using Advanced Encryption Standard with a 256 bits cryptographic key, approved by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: ES23:\tEcsdsaSha384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ES22:\tEcsdsaSha256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ES25:\tEcsdsaSha512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ES32:\tEcsdaSha3-256:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ES33:\tEcsdsaSha3-384:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ES35:\tEcsdsaSha3-512:\tDefinition: Elliptic Curve Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED35:\tEcdsaSha3-512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: ED22:\tEcdsaSha256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: ED32:\tEcdsaSha3-256:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: ED33:\tEcdsaSha3-384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: ED23:\tEcdsaSha384:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: ED25:\tEcdsaSha512:\tDefinition: Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SMS3:\tSM3:\tDefinition: ShangMi 3 hash function as defined by ISO/IEC 10118-3:2018.\nCode: S34C:\tSM3SM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode coupled with ShangMi 3 hash function.\nCode: S34R:\tSM3SM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode coupled with ShangMi 3 hash function.\nCode: SM4C:\tSM4CBC:\tDefinition: ShangMi 4 enciphering method used in CBC mode.\nCode: SM4R:\tSM4CTR:\tDefinition: ShangMi 4 enciphering method used in CTR mode.\nCode: EO22:\tEcosdsaSha256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EO32:\tEcosdaSha3-256:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EO33:\tEcosdsaSha3-384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EO35:\tEcosdsaSha3-512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EO23:\tEcosdsaSha384:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EO25:\tEcosdsaSha512:\tDefinition: Elliptic Curve Optimised Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: EF22:\tEcfsdsaSha256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: EF32:\tEcfsdaSha3-256:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: EF33:\tEcfsdsaSha3-384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: EF35:\tEcfsdsaSha3-512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: EF23:\tEcfsdsaSha384:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: EF25:\tEcfsdsaSha512:\tDefinition: Elliptic Curve Full Schnorr Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: DD22:\tEddsaSha256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: DD32:\tEddsaSha3-256:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: DD33:\tEddsaSha3-384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: DD35:\tEddsaSha3-512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: DD23:\tEddsaSha384:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: DD25:\tEddsaSha512:\tDefinition: Edward Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: SM22:\tSM2Sha256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-256 Digest Algorithm.\nCode: SM32:\tSM2Sha3-256:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-256 Digest Algorithm.\nCode: SM33:\tSM2Sha3-384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-384 Digest Algorithm.\nCode: SM35:\tSM2Sha3-512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA3-512 Digest Algorithm.\nCode: SM23:\tSM2Sha384:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-384 Digest Algorithm.\nCode: SM25:\tSM2Sha512:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with SHA2-512 Digest Algorithm.\nCode: S2S3:\tSM2SM3:\tDefinition: ShangMi2 Elliptic Curve Digital Signature Algorithm coupled with ShangMi3 Digest Algorithm.",
            "enum": [
                "MGF1"
            ],
            "example": "MGF1",
            "type": "string"
        },
        "AmountUnit1Code": {
            "description": "Unit of a amount (for loyalty or account).\nCode: POIN:\tPoint:\tDefinition: The amount is expressed in point.\nCode: MONE:\tMonetary:\tDefinition: The amount is expressed in a monetary value in a currency.",
            "enum": [
                "MONE",
                "POIN"
            ],
            "type": "string"
        },
        "AnyBICDec2014Identifier": {
            "type": "string",
            "pattern": "[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}",
            "description": "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".",
            "example": "CHASUS33"
        },
        "AttendanceContext1Code": {
            "description": "Human attendance at the POI location during the transaction.\nCode: ATTD:\tAttended:\tDefinition: Attended payment, with an attendant.\nCode: SATT:\tSemiAttended:\tDefinition: Semi-attended, including self checkout. An attendant supervises several payment, and could be called to help the cardholder.\nCode: UATT:\tUnattended:\tDefinition: Unattended payment, no attendant present.\nCode: ATTL:\tAttendantDelivery:\tDefinition: Delivery by an attendant.\nCode: CUST:\tCustomerDelivery:\tDefinition: Delivery by the customer.\nCode: CARR:\tCarrierDelivery:\tDefinition: Delivery by a carrier.\nCode: FULL:\tFullServe:\tDefinition: Full service for fuel distribution.\nCode: SELF:\tSelfServe:\tDefinition: Self service for fuel distribution.",
            "enum": [
                "ATTD",
                "SATT",
                "UATT"
            ],
            "example": "ATTD",
            "type": "string"
        },
        "AttributeType1Code": {
            "description": "Type of attribute of a distinguished name (DN).\nCode: CNAT:\tCommonName:\tDefinition: Common name of the attribute (ASN.1 Object Identifier: id-at-commonName).\nCode: LATT:\tLocality:\tDefinition: Locality of the attribute (ASN.1 Object Identifier: id-at-localityName).\nCode: OATT:\tOrganisationName:\tDefinition: Organization name of the attribute (ASN.1 Object Identifier: id-at-organizationName).\nCode: OUAT:\tOrganisationUnitName:\tDefinition: Organization unit name of the attribute (ASN.1 Object Identifier: id-at-organizationalUnitName).\nCode: CATT:\tCountryName:\tDefinition: Country name of the attribute (ASN.1 Object Identifier: id-at-countryName).\nCode: EMAL:\tEmailAddress:\tDefinition: Email address of the certificate subject.\nCode: CHLG:\tChallengePassword:\tDefinition: Password by which an entity may request certificate revocation.",
            "enum": [
                "CNAT",
                "LATT",
                "OATT",
                "OUAT",
                "CATT"
            ],
            "example": "CNAT",
            "type": "string"
        },
        "AuthenticationEntity2Code": {
            "description": "Entity or device that has performed the verification.\nCode: ICCD:\tICC:\tDefinition: Application in the chip card (Integrated Circuit Card), for instance an offline PIN verification.\nCode: AGNT:\tAuthorisedAgent:\tDefinition: Authorisation agent of the issuer.\nCode: MERC:\tMerchant:\tDefinition: Merchant (for example signature verification by the attendant).\nCode: ACQR:\tAcquirer:\tDefinition: Acquirer of the transaction.\nCode: ISSR:\tIssuer:\tDefinition: Card issuer.\nCode: TRML:\tTerminal:\tDefinition: Secure application in the terminal.",
            "enum": [
                "ICCD",
                "AGNT",
                "MERC",
                "ACQR",
                "ISSR",
                "TRML"
            ],
            "example": "ICCD",
            "type": "string"
        },
        "AuthenticationMethod6Code": {
            "description": "Methods used to authenticate a person or a card.\nCode: UKNW:\tUnknownMethod:\tDefinition: Authentication method is performed unknown.\nCode: BYPS:\tBypass:\tDefinition: Authentication bypassed by the merchant.\nCode: NPIN:\tOnLinePIN:\tDefinition: On-line PIN authentication (Personal Identification Number).\nCode: FPIN:\tOfflinePIN:\tDefinition: Off-line PIN authentication (Personal Identification Number).\nCode: CPSG:\tSignatureCapture:\tDefinition: Electronic signature capture (handwritten signature).\nCode: PPSG:\tPaperSignature:\tDefinition: Handwritten paper signature.\nCode: MANU:\tManualVerification:\tDefinition: Manual verification, for example passport or drivers license.\nCode: MERC:\tMerchantAuthentication:\tDefinition: Merchant-related authentication.\nCode: SCRT:\tSecureCertificate:\tDefinition: Electronic commerce transaction secured with the X.509 certificate of a customer.\nCode: SNCT:\tSecureNoCertificate:\tDefinition: Secure electronic transaction without cardholder certificate.\nCode: SCNL:\tSecuredChannel:\tDefinition: Channel-encrypted transaction.\nCode: PSWD:\tPassword:\tDefinition: Authentication by a password.\nCode: ADDB:\tBillingAddressVerification:\tDefinition: Cardholder billing address verification.\nCode: BIOM:\tBiometry:\tDefinition: Biometric authentication of the cardholder.\nCode: CDHI:\tCardholderIdentificationData:\tDefinition: Cardholder data provided for verification, for instance social security number, driver license number, passport number.\nCode: CRYP:\tCryptogramVerification:\tDefinition: Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\nCode: CSCV:\tCSCVerification:\tDefinition: Verification of Card Security Code.\nCode: PSVE:\tPassiveAuthentication:\tDefinition: Authentication based on statistical cardholder behaviour.\nCode: CSEC:\tSecureElectronicCommerce:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: ADDS:\tShippingAddressVerification:\tDefinition: Cardholder shipping address verification.\nCode: TOKN:\tTokenAuthentication:\tDefinition: Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\nCode: TOKP:\tPaymentToken:\tDefinition: Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\nCode: TOKA:\tAuthenticationToken:\tDefinition: A token is used to verify an already performed authentication.\nCode: MOBL:\tMobile:\tDefinition: Customer mobile device.\nCode: OTHR:\tOther:\tDefinition: Other customer authentication.\nCode: ADVF:\tAddressDigits:\tDefinition: Digits of the address.\nCode: ARNB:\tAlienRegistrationNumber:\tDefinition: Number assigned by a government agency to identify foreign nationals.\nCode: ARQC:\tARQCVerification:\tDefinition: Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\nCode: BTHD:\tBirthDate:\tDefinition: Date of birth of a person.\nCode: CHDN:\tCardholderName:\tDefinition: Name of cardholder\nCode: COFB:\tCityOfBirth:\tDefinition: City of birth to authenticate a person.\nCode: CUID:\tCustomerIdentification:\tDefinition: Customer number used as a mechanism of authentication.\nCode: DRVI:\tDriverIdentification:\tDefinition: Identification of a driver in a fleet of vehicles.\nCode: DRLN:\tDriverLicenseNumber:\tDefinition: Number assigned by a driving license authority to a person driving a car.\nCode: EMAL:\tEmail:\tDefinition: Electronic mail address\nCode: EMIN:\tEmployeeIdentificationNumber:\tDefinition: Number assigned to an employee by an employer.\nCode: EMRN:\tEmployerIdentificationNumber:\tDefinition: Number assigned to an employer by a registration authority.\nCode: IDCN:\tIdentityCardNumber:\tDefinition: Number assigned by a national authority to an identity card.\nCode: OTPW:\tOneTimePassword:\tDefinition: Verification of a one-time password provided by the issuer.\nCode: OCHI:\tOtherCardholderIdentification:\tDefinition: Other cardholder data provided for identification.\nCode: OTHC:\tOtherCryptogram:\tDefinition: Verification of a cryptogram generated by a non-card form factor.\nCode: PASN:\tPassportNumber:\tDefinition: Number assigned by a passport authority to a passport.\nCode: PCDV:\tPostalCode:\tDefinition: Verification based on digits of the postal code.\nCode: SHAF:\tShippingAddressFrom:\tDefinition: Shipping address from verification.\nCode: SHAT:\tShippingAddressTo:\tDefinition: Shipping address to verification\nCode: CHSA:\tCardholderAddress:\tDefinition: Verification whether the address corresponds to the cardholder's one.\nCode: NVSC:\tNonVisibleCSC:\tDefinition: Non visible Card Security Code.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of verification defined at private level\nCode: PLOB:\tPlaceOfBirth:\tDefinition: Place of birth of a person.\nCode: SSNB:\tSocialSecurityNumber:\tDefinition: Number assigned by a social security agency.\nCode: TXIN:\tTaxIdentificationNumber:\tDefinition: Number assigned by a tax authority to an entity.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account-based digital signature authentication.\nCode: ARPC:\tARPCVerification:\tDefinition: Response Card Cryptogram (ARPC)  verification.\nCode: ATCC:\tATC:\tDefinition: Application Transaction Counter\nCode: FBIG:\tOffLineBiographics:\tDefinition: Biographics authentication in an offline mode.\nCode: FBIO:\tOffLineBiometrics:\tDefinition: Biometrics authentication in an offline mode\nCode: OLDA:\tOffLineDataAuthentication:\tDefinition: Authentication of data in an offline mode\nCode: OLDS:\tOffLineDigitisedSignatureAnalysis:\tDefinition: Analysis of signature transmitted offline\nCode: OFPE:\tOffLinePINEncrypted:\tDefinition: PIN generated offline and transmitted encrypted\nCode: FCPN:\tOffLinePINInClear:\tDefinition: PIN generated offline and transmitted in clear\nCode: NBIG:\tOnLineBiographics:\tDefinition: Biographics authentication in an online mode.\nCode: PHOM:\tPhoneHome:\tDefinition: Customer home phone number.\nCode: PWOR:\tPhoneWork:\tDefinition: Customer work phone number\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature\nCode: QWAC:\tQualifiedCertificate:\tDefinition: QualifiedCertificate\nCode: THDS:\tThreeDS:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: CHSN:\tCardholderCertificateSerialNumber:\tDefinition: Serial number of the cardholder's certificate.\nCode: ACSN:\tAcceptorCertificateSerialNumber:\tDefinition: Serial number of the acceptor's certificate.\nCode: NTID:\tNationalIdentifier:\tDefinition: Nationally assigned identifier.",
            "enum": [
                "NPIN",
                "PPSG",
                "PSWD",
                "SCRT",
                "SCNL",
                "SNCT",
                "CPSG",
                "ADDB",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "PSVE",
                "CSEC",
                "ADDS",
                "MANU",
                "FPIN",
                "TOKP"
            ],
            "example": "ADDB",
            "type": "string"
        },
        "AuthenticationMethod8Code": {
            "description": "Method to authenticate the customer or its card.\nCode: UKNW:\tUnknownMethod:\tDefinition: Authentication method is performed unknown.\nCode: BYPS:\tBypass:\tDefinition: Authentication bypassed by the merchant.\nCode: NPIN:\tOnLinePIN:\tDefinition: On-line PIN authentication (Personal Identification Number).\nCode: FPIN:\tOfflinePIN:\tDefinition: Off-line PIN authentication (Personal Identification Number).\nCode: CPSG:\tSignatureCapture:\tDefinition: Electronic signature capture (handwritten signature).\nCode: PPSG:\tPaperSignature:\tDefinition: Handwritten paper signature.\nCode: MANU:\tManualVerification:\tDefinition: Manual verification, for example passport or drivers license.\nCode: MERC:\tMerchantAuthentication:\tDefinition: Merchant-related authentication.\nCode: SCRT:\tSecureCertificate:\tDefinition: Electronic commerce transaction secured with the X.509 certificate of a customer.\nCode: SNCT:\tSecureNoCertificate:\tDefinition: Secure electronic transaction without cardholder certificate.\nCode: SCNL:\tSecuredChannel:\tDefinition: Channel-encrypted transaction.\nCode: PSWD:\tPassword:\tDefinition: Authentication by a password.\nCode: ADDB:\tBillingAddressVerification:\tDefinition: Cardholder billing address verification.\nCode: BIOM:\tBiometry:\tDefinition: Biometric authentication of the cardholder.\nCode: CDHI:\tCardholderIdentificationData:\tDefinition: Cardholder data provided for verification, for instance social security number, driver license number, passport number.\nCode: CRYP:\tCryptogramVerification:\tDefinition: Verification of a cryptogram generated by a chip card or another device, for instance ARQC (Authorisation Request Cryptogram).\nCode: CSCV:\tCSCVerification:\tDefinition: Verification of Card Security Code.\nCode: PSVE:\tPassiveAuthentication:\tDefinition: Authentication based on statistical cardholder behaviour.\nCode: CSEC:\tSecureElectronicCommerce:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: ADDS:\tShippingAddressVerification:\tDefinition: Cardholder shipping address verification.\nCode: TOKN:\tTokenAuthentication:\tDefinition: Cryptogram generated by the token requestor or a customer device to validate the authorised use of a token.\nCode: TOKP:\tPaymentToken:\tDefinition: Verification or authentication related to the use of a payment token, for instance the validation of the authorised use of a token.\nCode: TOKA:\tAuthenticationToken:\tDefinition: A token is used to verify an already performed authentication.\nCode: MOBL:\tMobile:\tDefinition: Customer mobile device.\nCode: OTHR:\tOther:\tDefinition: Other customer authentication.\nCode: ADVF:\tAddressDigits:\tDefinition: Digits of the address.\nCode: ARNB:\tAlienRegistrationNumber:\tDefinition: Number assigned by a government agency to identify foreign nationals.\nCode: ARQC:\tARQCVerification:\tDefinition: Verification of a cryptogram generated by a chip card, for instance an ARQC (Authorisation Request Cryptogram).\nCode: BTHD:\tBirthDate:\tDefinition: Date of birth of a person.\nCode: CHDN:\tCardholderName:\tDefinition: Name of cardholder\nCode: COFB:\tCityOfBirth:\tDefinition: City of birth to authenticate a person.\nCode: CUID:\tCustomerIdentification:\tDefinition: Customer number used as a mechanism of authentication.\nCode: DRVI:\tDriverIdentification:\tDefinition: Identification of a driver in a fleet of vehicles.\nCode: DRLN:\tDriverLicenseNumber:\tDefinition: Number assigned by a driving license authority to a person driving a car.\nCode: EMAL:\tEmail:\tDefinition: Electronic mail address\nCode: EMIN:\tEmployeeIdentificationNumber:\tDefinition: Number assigned to an employee by an employer.\nCode: EMRN:\tEmployerIdentificationNumber:\tDefinition: Number assigned to an employer by a registration authority.\nCode: IDCN:\tIdentityCardNumber:\tDefinition: Number assigned by a national authority to an identity card.\nCode: OTPW:\tOneTimePassword:\tDefinition: Verification of a one-time password provided by the issuer.\nCode: OCHI:\tOtherCardholderIdentification:\tDefinition: Other cardholder data provided for identification.\nCode: OTHC:\tOtherCryptogram:\tDefinition: Verification of a cryptogram generated by a non-card form factor.\nCode: PASN:\tPassportNumber:\tDefinition: Number assigned by a passport authority to a passport.\nCode: PCDV:\tPostalCode:\tDefinition: Verification based on digits of the postal code.\nCode: SHAF:\tShippingAddressFrom:\tDefinition: Shipping address from verification.\nCode: SHAT:\tShippingAddressTo:\tDefinition: Shipping address to verification\nCode: CHSA:\tCardholderAddress:\tDefinition: Verification whether the address corresponds to the cardholder's one.\nCode: NVSC:\tNonVisibleCSC:\tDefinition: Non visible Card Security Code.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of verification defined at private level\nCode: PLOB:\tPlaceOfBirth:\tDefinition: Place of birth of a person.\nCode: SSNB:\tSocialSecurityNumber:\tDefinition: Number assigned by a social security agency.\nCode: TXIN:\tTaxIdentificationNumber:\tDefinition: Number assigned by a tax authority to an entity.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account-based digital signature authentication.\nCode: ARPC:\tARPCVerification:\tDefinition: Response Card Cryptogram (ARPC)  verification.\nCode: ATCC:\tATC:\tDefinition: Application Transaction Counter\nCode: FBIG:\tOffLineBiographics:\tDefinition: Biographics authentication in an offline mode.\nCode: FBIO:\tOffLineBiometrics:\tDefinition: Biometrics authentication in an offline mode\nCode: OLDA:\tOffLineDataAuthentication:\tDefinition: Authentication of data in an offline mode\nCode: OLDS:\tOffLineDigitisedSignatureAnalysis:\tDefinition: Analysis of signature transmitted offline\nCode: OFPE:\tOffLinePINEncrypted:\tDefinition: PIN generated offline and transmitted encrypted\nCode: FCPN:\tOffLinePINInClear:\tDefinition: PIN generated offline and transmitted in clear\nCode: NBIG:\tOnLineBiographics:\tDefinition: Biographics authentication in an online mode.\nCode: PHOM:\tPhoneHome:\tDefinition: Customer home phone number.\nCode: PWOR:\tPhoneWork:\tDefinition: Customer work phone number\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature\nCode: QWAC:\tQualifiedCertificate:\tDefinition: QualifiedCertificate\nCode: THDS:\tThreeDS:\tDefinition: Authentication performed during a secure electronic commerce transaction.\nCode: CHSN:\tCardholderCertificateSerialNumber:\tDefinition: Serial number of the cardholder's certificate.\nCode: ACSN:\tAcceptorCertificateSerialNumber:\tDefinition: Serial number of the acceptor's certificate.\nCode: NTID:\tNationalIdentifier:\tDefinition: Nationally assigned identifier.",
            "enum": [
                "TOKA",
                "ADDB",
                "BYPS",
                "BIOM",
                "CDHI",
                "CRYP",
                "CSCV",
                "MANU",
                "MERC",
                "MOBL",
                "FPIN",
                "NPIN",
                "OTHR",
                "PPSG",
                "PSVE",
                "PSWD",
                "TOKP",
                "SCRT",
                "SCNL",
                "CSEC",
                "SNCT",
                "ADDS",
                "CPSG",
                "TOKN",
                "UKNW"
            ],
            "type": "string"
        },
        "AuthenticationResult1Code": {
            "description": "Specifies the result of authentication done.\nCode: DENY:\tDenial:\tDefinition: The authentication didnï¿½t succeed.\nCode: CARD:\tNonParticipation:\tDefinition: The card does not participate in the authentication programme.\nCode: AUTH:\tUnableToAuthenticate:\tDefinition: The authentication couldnï¿½t be carried out.\nCode: MRCH:\tMerchantNotEnroled:\tDefinition: Merchant not enrolled in the authentication programme.\nCode: CRPT:\tWithCryptogram:\tDefinition: Authentication succeeded with a cryptogram.\nCode: UCRP:\tWithoutCryptogram:\tDefinition: Authentication succeeded without a cryptogram.",
            "enum": [
                "DENY",
                "MRCH",
                "CARD",
                "AUTH",
                "CRPT",
                "UCRP"
            ],
            "type": "string"
        },
        "BarcodeType1Code": {
            "description": "Type of BarCode coding.\nCode: EAN8:\tBarcodeEncodedAsEAN8:\tDefinition: Barcode encoded according to the EAN8 standard.\nCode: EA13:\tBarcodeEncodedAsEA13:\tDefinition: Barcode encoded according to the EAN13 standard.\nCode: C039:\tBarcodeEncodedAsCode39:\tDefinition: Barcode encoded according to the Code 39 standard.\nCode: UPCA:\tBarcodeEncodedAsUPCA:\tDefinition: Barcode encoded according to the UPCA standard.\nCode: C025:\tBarcodeEncodedAsCode25:\tDefinition: Barcode encoded according to the Code 25 standard.\nCode: C128:\tBarcodeEncodedAsCode128:\tDefinition: Barcode encoded according to the Code 128 standard.\nCode: P417:\tBarcodeEncodedAsPDF417:\tDefinition: Barcode encoded according to the PDF417 standard.\nCode: COQR:\tBarcodeEncodedAs2DQRCode:\tDefinition: Barcode encoded according to the 2Dimensions Quick Response Code Standard.",
            "enum": [
                "COQR",
                "C128",
                "C025",
                "C039",
                "EA13",
                "EAN8",
                "P417",
                "UPCA"
            ],
            "type": "string"
        },
        "BBANIdentifier": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{1,30}",
            "description": "Basic Bank Account Number (BBAN). Identifier used nationally by financial institutions, ie, in individual countries, generally as part of a National Account Numbering Scheme(s), which uniquely identifies the account of a customer.",
            "example": "BARC12345612345678"
        },
        "BusinessArea2Code": {
            "description": "Specifies the business context of the transaction\nCode: PPAY:\tPlainPayment:\tDefinition: The card is used to perform a plain payment.\nCode: OPMT:\tOpenpayment:\tDefinition: The card is used in a Transit business case where the fare amount is not known when the transaction is initiated.\nCode: TKNF:\tTransitKnownFare:\tDefinition: The card is used in a Transit business case where the fare amount is known when the transaction is initiated.\nCode: AIBD:\tArtificialIntelligenceBasedDecision:\tDefinition: The payment is initiated by an artificial intelligence based decision.\nCode: EOPT:\tEnergyOpenPayment:\tDefinition: Indicates when the card is used in an energy business case where the amount could not be assessed when the transaction is initiated.\nCode: TOPT:\tTransitOpenPayment:\tDefinition: Indicates when the card is used in a transit business case where the fare amount is not known when the transaction is initiated.",
            "enum": [
                "AIBD",
                "PPAY",
                "TKNF",
                "EOPT",
                "TOPT"
            ],
            "type": "string"
        },
        "BytePadding1Code": {
            "description": "Byte padding for a cypher block chaining mode encryption, if the padding is not implicit.\nCode: LNGT:\tLengthPadding:\tDefinition: Message to encrypt is completed by a byte value containing the total number of added bytes.\nCode: NUL8:\tNull80Padding:\tDefinition: Message to encrypt is completed by one bit of value 1, followed by null bits until the encryption block length is reached.\nCode: NULG:\tNullLengthPadding:\tDefinition: Message to encrypt is completed by null byte values, the last byte containing the total number of added bytes.\nCode: NULL:\tNullPadding:\tDefinition: Message to encrypt is completed by null bytes.\nCode: RAND:\tRandomPadding:\tDefinition: Message to encrypt is completed by random value, the last byte containing the total number of added bytes.",
            "enum": [
                "LNGT",
                "NUL8",
                "NULG",
                "NULL",
                "RAND"
            ],
            "type": "string"
        },
        "CardDataReading5Code": {
            "description": "Type of reading of the card data.\nCode: TAGC:\tTag:\tDefinition: Tag reading capabilities (RFID, etc.).\nCode: PHYS:\tPhysical:\tDefinition: Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.\nCode: BRCD:\tBarCode:\tDefinition: Bar code.\nCode: MGST:\tMagneticStripe:\tDefinition: Magnetic stripe.\nCode: CICC:\tICC:\tDefinition: ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.\nCode: DFLE:\tAccountData:\tDefinition: Account data on file.\nCode: CTLS:\tProximityReader:\tDefinition: Contactless proximity reader.\nCode: ECTL:\tEMVProximityReader:\tDefinition: Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).\nCode: CDFL:\tCardOnFile:\tDefinition: Card information are stored on a file.\nCode: UNKW:\tUnknown:\tDefinition: Unknown card reading capability.\nCode: SICC:\tSynchronousIntegratedCircuitCard:\tDefinition: Synchronous ICC - (Integrated Circuit Card) with contact.\nCode: ICCY:\tICCContact:\tDefinition: ICC contact capability\nCode: ICPY:\tICCProximity:\tDefinition: ICC contactless proximity\nCode: MICR:\tMagneticInkCharacterRecognition:\tDefinition: Recognition of magnetic ink characters\nCode: MLEY:\tManualEntry:\tDefinition: Manual, no terminal used.\nCode: MSIP:\tMSIProximity:\tDefinition: Magstripe image contactless proximity\nCode: OCRR:\tOpticalCharacterRecognition:\tDefinition: OCR either at time of transaction or after the event.\nCode: OPTC:\tOpticalCode:\tDefinition: Optical coded reading capabilities (e.g. barcode, QR code, etc.)\nCode: OTHN:\tOtherNational:\tDefinition: Other national capability type assigned at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card reading capability assigned on a private basis.\nCode: RFID:\tRFIDTag:\tDefinition: Radio Frequency Identification tag capabilities.\nCode: UNSP:\tUnspecified:\tDefinition: Unspecified capability.\nCode: KEEN:\tKeyEntered:\tDefinition: Key entered.\nCode: QRCD:\tQRCode:\tDefinition: Quick response code.\nCode: CAMR:\tCamera:\tDefinition: Card details captured via camera.\nCode: MBNK:\tMobileBankingApplication:\tDefinition: Card details were obtained via a mobile banking application.\nCode: TOKN:\tToken:\tDefinition: Card details were obtained via a token.",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL"
            ],
            "example": "TAGC",
            "type": "string"
        },
        "CardDataReading8Code": {
            "description": "Type of reading of the card data.\nCode: TAGC:\tTag:\tDefinition: Tag reading capabilities (RFID, etc.).\nCode: PHYS:\tPhysical:\tDefinition: Keyboard entry or OCR reading of embossing or printed data, either at time of transaction or after the event.\nCode: BRCD:\tBarCode:\tDefinition: Bar code.\nCode: MGST:\tMagneticStripe:\tDefinition: Magnetic stripe.\nCode: CICC:\tICC:\tDefinition: ICC (Integrated Circuit Card) with contact containing software applications conform to ISO 7816.\nCode: DFLE:\tAccountData:\tDefinition: Account data on file.\nCode: CTLS:\tProximityReader:\tDefinition: Contactless proximity reader.\nCode: ECTL:\tEMVProximityReader:\tDefinition: Contactless proximity reader, with application conform to the standard EMV (standard initiated by Europay, Mastercard and Visa).\nCode: CDFL:\tCardOnFile:\tDefinition: Card information are stored on a file.\nCode: UNKW:\tUnknown:\tDefinition: Unknown card reading capability.\nCode: SICC:\tSynchronousIntegratedCircuitCard:\tDefinition: Synchronous ICC - (Integrated Circuit Card) with contact.\nCode: ICCY:\tICCContact:\tDefinition: ICC contact capability\nCode: ICPY:\tICCProximity:\tDefinition: ICC contactless proximity\nCode: MICR:\tMagneticInkCharacterRecognition:\tDefinition: Recognition of magnetic ink characters\nCode: MLEY:\tManualEntry:\tDefinition: Manual, no terminal used.\nCode: MSIP:\tMSIProximity:\tDefinition: Magstripe image contactless proximity\nCode: OCRR:\tOpticalCharacterRecognition:\tDefinition: OCR either at time of transaction or after the event.\nCode: OPTC:\tOpticalCode:\tDefinition: Optical coded reading capabilities (e.g. barcode, QR code, etc.)\nCode: OTHN:\tOtherNational:\tDefinition: Other national capability type assigned at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card reading capability assigned on a private basis.\nCode: RFID:\tRFIDTag:\tDefinition: Radio Frequency Identification tag capabilities.\nCode: UNSP:\tUnspecified:\tDefinition: Unspecified capability.\nCode: KEEN:\tKeyEntered:\tDefinition: Key entered.\nCode: QRCD:\tQRCode:\tDefinition: Quick response code.\nCode: CAMR:\tCamera:\tDefinition: Card details captured via camera.\nCode: MBNK:\tMobileBankingApplication:\tDefinition: Card details were obtained via a mobile banking application.\nCode: TOKN:\tToken:\tDefinition: Card details were obtained via a token.",
            "enum": [
                "TAGC",
                "PHYS",
                "BRCD",
                "MGST",
                "CICC",
                "DFLE",
                "CTLS",
                "ECTL",
                "CDFL",
                "SICC",
                "UNKW",
                "QRCD",
                "OPTC"
            ],
            "example": "TAGC",
            "type": "string"
        },
        "CardFallback1Code": {
            "description": "Information about card entry mode fallback.\nCode: NFLB:\tNoFallback:\tDefinition: No card fall-back during the transaction in progress.\nCode: SFLB:\tFallbackAfterSuccess:\tDefinition: Card fall-back occurred during the transaction in progress. The previous transaction on the terminal was successful.\nCode: FFLB:\tFallbackAfterFailure:\tDefinition: Card fall-back occurred during the transaction in progress. The previous transaction on the terminal failed.",
            "enum": [
                "FFLB",
                "SFLB",
                "NFLB"
            ],
            "type": "string"
        },
        "CardholderVerificationCapability4Code": {
            "description": "Cardholder verification capabilities by the terminal.\nCode: MNSG:\tManualSignature:\tDefinition: Manual signature verification.\nCode: NPIN:\tOnLinePIN:\tDefinition: Online PIN (Personal Identification Number).\nCode: FCPN:\tOfflinePINClear:\tDefinition: Offline PIN in clear (Personal Identification Number).\nCode: FEPN:\tOfflinePINEncrypted:\tDefinition: Offline PIN encrypted (Personal Identification Number).\nCode: FDSG:\tOfflineDigitalSignature:\tDefinition: Offline digital signature analysis.\nCode: FBIO:\tOfflineBiometrics:\tDefinition: Offline biometrics.\nCode: MNVR:\tManualVerification:\tDefinition: Other manual verification, for example passport or drivers license.\nCode: FBIG:\tOfflineBiographics:\tDefinition: Offline biographics.\nCode: APKI:\tAccountDigitalSignature:\tDefinition: Account based digital signature.\nCode: PKIS:\tPKISignature:\tDefinition: PKI (Public Key Infrastructure) based digital signature.\nCode: CHDT:\tCardholderData:\tDefinition: Cardholder authentication data.\nCode: SCEC:\tSecureElectronicCommerce:\tDefinition: Three domain secure (three domain secure authentication of the cardholder).\nCode: UNKW:\tUnknown:\tDefinition: Unknown cardholder verification capability.\nCode: PCOD:\tPersonalCode:\tDefinition: Personal code of the customer for banking services.\nCode: NOVF:\tNoCapabilities:\tDefinition: No cardholder verification capability.\nCode: NBIO:\tOnLineBiometrics:\tDefinition: Online biometrics.\nCode: OTHR:\tOther:\tDefinition: Other cardholder verification capabilities.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of cardholder verification defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of cardholder verification defined in a private manner.\nCode: SIGN:\tSignature:\tDefinition: Handwritten signature verification\nCode: UNSP:\tUnspecified:\tDefinition: Cardholder verification capability unspecified.\nCode: VORN:\tVoiceRecognition:\tDefinition: Recognition by voice.\nCode: NOPN:\tNoPINEntry:\tDefinition: Device has no pin entry capability.\nCode: NOOP:\tNoOnLinePINEntry:\tDefinition: Device has no online pin entry capability.",
            "enum": [
                "APKI",
                "CHDT",
                "MNSG",
                "MNVR",
                "FBIG",
                "FBIO",
                "FDSG",
                "FCPN",
                "FEPN",
                "NPIN",
                "PKIS",
                "SCEC",
                "NBIO",
                "NOVF",
                "OTHR"
            ],
            "type": "string"
        },
        "CardIdentificationType1Code": {
            "description": "Type of account identification.\nCode: CPAN:\tPrimaryAccountNumber:\tDefinition: Standard card identification (card number).\nCode: ISO2:\tISOTrack2:\tDefinition: ISO Track 2 including identification.\nCode: BARC:\tBarCode:\tDefinition: Bar-code with a specific form of identification.\nCode: ACCT:\tAccountNumber:\tDefinition: Account identification.\nCode: PHON:\tPhoneNumber:\tDefinition: A phone number identifies the account on which the phone card is assigned.\nCode: UUID:\tUniversalUniqueIdentification:\tDefinition: A Universal Unique Identification code is set for identification.\nCode: PRIV:\tPrivativeNumbering:\tDefinition: An identification set by a privative application.",
            "enum": [
                "ACCT",
                "BARC",
                "ISO2",
                "PHON",
                "CPAN",
                "PRIV",
                "UUID"
            ],
            "type": "string"
        },
        "CardProductType1Code": {
            "description": "Type of card product.\nCode: COMM:\tCommercialCard:\tDefinition: Cards issued as a means of business expenditure, for instance business card or corporate card. The user could be a company, an individual for business expenses or a self employed for business purposes.\nCode: CONS:\tConsumerCard:\tDefinition: Cards issued as a means of personal expenditure. The user is always an individual.",
            "enum": [
                "COMM",
                "CONS"
            ],
            "type": "string"
        },
        "CheckType1Code": {
            "description": "Type of bank check.\nCode: PERS:\tPersonalCheck:\tDefinition: The check belongs to an individual.\nCode: BUSI:\tBusinessCheck:\tDefinition: The check belongs to a Company or a professional entity.\nCode: BANK:\tBankCheck:\tDefinition: The check is guaranteed by a bank.\nCode: PAYR:\tPayrollCheck:\tDefinition: Check issued by a company for the employees.\nCode: GOVC:\tGovernmentCheck:\tDefinition: Check issued by Government.",
            "enum": [
                "BANK",
                "BUSI",
                "GOVC",
                "PAYR",
                "PERS"
            ],
            "type": "string"
        },
        "ContentType2Code": {
            "description": "Identification of the type of a Cryptographic Message Syntax (CMS) data structure.\nCode: DATA:\tPlainData:\tDefinition: Generic, non cryptographic, or unqualified data content - (ASN.1 Object Identifier: id-data).\nCode: SIGN:\tSignedData:\tDefinition: Digital signature - (ASN.1 Object Identifier: id-signedData).\nCode: EVLP:\tEnvelopedData:\tDefinition: Encrypted data, with encryption key - (ASN.1 Object Identifier: id-envelopedData).\nCode: DGST:\tDigestedData:\tDefinition: Message digest - (ASN.1 Object Identifier: id-digestedData).\nCode: ECRP:\tEncryptedData:\tDefinition: Encrypted data - (ASN.1 Object Identifier: id-encryptedData).\nCode: AUTH:\tAuthenticatedData:\tDefinition: MAC (Message Authentication Code), with encryption key - (ASN.1 Object Identifier: id-ct-authData).\nCode: IFSE:\tISOFinancialServicesDataEncryption:\tDefinition: General data encryption that conforms to the ISO 13492 standard.",
            "enum": [
                "DATA",
                "SIGN",
                "EVLP",
                "DGST",
                "AUTH"
            ],
            "example": "DATA",
            "type": "string"
        },
        "CountryCode": {
            "type": "string",
            "pattern": "[A-Z]{2,2}",
            "description": "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).",
            "example": "BE"
        },
        "CryptographicKeyType3Code": {
            "description": "Codes for qualifying the type of cryptographic keys.\nCode: DESC:\tDES:\tDefinition: Data encryption standard.\nCode: AESC:\tAES:\tDefinition: Advanced encryption standard.\nCode: RSAC:\tRSA:\tDefinition: Rivest, Shamir and Adleman.\nCode: ECCC:\tECC:\tDefinition: Elliptic-curve cryptography.\nCode: AES2:\tAES128:\tDefinition: AES (Advanced Encryption Standard) 128 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 - November 6, 2001 - Advanced Encryption Standard).\nCode: EDE3:\tDES112:\tDefinition: Data encryption standard key of 112 bits (without the parity bits).\nCode: DKP9:\tDUKPT2009:\tDefinition: DUKPT (Derived Unique Key Per Transaction) key, as specified in ANSI X9.24-2009 Annex A.\nCode: AES9:\tAES192:\tDefinition: AES (Advanced Encryption Standard) encryption with a 192 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: AES5:\tAES256:\tDefinition: AES (Advanced Encryption Standard) encryption with a 256 bits cryptographic key as defined by the Federal Information Processing Standards (FIPS 197 ï¿½ November 6, 2001 - Advanced Encryption Standard).\nCode: EDE4:\tDES168:\tDefinition: Data encryption standard key of 168 bits (without the parity bits).\nCode: APPL:\tApplication:\tDefinition: Key used to protect application information.\nCode: DYNC:\tDynamic:\tDefinition: Any cryptographic key that can be downloaded.\nCode: DATA:\tData:\tDefinition: Key used to protect data in the messages.\nCode: KENC:\tKeyEncryption:\tDefinition: Key used to encrypt other keys.\nCode: WRKG:\tWorking:\tDefinition: Temporary key used to download keys.\nCode: PINK:\tPIN:\tDefinition: Key used to encrypt a PIN.\nCode: MACK:\tMAC:\tDefinition: Key used to generate the MAC of a message.\nCode: DKAE:\tDUKPTAES:\tDefinition: DUKPT AES (Derived Unique Key Per Transaction) algorithm.\nCode: UKPT:\tUKPT:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using Triple DES for encryption with a double length key (112 bits). FIPS PUB 46-3.\nCode: UKA8:\tUKPTAES128:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using AES (Advanced Encryption Standard) with a 128 bits length key. \r\nFIPS 197 - 6 November 2001).\nCode: UKA6:\tUKPTAES256:\tDefinition: UKPT (Unique Key Per Transaction). Encryption key using AES (Advanced Encryption Standard) with a  256 bits length key. \r\nFIPS 197 - 6 November 2001).\nCode: ISKW:\tISO20038KeyWrap:\tDefinition: ISO 20038 - Banking and related financial services - Key wrap using symmetric keys. Method using symmetric keys as the wrapping algorithm.",
            "enum": [
                "AES2",
                "EDE3",
                "DKP9",
                "AES9",
                "AES5",
                "EDE4"
            ],
            "example": "AES2",
            "type": "string"
        },
        "DataSetCategory18Code": {
            "description": "Category of data set.\nCode: SWPK:\tSoftwareModule:\tDefinition: Software module.\nCode: VDPR:\tVendorParameters:\tDefinition: Point of interaction parameters defined by the manufacturer for instance the PIN verification capabilities.\nCode: AQPR:\tAcquirerParameters:\tDefinition: Acquirer specific configuration parameters for the point of interaction (POI) system.\nCode: APPR:\tApplicationParameters:\tDefinition: Payment application specific configuration parameters for the point of interaction (POI) system.\nCode: MRPR:\tMerchantParameters:\tDefinition: Merchant configuration parameters for the point of interaction (POI).\nCode: TXCP:\tBatchCapture:\tDefinition: Batch upload of transaction data (data capture of a group of transactions).\nCode: AKCP:\tCaptureResponse:\tDefinition: Batch download response for the batch capture of transactions.\nCode: STRP:\tStatusReport:\tDefinition: Report of software configuration and parameter status.\nCode: DLGT:\tDelegationData:\tDefinition: Data needed to create a terminal management sub-domain.\nCode: MGTP:\tManagementPlan:\tDefinition: Configuration of management plan in the point of interaction.\nCode: SCPR:\tSecurityParameters:\tDefinition: Point of interaction parameters related to the security of software application and application protocol.\nCode: TRPR:\tTerminalParameters:\tDefinition: Point of interaction parameters attached to the terminal as serial number or physical capabilities.\nCode: PARA:\tParameters:\tDefinition: Any combination of configuration parameters for the point of interaction (POI).\nCode: MTMG:\tMasterTerminalManager:\tDefinition: The terminal manager is the master.\nCode: MTOR:\tMonitoring:\tDefinition: Monitoring of the terminal estate.\nCode: ACQP:\tAcquirerProtocolParameters:\tDefinition: Configuration parameters of the payment acquirer protocol.\nCode: APSB:\tApplicationParametersSubsetCreation:\tDefinition: Creation of a subset of the configuration parameters of an application.\nCode: KDWL:\tKeyDownload:\tDefinition: Download of cryptographic keys with the related information.\nCode: KMGT:\tKeyManagement:\tDefinition: Activate, deactivate or revoke loaded cryptographic keys.\nCode: RPRT:\tReporting:\tDefinition: Reporting on activity, status and error of a point of interaction.\nCode: TMSP:\tTMSProtocolParameters:\tDefinition: Configuration parameters for the TMS protocol.\nCode: ATMP:\tATMProtocol:\tDefinition: ATM protocol parameters, including the configuration of the hosts.\nCode: ATMC:\tATMConfiguration:\tDefinition: Configuration parameters of the ATM.\nCode: CRAP:\tCardApplication:\tDefinition: Configuration parameters of the card application.\nCode: CPRC:\tCardConfiguration:\tDefinition: Configuration of the cards accepted by the terminal.\nCode: OEXR:\tOfflineExchangeRate:\tDefinition: Local rates for currency exchanges.\nCode: AMNT:\tPreDefinedAmount:\tDefinition: Predefined amounts to be presented to the customer.\nCode: LOCC:\tLocationConfiguration:\tDefinition: Configuration of the location.\nCode: MNOC:\tMobileOperator:\tDefinition: Configuration of the mobile operator cards accepted by the terminal.\nCode: RCLE:\tReconciliationError:\tDefinition: Batch of transaction that have generated an error in the totals of the reconciliation.\nCode: CRTF:\tCertificateParameters:\tDefinition: Certificate provided by a terminal manager.\nCode: CMRQ:\tCertificateManagementRequest:\tDefinition: Trigger for CertificateManagementRequest.\nCode: LOGF:\tLogFile:\tDefinition: Any repository used for recording log traces.\nCode: SAPR:\tSaleToPOIProtocolParameters:\tDefinition: Parameters related to the Sale to POI protocol.\nCode: SACP:\tSaleComponent:\tDefinition: Component of the Sale system.\nCode: MDFL:\tMediaFile:\tDefinition: Media file managed by an application of the POI.\nCode: SOFT:\tSoftwareApplication:\tDefinition: Software Application or module of the POI.\nCode: CONF:\tConfigurationFile:\tDefinition: Configuration file relevant for the POI.\nCode: RPFL:\tReportFile:\tDefinition: Report file generated by the POI.\nCode: SPRP:\tServiceProviderParameters:\tDefinition: Service Provider specific parameters for the point of interaction (POI) system.\nCode: TPKG:\tTerminalPackages:\tDefinition: Package (e.g. software library) related to a POIComponent or the POI System.",
            "enum": [
                "AQPR",
                "APPR",
                "TXCP",
                "AKCP",
                "DLGT",
                "MGTP",
                "MRPR",
                "SCPR",
                "SWPK",
                "STRP",
                "TRPR",
                "VDPR",
                "PARA",
                "TMSP",
                "CRTF",
                "LOGF",
                "CMRQ",
                "MDFL",
                "CONF",
                "RPFL",
                "SAPR",
                "SPRP"
            ],
            "example": "AQPR",
            "type": "string"
        },
        "DecimalNumber": {
            "type": "string",
            "pattern": "^(\\d+){1,18}\\.?(\\d){1,17}$",
            "description": "Number of objects represented as a decimal number, for example 0.75 or 45.6.",
            "example": "123456789.123456789"
        },
        "DocumentType7Code": {
            "description": "Specifies a type of financial or commercial document.\nCode: MSIN:\tMeteredServiceInvoice:\tDefinition: Document is an invoice claiming payment for the supply of metered services, for example gas or electricity supplied to a fixed meter.\nCode: CNFA:\tCreditNoteRelatedToFinancialAdjustment:\tDefinition: Document is a credit note for the final amount settled for a commercial transaction.\nCode: DNFA:\tDebitNoteRelatedToFinancialAdjustment:\tDefinition: Document is a debit note for the final amount settled for a commercial transaction.\nCode: CINV:\tCommercialInvoice:\tDefinition: Document is an invoice.\nCode: CREN:\tCreditNote:\tDefinition: Document is a credit note.\nCode: DEBN:\tDebitNote:\tDefinition: Document is a debit note.\nCode: HIRI:\tHireInvoice:\tDefinition: Document is an invoice for the hiring of human resources or renting goods or equipment.\nCode: SBIN:\tSelfBilledInvoice:\tDefinition: Document is an invoice issued by the debtor.\nCode: RADM:\tRemittanceAdviceMessage:\tDefinition: Document is a remittance advice sent separately from the current transaction.\nCode: RPIN:\tRelatedPaymentInstruction:\tDefinition: Document is a linked payment instruction to which the current payment instruction is related, for example, in a cover scenario.\nCode: CMCN:\tCommercialContract:\tDefinition: Document is an agreement between the parties, stipulating the terms and conditions of the delivery of goods or services.\nCode: FXDR:\tForeignExchangeDealReference:\tDefinition: Document is a pre-agreed or pre-arranged foreign exchange transaction to which the payment transaction refers.\nCode: SOAC:\tStatementOfAccount:\tDefinition: Document is a statement of the transactions posted to the debtor's account at the supplier.\nCode: DISP:\tDispatchAdvice:\tDefinition: Document is a dispatch advice.\nCode: PUOR:\tPurchaseOrder:\tDefinition: Document is a purchase order.\nCode: SCOR:\tStructuredCommunicationReference:\tDefinition: Document is a structured communication reference provided by the creditor to identify the referred transaction.\nCode: BOLD:\tBillOfLading:\tDefinition: Document is a shipping notice.\nCode: VCHR:\tVoucher:\tDefinition: Document is an electronic payment document.\nCode: AROI:\tAccountReceivableOpenItem:\tDefinition: Document is a payment that applies to a specific source document.\nCode: TSUT:\tTradeServicesUtilityTransaction:\tDefinition: Document is a transaction identifier as assigned by the Trade Services Utility.\nCode: HRCP:\tCashierReceipt:\tDefinition: When the Sale system print the Cashier copy of the Payment receipt.\nCode: CRCP:\tCustomerReceipt:\tDefinition: When the Sale System requires\tthe POI system to print the Customer receipt.\nCode: JNRL:\tJournal:\tDefinition: When the POI or the Sale System wants to store a message on the journal printer or electronic journal of the Sale Terminal (it is sometimes a Sale Logging/Journal Printer).\nCode: SRCP:\tSaleReceipt:\tDefinition: When the Sale System requires the POI system to print the Sale receipt.",
            "enum": [
                "JNRL",
                "CRCP",
                "HRCP",
                "SRCP",
                "RPIN",
                "VCHR"
            ],
            "type": "string"
        },
        "EncryptionFormat2Code": {
            "description": "Format of data before encryption, if the format is not plaintext or implicit.\nCode: TR31:\tTR31:\tDefinition: Format of a cryptographic key specified by the ANSI X9 TR-31 standard.\nCode: TR34:\tTR34:\tDefinition: Format of a cryptographic key specified by the ANSI X9 TR-34 standard.\nCode: I238:\tISO20038KeyWrap:\tDefinition: Format of a cryptographic key specified by the ISO20038 standard.\nCode: CBCE:\tCBC:\tDefinition: Cipher Block Chaining mode of encryption\nCode: CTCE:\tCTCE:\tDefinition: CTC encryption mode.",
            "enum": [
                "TR31",
                "TR34",
                "I238"
            ],
            "type": "string"
        },
        "Exact3AlphaNumericText": {
            "type": "string",
            "pattern": "[a-zA-Z0-9]{3}",
            "description": "Specifies an alphanumeric string with a length of exact 3 characters."
        },
        "Exact3NumericText": {
            "type": "string",
            "pattern": "[0-9]{3}",
            "description": "Specifies a numeric string with an exact length of 3 digits."
        },
        "Exact4NumericText": {
            "type": "string",
            "pattern": "[0-9]{4}",
            "description": "Specifies a numeric string with an exact length of 4 digits."
        },
        "Exemption1Code": {
            "description": "Strong customer authentication exemption.\nCode: MINT:\tMerchantInitiatedTransaction:\tDefinition: Transaction is initiated by the Card Acceptor.\nCode: RECP:\tRecurringPayment:\tDefinition: Transaction is one of a series of recurring payment.\nCode: LOWA:\tLowAmountExemption:\tDefinition: Transaction's amount is low and could be processed without strong customer authentication.\nCode: TRAE:\tTransactionRiskAnalysisExemption:\tDefinition: According to the transaction risk analysis the strong customer authentication is not mandated.\nCode: TMBE:\tTrustedMerchantBeneficiaryExemption:\tDefinition: Cardholder has enrolled the Card Acceptor in the exemption list of strong customer authentication.\nCode: SCAD:\tStrongCustomerAuthenticationDelegation:\tDefinition: Card Acceptor is a strong customer authentication delegate.\nCode: SCPE:\tSecureCorporatePaymentExemption:\tDefinition: Transaction is a secure corporate payment.\nCode: PKGE:\tTransportFareOrParkingFeeUnattendedPaymentExemption:\tDefinition: Payment is processed in a environment where strong customer authentication is inappropriate.\nCode: PAAC:\tPaymentAccountExemption:\tDefinition: Payment account information exemption.\nCode: CTLS:\tContactlessExemption:\tDefinition: Contactless payment at point of sale exemption.\nCode: TRSP:\tTransferSamePersonExemption:\tDefinition: Credit transfer between accounts held by the same natural or legal person exemption.",
            "enum": [
                "LOWA",
                "MINT",
                "RECP",
                "SCPE",
                "SCAD",
                "TRAE",
                "PKGE",
                "TMBE"
            ],
            "type": "string"
        },
        "IBAN2007Identifier": {
            "type": "string",
            "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}",
            "description": "The International Bank Account Number is a code used internationally by financial institutions to uniquely identify the account of a customer at a financial institution as described in the 2007 edition of the ISO 13616 standard \"Banking and related financial services - International Bank Account Number (IBAN)\" and replaced by the more recent edition of the standard.",
            "example": "AT611904300234573201"
        },
        "ImpliedCurrencyAndAmount": {
            "type": "string",
            "maxLength": 19,
            "description": "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot.\nNote: a zero amount is considered a positive amount.",
            "example": "500000"
        },
        "InformationQualify1Code": {
            "description": "Qualification of the information to sent to an output logical device, to display or print to the Cashier or the Customer.\nCode: STAT:\tStatus:\tDefinition: The information is a new state on which the message sender is entering. For instance, during a payment, the POI could display to the Cashier that POI request an authorisation to the host acquirer.\nCode: ERRO:\tError:\tDefinition: The information is related to an error situation occurring on the message sender.\nCode: DISP:\tDisplay:\tDefinition: Standard display interface.\nCode: SOND:\tSound:\tDefinition: Standard sound interface.\nCode: INPT:\tInput:\tDefinition: Answer to a question or information to be entered by the Cashier or the Customer, at the request of the POI Terminal or the Sale Terminal.\nCode: POIR:\tPOIReplication:\tDefinition: Information displayed on the Cardholder POI interface, replicated on the Cashier interface.\nCode: CUSA:\tCustomerAssistance:\tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.\nCode: RCPT:\tReceipt:\tDefinition: Where you print the Payment receipt that could be located on the Sale System or in some cases a restricted Sale ticket on the POI Terminal.\nCode: DOCT:\tDocument:\tDefinition: When the POI System wants to print specific document (check, dynamic currency conversion ...). Used by the Sale System when the printer is not located on the Sale System.\nCode: VCHR:\tVoucher:\tDefinition: Coupons, voucher or special ticket generated by the POI or the Sale System and to be printed.",
            "enum": [
                "CUSA",
                "DISP",
                "DOCT",
                "ERRO",
                "INPT",
                "POIR",
                "RCPT",
                "SOND",
                "STAT",
                "VCHR"
            ],
            "type": "string"
        },
        "InputCommand1Code": {
            "description": "Type of requested input\nCode: GAKY:\tGetAnyKey:\tDefinition: Wait for a key pressed on the Terminal, to be able to read the message displayed on the Terminal.\nCode: GCNF:\tGetConfirmation:\tDefinition: Wait for a confirmation Yes (Y) or No (N) on the Sale System. Wait for a confirmation (Valid or Cancel button) on the POI Terminal. The result of the command is a Boolean: True or False.\nCode: SITE:\tSiteManager:\tDefinition: Wait for a confirmation Yes (Y) or No (N) of the Site Manager on the Sale System.\nCode: TXSG:\tTextString:\tDefinition: Wait for a string of alphanumeric characters.\nCode: DGSG:\tDigitString:\tDefinition: Wait for a string of digit characters.\nCode: DCSG:\tDecimalString:\tDefinition: Wait for a string of digit characters with a decimal point, the length range could be specified.\nCode: GFKY:\tGetFunctionKey:\tDefinition: Wait for a function key pressed on the Terminal: From POI, Valid, Clear, Correct, Generic Function key number. From Sale, Generic Function key.\nCode: GMNE:\tGetMenuEntry:\tDefinition: To choose an entry among a list of entries (all of them are not necessary selectable). The OutputFormat has to be MenuEntry.\nCode: PSWD:\tPassword:\tDefinition: Request to enter a password with masked characters while typing the password.\nCode: HTML:\tXHTMLText:\tDefinition: Wait for a XHTML data.\nCode: SIGN:\tSignature:\tDefinition: Request to wait for signature.",
            "enum": [
                "DCSG",
                "DGSG",
                "GAKY",
                "GCNF",
                "GFKY",
                "GMNE",
                "PSWD",
                "SITE",
                "TXSG",
                "HTML",
                "SIGN"
            ],
            "type": "string"
        },
        "ISO3NumericCountryCode": {
            "type": "string",
            "pattern": "[0-9]{3,3}",
            "description": "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Numeric-3 code). The code is checked against the list of country names coded with three digit characters, defined in the standard.",
            "example": "001"
        },
        "ISODate": {
            "type": "string",
            "pattern": "^\\d{4}-([0][1-9]|1[0-2])-([0][1-9]|[1-2]\\d|3[01])$",
            "description": "A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601."
        },
        "ISODateTime": {
            "type": "string",
            "pattern": "/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/",
            "description": "A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed."
        },
        "KeyUsage1Code": {
            "description": "Allowed usages of the key.\nCode: ENCR:\tEncryption:\tDefinition: Key may encrypt.\nCode: DCPT:\tDecryption:\tDefinition: Key may decrypt.\nCode: DENC:\tDataEncryption:\tDefinition: Key may encrypt data.\nCode: DDEC:\tDataDecryption:\tDefinition: Key may decrypt data.\nCode: TRNX:\tTranslateOutput:\tDefinition: Key may encrypt information after translation.\nCode: TRNI:\tTranslateInput:\tDefinition: Key may encrypt information before translation.\nCode: MACG:\tMessageAuthenticationCodeGeneration:\tDefinition: Key may generate message authentication codes (MAC).\nCode: MACV:\tMessageAuthenticationCodeVerification:\tDefinition: Key may verify message authentication codes (MAC).\nCode: SIGG:\tSignatureGeneration:\tDefinition: Key may generate digital signatures.\nCode: SUGV:\tSignatureVerification:\tDefinition: Key may verify digital signatures.\nCode: PINE:\tPINEncryption:\tDefinition: Key may encrypt personal identification numbers (PIN).\nCode: PIND:\tPINDecryption:\tDefinition: Key may decrypt personal identification numbers (PIN).\nCode: PINV:\tPINVerification:\tDefinition: Key may verify personal identification numbers (PIN).\nCode: KEYG:\tKeyGeneration:\tDefinition: Key may generate keys.\nCode: KEYI:\tKeyImport:\tDefinition: Key may import keys.\nCode: KEYX:\tKeyExport:\tDefinition: Key may export keys.\nCode: KEYD:\tKeyDerivation:\tDefinition: Key may derive keys.",
            "enum": [
                "ENCR",
                "DCPT",
                "DENC",
                "DDEC",
                "TRNI",
                "TRNX",
                "MACG",
                "MACV",
                "SIGG",
                "SUGV",
                "PINE",
                "PIND",
                "PINV",
                "KEYG",
                "KEYI",
                "KEYX",
                "KEYD"
            ],
            "example": "ENCR",
            "type": "string"
        },
        "LanguageCode": {
            "type": "string",
            "description": "Specifies a language.",
            "example": "ENG"
        },
        "LocationCategory3Code": {
            "description": "Indicates the type of integration of the POI terminal in the sale environment.\nCode: ABRD:\tAboard:\tDefinition: Aboard is used when the sale is done in a vehicle (e.g a bus, train, ship, airplane,\r\ntaxi, etc).\nCode: HOME:\tHome:\tDefinition: Customer home.\nCode: INDR:\tIndoor:\tDefinition: Indoor terminal.\nCode: IPMP:\tInsidePump:\tDefinition: Terminal incorporated in the pump dispensing petrol.\nCode: MOTO:\tMailOrderTelephoneOrder:\tDefinition: Mail order or telephone order.\nCode: MPOI:\tMultiplePOITerminal:\tDefinition: Multiple terminals linked to a unique sale terminal.\nCode: MPMP:\tMultiplePump:\tDefinition: Outdoor terminal serving several petrol pumps.\nCode: MSLE:\tMultipleSaleTerminal:\tDefinition: Terminal serving multiple sale terminals.\nCode: NMDC:\tNomadic:\tDefinition: Nomadic is used when the merchant is traveling to different locations (e.g fair or\r\nsport events, home delivery, food truck).\nCode: FIXD:\tPhysicalShop:\tDefinition: Fixed location, for example in a shop.\nCode: SSLE:\tSingleSaleTerminal:\tDefinition: Terminal linked to a unique sale terminal.\nCode: VNDG:\tVendingMachine:\tDefinition: Terminal integrated in a vending machine.\nCode: VIRT:\tVirtualShop:\tDefinition: Virtual Shop is used for any ecommerce solution.",
            "enum": [
                "INDR",
                "IPMP",
                "MPOI",
                "MPMP",
                "MSLE",
                "SSLE",
                "VNDG"
            ],
            "type": "string"
        },
        "LocationCategory4Code": {
            "description": "Indicates the type of integration of the POI terminal in the sale environment.\nCode: ABRD:\tAboard:\tDefinition: Aboard is used when the sale is done in a vehicle (e.g a bus, train, ship, airplane,\r\ntaxi, etc).\nCode: HOME:\tHome:\tDefinition: Customer home.\nCode: INDR:\tIndoor:\tDefinition: Indoor terminal.\nCode: IPMP:\tInsidePump:\tDefinition: Terminal incorporated in the pump dispensing petrol.\nCode: MOTO:\tMailOrderTelephoneOrder:\tDefinition: Mail order or telephone order.\nCode: MPOI:\tMultiplePOITerminal:\tDefinition: Multiple terminals linked to a unique sale terminal.\nCode: MPMP:\tMultiplePump:\tDefinition: Outdoor terminal serving several petrol pumps.\nCode: MSLE:\tMultipleSaleTerminal:\tDefinition: Terminal serving multiple sale terminals.\nCode: NMDC:\tNomadic:\tDefinition: Nomadic is used when the merchant is traveling to different locations (e.g fair or\r\nsport events, home delivery, food truck).\nCode: FIXD:\tPhysicalShop:\tDefinition: Fixed location, for example in a shop.\nCode: SSLE:\tSingleSaleTerminal:\tDefinition: Terminal linked to a unique sale terminal.\nCode: VNDG:\tVendingMachine:\tDefinition: Terminal integrated in a vending machine.\nCode: VIRT:\tVirtualShop:\tDefinition: Virtual Shop is used for any ecommerce solution.",
            "enum": [
                "ABRD",
                "NMDC",
                "FIXD",
                "VIRT"
            ],
            "type": "string"
        },
        "LoyaltyHandling1Code": {
            "description": "Possible types of Loyalty processing.\nCode: DENY:\tForbidden:\tDefinition: No loyalty card to read and loyalty transaction to process. \tAny attempt to enter a pure loyalty card is rejected.\nCode: PRCS:\tProcessed:\tDefinition: The loyalty transaction is already processed, no loyalty card or loyalty transaction to process.\nCode: ALLO:\tAllowed:\tDefinition: The loyalty is accepted, but the POI has not to require or ask a loyalty card. The loyalty is involved by the payment card (e.g. an hybrid or linked card). \nCode: PROP:\tProposed:\tDefinition: The loyalty is accepted, and the POI has to ask a loyalty card. If the Customer does not enter a loyalty card, no loyalty transaction is realised.\nCode: REQU:\tRequired:\tDefinition: The loyalty is required, and the POI refuses the processing \tof the message request if the cardholder does not enter a loyalty card.",
            "enum": [
                "ALLO",
                "DENY",
                "PRCS",
                "PROP",
                "REQU"
            ],
            "type": "string"
        },
        "Max10000Binary": {
            "contentEncoding": "base64",
            "description": "Specifies a binary string with a maximum length of 10000 binary bytes.",
            "maxLength": 10000,
            "minLength": 1,
            "type": "string"
        },
        "Max100KBinary": {
            "contentEncoding": "base64",
            "description": "Binary data of 100K maximum.",
            "maxLength": 102400,
            "minLength": 1,
            "type": "string"
        },
        "Max1025Text": {
            "type": "string",
            "maxLength": 1025,
            "minLength": 1,
            "description": "Specifies a character string with a maximum length of 1025 characters."
        },
        "Max104Text": {
            "type": "string",
            "maxLength": 104,
            "minLength": 1,
            "description": "Specifies a character string with a maximum length of 104 characters."
        },
        "Max10KBinary": {
            "type": "string",
            "maxLength": 10240,
            "contentEncoding": "base64"
        },
        "MemoryUnit1Code": {
            "description": "Unit of the memory size.\nCode: EXAB:\tExaByte:\tDefinition: Exa byte.\nCode: PETA:\tPetaByte:\tDefinition: Peta byte.\nCode: TERA:\tTeraByte:\tDefinition: Tera byte.\nCode: GIGA:\tGigaByte:\tDefinition: Giga byte.\nCode: MEGA:\tMegaByte:\tDefinition: Mega byte.\nCode: KILO:\tKiloByte:\tDefinition: Kilo byte.\nCode: BYTE:\tByte:\tDefinition: Byte.",
            "enum": [
                "BYTE",
                "EXAB",
                "GIGA",
                "KILO",
                "MEGA",
                "PETA",
                "TERA"
            ],
            "example": "BYTE",
            "type": "string"
        },
        "NetworkType1Code": {
            "description": "Type of communication network.\nCode: IPNW:\tInternetProtocol:\tDefinition: Protocol of an IP network.\nCode: PSTN:\tPublicTelephone:\tDefinition: Protocol of a Public Switched Telephone Network (PSTN).\nCode: HTTP:\tHTTP:\tDefinition: HTTP proxy.\nCode: SCK4:\tSock4:\tDefinition: Sock4 proxy.\nCode: SCK5:\tSock5:\tDefinition: Sock5 proxy.",
            "enum": [
                "IPNW",
                "PSTN"
            ],
            "type": "string"
        },
        "Number": {
            "type": "string",
            "description": "Number of objects represented as an integer.",
            "example": "123456789012345678"
        },
        "OnLineCapability1Code": {
            "description": "On-line and off-line capabilities of the POI (Point Of Interaction).\nCode: OFLN:\tOffLine:\tDefinition: Off-line only capable.\nCode: ONLN:\tOnLine:\tDefinition: On-line only capable.\nCode: SMON:\tSemiOffLine:\tDefinition: Off-line capable with possible on-line requests to the acquirer.\nCode: BOTH:\tBothOnLineAndOffLine:\tDefinition: Both online and offline",
            "enum": [
                "OFLN",
                "ONLN",
                "SMON"
            ],
            "example": "OFLN",
            "type": "string"
        },
        "OutputFormat1Code": {
            "description": "Message format.\nCode: TEXT:\tSimpleText:\tDefinition: Text without format attributes.\nCode: MREF:\tMessageReference:\tDefinition: Predefined configured messages, identified by a reference.\nCode: HTML:\tXHTML:\tDefinition: XHTML document which includes a subset of the XHTML output tag.\nCode: SREF:\tScreenReference:\tDefinition: Screen to display identified by a reference.\nCode: BARC:\tBarcode:\tDefinition: Barcode to output in several possible format.\nCode: MENT:\tMenuEntry:\tDefinition: A text to display as a menu before requesting an input.\nCode: FLNM:\tFileName:\tDefinition: File name and location identification for stored messages or data.\nCode: MMSI:\tMultiMediaMessaging:\tDefinition: Multi-media messaging service\nCode: OTHN:\tOtherNational:\tDefinition: Other type of output of message defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of output format defined at private level.\nCode: SMSI:\tShortMessageService:\tDefinition: Short message service\nCode: URLI:\tUniformResourceLocator:\tDefinition: Uniform Resource Locator (URL) reference for the message.\nCode: PLIN:\tPrintLine:\tDefinition: A formatted print line.\nCode: JSON:\tJSON:\tDefinition: Java Syntax Object Notation format.\nCode: XMLF:\tXML:\tDefinition: eXtensible Markup Language format.\nCode: EDIF:\tEDIFACT:\tDefinition: Electronic data interchange for administration, commerce and transport.\nCode: CSVF:\tCSV:\tDefinition: Comma separated value format.\nCode: JPEG:\tJPEG:\tDefinition: Joint Photographic Experts Group format.\nCode: PDFF:\tPDF:\tDefinition: Portable Document Format.\nCode: PNGF:\tPNG:\tDefinition: Portable Network Graphics format.\nCode: SVGF:\tSVG:\tDefinition: Scalable vector graphic format.",
            "enum": [
                "MREF",
                "TEXT",
                "HTML"
            ],
            "type": "string"
        },
        "OutputFormat3Code": {
            "description": "Type of output format.\nCode: TEXT:\tSimpleText:\tDefinition: Text without format attributes.\nCode: MREF:\tMessageReference:\tDefinition: Predefined configured messages, identified by a reference.\nCode: HTML:\tXHTML:\tDefinition: XHTML document which includes a subset of the XHTML output tag.\nCode: SREF:\tScreenReference:\tDefinition: Screen to display identified by a reference.\nCode: BARC:\tBarcode:\tDefinition: Barcode to output in several possible format.\nCode: MENT:\tMenuEntry:\tDefinition: A text to display as a menu before requesting an input.\nCode: FLNM:\tFileName:\tDefinition: File name and location identification for stored messages or data.\nCode: MMSI:\tMultiMediaMessaging:\tDefinition: Multi-media messaging service\nCode: OTHN:\tOtherNational:\tDefinition: Other type of output of message defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of output format defined at private level.\nCode: SMSI:\tShortMessageService:\tDefinition: Short message service\nCode: URLI:\tUniformResourceLocator:\tDefinition: Uniform Resource Locator (URL) reference for the message.\nCode: PLIN:\tPrintLine:\tDefinition: A formatted print line.\nCode: JSON:\tJSON:\tDefinition: Java Syntax Object Notation format.\nCode: XMLF:\tXML:\tDefinition: eXtensible Markup Language format.\nCode: EDIF:\tEDIFACT:\tDefinition: Electronic data interchange for administration, commerce and transport.\nCode: CSVF:\tCSV:\tDefinition: Comma separated value format.\nCode: JPEG:\tJPEG:\tDefinition: Joint Photographic Experts Group format.\nCode: PDFF:\tPDF:\tDefinition: Portable Document Format.\nCode: PNGF:\tPNG:\tDefinition: Portable Network Graphics format.\nCode: SVGF:\tSVG:\tDefinition: Scalable vector graphic format.",
            "enum": [
                "BARC",
                "MENT",
                "MREF",
                "SREF",
                "TEXT",
                "HTML"
            ],
            "type": "string"
        },
        "PartyType33Code": {
            "description": "Identification of the type of entity involved in a transaction.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS",
                "MTMG",
                "TAXH",
                "TMGT"
            ],
            "example": "OPOI",
            "type": "string"
        },
        "PartyType3Code": {
            "description": "Identification of the type of entity involved in a transaction.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "OPOI",
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "DLIS"
            ],
            "example": "OPOI",
            "type": "string"
        },
        "PartyType4Code": {
            "description": "Entity assigning an identification (for example merchant, acceptor, acquirer, tax authority, etc.).\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "MERC",
                "ACCP",
                "ITAG",
                "ACQR",
                "CISS",
                "TAXH"
            ],
            "example": "MERC",
            "type": "string"
        },
        "PartyType7Code": {
            "description": "Party that communicate with a POI component (Point of Interaction), using a communication device.\nCode: SALE:\tSaleSystem:\tDefinition: Party selling goods and services.\nCode: PCPT:\tPOIComponent:\tDefinition: Party component of a POI system or POI terminal (Point of Interaction).\nCode: ISUR:\tIssuer:\tDefinition: Issuer is the entitled party.\nCode: HLDR:\tHolder:\tDefinition: Holder is the entitled party.\nCode: INVE:\tInvestor:\tDefinition: Party, either an individual or organisation, whose assets are being invested.\nCode: EXEC:\tExecutingFirm:\tDefinition: Party that identifies an executing / give-up broker.\nCode: BROK:\tBrokerOfCredit:\tDefinition: Party that receives the trade credit.\nCode: CORR:\tCorrespondentClearingFirm:\tDefinition: Party that is going to carry the position on their books at another clearinghouse (exchanges).\nCode: COFI:\tContraFirm:\tDefinition: Party that is the counterparty in a trade.\nCode: COCL:\tContraClearingFirm:\tDefinition: Party that is the clearing firm of the counterparty in a trade.\nCode: UNDE:\tUnderlyingContraFirm:\tDefinition: Party (broker or other firm), which is the contra side of the trade for the underlying security.\nCode: GIVE:\tGiveUpClearingFirm:\tDefinition: Party to which the trade is given up (carries the position that results from a trade).\nCode: ORDE:\tOrderOriginationFirm:\tDefinition: Party that originates an order.\nCode: SPON:\tSponsoringFirm:\tDefinition: Party (member of an exchange)that is sponsoring an entering firm to send orders directly to the exchange.\nCode: CLEA:\tClearingfirm:\tDefinition: Party (broker) that settles security transactions from another broker for a fee = take up broker.\nCode: INTR:\tIntroducingFirm:\tDefinition: Party that can relay an order directly to the trading floor, or give clients direct access to the floor. The introducing firm delegates the work of the floor operation, trade execution and accounting.\nCode: ENTE:\tEnteringFirm:\tDefinition: Party that has recorded or reported an execution of a trade. When an entering firm that is not a party to a trade enters the trade into a trade recording system, any inquiries can be directed to the appropriate source.\nCode: CLIE:\tClient:\tDefinition: A client is identified in third party-transactions or for investor in intermediary transactions.\nCode: STEP:\tStepInBroker:\tDefinition: Broker to which the investment manager directs the execution of a portion of the trade.\nCode: AFFI:\tAffirmingParty:\tDefinition: Party (buyer or seller) that positively affirms the details of a previously agreed security trade confirmation.\nCode: ETC1:\tETCServiceProvider1:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 1.\nCode: ETC2:\tETCServiceProvider2:\tDefinition: Party acting as the Electronic Trade Confirmation (ETC) service provider 2.\nCode: RQBR:\tRequestedBroker:\tDefinition: In a directed order, broker with which the Receiver of the message is requested to execute the order.\nCode: TAXH:\tTaxAuthority:\tDefinition: Tax authority.\nCode: DLIS:\tDelegateIssuer:\tDefinition: Party to whom the card issuer delegates to authorise card payment transactions.\nCode: OPOI:\tOriginatingPOI:\tDefinition: Point Of Interaction initiating the card payment transaction.\nCode: CISS:\tCardIssuer:\tDefinition: Party that issues cards.\nCode: ACCP:\tAcceptor:\tDefinition: Card acceptor, party accepting the card and presenting transaction data to the acquirer.\nCode: MERC:\tMerchant:\tDefinition: Merchant providing goods and service in the card payment transaction.\nCode: ACQR:\tAcquirer:\tDefinition: Entity acquiring card transactions.\nCode: ITAG:\tIntermediaryAgent:\tDefinition: Party acting on behalf of other parties to process or forward data to other parties.\nCode: MTMG:\tMasterTerminalManager:\tDefinition: Responsible for the maintenance of a card payment acceptance terminal.\nCode: TMGT:\tTerminalManager:\tDefinition: Responsible for one or several maintenance functions of a card payment acceptance terminal.\nCode: ACQP:\tAcquirerProcessor:\tDefinition: Entity providing acquiring card payment processing services on behalf on an acquirer.\nCode: CISP:\tCardIssuerProcessor:\tDefinition: Entity providing issuing card payment processing services on behalf on an issuer.\nCode: CSCH:\tCardScheme:\tDefinition: Entity defining rules and procedures for card payment transactions acting as an intermediary between an acquirer and an issuer.\nCode: SCHP:\tCardSchemeProcessor:\tDefinition: Entity providing card payment processing services acting on behalf of a card scheme.\nCode: ATMG:\tATMManager:\tDefinition: Entity managing the ATM.\nCode: HSTG:\tHostingEntity:\tDefinition: Entity hosting the ATM.\nCode: OATM:\tOriginatingATM:\tDefinition: ATM initiating the transaction.\nCode: OTRM:\tOriginatingTerminal:\tDefinition: Application on the terminal which has initiated the transaction.\nCode: ICCA:\tCardApplication:\tDefinition: Application in the smart card.\nCode: PSYS:\tPOISystem:\tDefinition: Configuration to apply to the whole POI system.\nCode: PGRP:\tPOIGroup:\tDefinition: Configuration to apply to a subset of the whole POI system.\nCode: PSNG:\tSinglePOI:\tDefinition: Configuration to apply to a single POI terminal.\nCode: BKAF:\tAccountFromBank:\tDefinition: The bank of the source account.\nCode: BKAT:\tAccountToBank:\tDefinition: The bank of the destination account.\nCode: AGNT:\tAgent:\tDefinition: Entity providing card payment processing services acting as an intermediary between an acquirer and an issuer.\nCode: CRDH:\tCardholder:\tDefinition: Holder of a payment card.\nCode: CLRA:\tClearingAgent:\tDefinition: Agent in charge of clearing payment or related transactions.\nCode: GVIU:\tGovernmentInvestigationUnit:\tDefinition: Government organisation investigation unit. \nCode: OTHN:\tOtherNational:\tDefinition: Other card payment entity type defined at national level\nCode: OTHP:\tOtherPrivate:\tDefinition: Other card payment entity type defined at private level\nCode: PISP:\tPaymentInitiationServiceProvider:\tDefinition: Payment Initiation Service Provider (PISP)\nCode: PASP:\tPaymentServiceProvider:\tDefinition: Entity provding payments services.\nCode: POOI:\tPointOfInteraction:\tDefinition: Party in charge of controlling or supervising a card acceptance Point of Interaction\nCode: SETA:\tSettlementAgent:\tDefinition: Agent in charge of the settlement of a payment or related transaction.\nCode: WLPR:\tWalletProvider:\tDefinition: Provider of an electronic wallet",
            "enum": [
                "ACQR",
                "ITAG",
                "PCPT",
                "TMGT",
                "SALE"
            ],
            "example": "ACQR",
            "type": "string"
        },
        "PINFormat3Code": {
            "description": "PIN (Personal Identification Number) format used before encryption.\nCode: ISO0:\tISO0:\tDefinition: PIN diversified with the card account number, conforming to the standard ISO 9564-2.\nCode: ISO1:\tISO1:\tDefinition: PIN completed with random padding characters, conforming to the standard ISO 9564-2.\nCode: ISO2:\tISO2:\tDefinition: PIN without diversification characters, conforming to the standard ISO 9564-2.\nCode: ISO3:\tISO3:\tDefinition: PIN diversified with the card account number and random characters, conforming to the standard ISO 9564-2.\nCode: ISO4:\tISO4:\tDefinition: PIN format used with AES encryption, conforming to the new ISO SC2 format.\nCode: ISO5:\tISO5:\tDefinition: Alternative PIN format used with AES encryption, conforming to the new ISO SC2 format.\nCode: ANSI:\tANSI0:\tDefinition: ANSI 0 PIN block format.\nCode: BNCM:\tBancomat:\tDefinition: Italian Bancomat PIN block format.\nCode: BKSY:\tBanksys:\tDefinition: Banksys PIN block format.\nCode: DBLD:\tDiebold:\tDefinition: Diebold PIN block format.\nCode: DBLC:\tDieboldCO:\tDefinition: Diebold CO PIN block format.\nCode: ECI2:\tECI2:\tDefinition: ECI2 PIN block format.\nCode: ECI3:\tECI3:\tDefinition: ECI3 PIN block format.\nCode: EMVS:\tEMVRSA:\tDefinition: EMV ISO2 PIN block format encrypted with the EMV RSA cryptographic key for the PIN.\nCode: IBM3:\tIBM3624:\tDefinition: IBM 3624 PIN block format.\nCode: VIS2:\tVISA2:\tDefinition: VISA2 PIN block format.\nCode: VIS3:\tVISA3:\tDefinition: VISA3 PIN block format.",
            "enum": [
                "ISO0",
                "ISO1",
                "ISO2",
                "ISO3",
                "ISO4",
                "ISO5"
            ],
            "example": "ISO0",
            "type": "string"
        },
        "POICommunicationType2Code": {
            "description": "Low level communication of the hardware or software component toward another component or an external entity.\nCode: USBH:\tUSBHost:\tDefinition: Communication with a host from an USB port.\nCode: USBD:\tUSBDevice:\tDefinition: Communication with a USB stick or any USB device.\nCode: ETHR:\tEthernet:\tDefinition: Ethernet port to communicate.\nCode: WIFI:\tWifi:\tDefinition: Wifi communication with another component.\nCode: PSTN:\tPSTN:\tDefinition: Communication with a host using Public Switching Telephone Network.\nCode: BLTH:\tBluetooth:\tDefinition: Communication with a host using Bluetooth.\nCode: GSMF:\tGSM:\tDefinition: Communication with a host using GSM.\nCode: GPRS:\tGPRS:\tDefinition: Communication with a host using GPRS.\nCode: RS23:\tRS232:\tDefinition: Serial port to communicate.\nCode: WT2G:\tWirelessTechnology2G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 2G technology (e.g EDGE or PDC).\nCode: WT3G:\tWirelessTechnology3G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 3G technology.\nCode: WT4G:\tWirelessTechnology4G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 4G technology.\nCode: WT5G:\tWirelessTechnology5G:\tDefinition: Includes all communication technologies which can be qualified as being part of the 5G technology.",
            "enum": [
                "BLTH",
                "ETHR",
                "GPRS",
                "GSMF",
                "PSTN",
                "RS23",
                "USBD",
                "USBH",
                "WIFI",
                "WT2G",
                "WT3G",
                "WT4G",
                "WT5G"
            ],
            "example": "BLTH",
            "type": "string"
        },
        "POIComponentAssessment1Code": {
            "description": "Type of assessment of a POI component (Point of Interaction).\nCode: EVAL:\tEvaluation:\tDefinition: Evaluation by a lab or a tool.\nCode: CERT:\tCertification:\tDefinition: Certification number delivered by a certification body.\nCode: APPL:\tApproval:\tDefinition: Approval number delivered by an approval centre.",
            "enum": [
                "APPL",
                "CERT",
                "EVAL"
            ],
            "example": "APPL",
            "type": "string"
        },
        "POIComponentStatus1Code": {
            "description": "Status of a component belonging to a POI Terminal (Point of Interaction).\nCode: WAIT:\tWaitingActivation:\tDefinition: Component not yet activated.\nCode: OPER:\tInOperation:\tDefinition: Component activated and in operation.\nCode: OUTD:\tOutOfOrder:\tDefinition: Component not working properly.\nCode: DACT:\tDeactivated:\tDefinition: Component has been deactivated.",
            "enum": [
                "WAIT",
                "OUTD",
                "OPER",
                "DACT"
            ],
            "example": "WAIT",
            "type": "string"
        },
        "POIComponentType6Code": {
            "description": "Type of component belonging to a POI (Point of Interaction) Terminal.\nCode: SOFT:\tSoft:\tDefinition: Payment or other software application.\nCode: EMVK:\tEMVKernel:\tDefinition: EMV application kernel (EMV is the chip card specifications initially defined by Eurocard, Mastercard and Visa).\nCode: EMVO:\tEMVLevel1:\tDefinition: EMV physical interface (EMV is the chip card specifications initially defined by Eurocard, Mastercard and Visa).\nCode: MRIT:\tMerchantInterface:\tDefinition: Merchant interface.\nCode: CHIT:\tCardholderInterface:\tDefinition: Cardholder Interface.\nCode: SECM:\tSecureModule:\tDefinition: Security module.\nCode: PEDV:\tPINEntryDevice:\tDefinition: Personal identification number (or PIN) entry device (PED).\nCode: AQPR:\tAcquirerParameters:\tDefinition: Acquirer specific configuration parameters for the point of interaction (POI) system.\nCode: MRPR:\tMerchantParameters:\tDefinition: Merchant configuration parameters for the point of interaction (POI).\nCode: VDPR:\tVendorParameters:\tDefinition: Point of interaction parameters defined by the manufacturer for instance the PIN verification capabilities.\nCode: AQPP:\tAcquirerProtocolParameters:\tDefinition: Parameters for acquirer interface of the point of interaction, including acquirer host configuration parameters.\nCode: APPR:\tApplicationParameters:\tDefinition: Parameters of a payment application running on the point of interaction.\nCode: DVCE:\tDevice:\tDefinition: Device sub-component of a component of the point of interaction.\nCode: DRVR:\tDriver:\tDefinition: Driver module of the point of interaction.\nCode: MDWR:\tMiddleware:\tDefinition: Software module of the point of interaction.\nCode: OPST:\tOperatingSystem:\tDefinition: Software that manages hardware to provide common services to the applications.\nCode: APLI:\tPaymentApplication:\tDefinition: Payment application software.\nCode: SCPR:\tSecurityParameters:\tDefinition: Security parameters of the point of interaction.\nCode: SERV:\tServer:\tDefinition: Payment server of a point of interaction system.\nCode: TERM:\tTerminal:\tDefinition: Payment terminal point of interaction.\nCode: TLPR:\tTerminalParameters:\tDefinition: Manufacturer configuration parameters of the point of interaction.\nCode: CRTF:\tCertificateParameters:\tDefinition: Certificate provided by a terminal manager.\nCode: TMSP:\tTMSProtocolParameters:\tDefinition: Configuration parameters for the TMS protocol.\nCode: SAPR:\tSaleToPOIProtocolParameters:\tDefinition: Parameters related to the Sale to POI protocol.\nCode: SACP:\tSaleComponent:\tDefinition: Component of the Sale system.\nCode: LOGF:\tLogFile:\tDefinition: Any repository used for recording log traces.\nCode: MDFL:\tMediaFile:\tDefinition: Media file managed by an application of the POI.\nCode: CONF:\tConfigurationFile:\tDefinition: Configuration file relevant for the POI.\nCode: RPFL:\tReportFile:\tDefinition: Report file generated by the POI.",
            "enum": [
                "AQPP",
                "APPR",
                "TLPR",
                "SCPR",
                "SERV",
                "TERM",
                "DVCE",
                "SECM",
                "APLI",
                "EMVK",
                "EMVO",
                "MDWR",
                "DRVR",
                "OPST",
                "MRPR",
                "CRTF",
                "TMSP",
                "SACP",
                "SAPR",
                "LOGF",
                "MDFL",
                "SOFT",
                "CONF",
                "RPFL"
            ],
            "example": "AQPP",
            "type": "string"
        },
        "QRCodeEncodingMode1Code": {
            "description": "Encoding Mode of Quick Response Code.\nCode: NUME:\tNumeric:\tDefinition: Numeric value provided in Barcode field.\nCode: ALFA:\tAlphanumeric:\tDefinition: Alphanumeric value provided in Barcode field.\nCode: BINA:\tBinary:\tDefinition: Binary value provided in Quick Response Code Binary Value.\nCode: KANJ:\tKanji:\tDefinition: Kanji value provided in Quick Response Code Binary Value.",
            "enum": [
                "ALFA",
                "BINA",
                "KANJ",
                "NUME"
            ],
            "type": "string"
        },
        "QRCodeErrorCorrection1Code": {
            "description": "Error Correction mode of Quick Response Code.\nCode: L007:\tErrorCorrection7Percent:\tDefinition: Reed-Solomon error correction  7%\nCode: M015:\tErrorCorrection15Percent:\tDefinition: Reed-Solomon error correction 15%\nCode: Q025:\tErrorCorrection25Percent:\tDefinition: Reed-Solomon error correction 25%\nCode: H030:\tErrorCorrection30Percent:\tDefinition: Reed-Solomon error correction 30%",
            "enum": [
                "M015",
                "Q025",
                "H030",
                "L007"
            ],
            "type": "string"
        },
        "Response11Code": {
            "description": "Result of the processing of the message\nCode: DECL:\tDeclined:\tDefinition: Service is declined.\nCode: APPR:\tApproved:\tDefinition: Service has been successfuly provided.\nCode: PART:\tPartialApproved:\tDefinition: Service has been partialy provided.\nCode: TECH:\tTechnicalError:\tDefinition: Service cannot be provided for technical reason (eg timeout contacting the Issuer, security problem).\nCode: FRTH:\tFurtherAction:\tDefinition: Further action required to complete the transaction, for instance a referral.\nCode: UNPR:\tNotProcessed:\tDefinition: Advice message could not be processed.\nCode: PRCS:\tProcessed:\tDefinition: Advice message is processed.\nCode: FAIL:\tFailure:\tDefinition: Processing of the request fails for various reasons. Some further processing according to the type of requested service, the context of the process, and some additional precision about the failure notified in the ErrorCondition data element.\nCode: SUCC:\tSuccess:\tDefinition: Processing OK. Information related to the result of the processing is contained in other parts of the response message.\nCode: DFRD:\tDeferred:\tDefinition: Procesing of the service is deferred.\nCode: INPS:\tInProgress:\tDefinition: Request is still in progress.\nCode: NRTD:\tNoReasonToDecline:\tDefinition: Validate the data that couold be verified.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of processing result defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of processing result defined at private level.\nCode: OTRD:\tOtherResult:\tDefinition: Other type of result.\nCode: PPRC:\tPartiallyProcessed:\tDefinition: Processing of the service has been partially performed.\nCode: REJT:\tRejected:\tDefinition: Service was rejected.\nCode: UNRV:\tUnderReview:\tDefinition: Service is under review.\nCode: SUSP:\tSuspended:\tDefinition: Transaction has been received but hasn't been processed.\nCode: WARN:\tWarning:\tDefinition: An additional Response Code, mainly a functional one, should be considered to identify the outcome of the request.",
            "enum": [
                "WARN",
                "FAIL",
                "SUCC"
            ],
            "type": "string"
        },
        "RetailerMessage1Code": {
            "description": "Identifies the type of process related to the message.\nCode: SFSQ:\tSaleFinancialServiceRequest:\tDefinition: Request a financial service like payment, reversal, loyalty, Balance Inquiry, etc.\nCode: SFSP:\tSaleFinancialServiceResponse:\tDefinition: Response to a financial service request.\nCode: SFRQ:\tSaleFinancialReconciliationRequest:\tDefinition: Request a reconciliation (different types) between Sale System and POI System.\nCode: SFRP:\tSaleFinancialReconciliationResponse:\tDefinition: Response to a Reconciliation Request.\nCode: SASQ:\tSessionManagementRequest:\tDefinition: Request the management of a session: login, logout and diagnosis services. Initiated by the Sale system.\nCode: SASP:\tSessionManagementResponse:\tDefinition: Response to a session management request to initiate/terminate a session.\nCode: SAAQ:\tAdminRequest:\tDefinition: To select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.\nCode: SAAP:\tAdminResponse:\tDefinition: Response to the Admin request.\nCode: SARQ:\tReportRequest:\tDefinition: To request, by the Sale System, a report on a list of transactions on the POI system, or the status of a transaction.\nCode: SARP:\tReportResponse:\tDefinition: Response to a Report request.\nCode: SSAB:\tAbort:\tDefinition: Abort the current process or the last request.\nCode: SSEN:\tEventNotification:\tDefinition: Notify the other party of an event that occurs on its side.\nCode: SSRJ:\tRejection:\tDefinition: Reject a previous received message, for technical or functional reasons.\nCode: SSMQ:\tMessageStatusRequest:\tDefinition: Request the status of a previous message for which the Sale system has no response.\nCode: SSMR:\tMessageStatusResponse:\tDefinition: Response to a Message Status request.\nCode: SDDR:\tDeviceRequest:\tDefinition: Request one or several functions of the device, from user Interface or payment peripherals on the POI system or on the Sale system. Functions can be Display, Input, Print, play sound, Card reader capabilities or Transmit a message.\nCode: SDDP:\tDeviceResponse:\tDefinition: Response to a Device request.",
            "enum": [
                "SSAB",
                "SAAQ",
                "SAAP",
                "SDDR",
                "SDDP",
                "SSEN",
                "SSMQ",
                "SSMR",
                "SSRJ",
                "SARQ",
                "SARP",
                "SFRP",
                "SFRQ",
                "SFSQ",
                "SFSP",
                "SASQ",
                "SASP"
            ],
            "type": "string"
        },
        "RetailerResultDetail1Code": {
            "description": "Result of the processing of the message\nCode: ABRT:\tAborted:\tDefinition: The Initiator of the request has sent an Abort message request, which was accepted and processed.\nCode: BUSY:\tBusy:\tDefinition: The system is busy, try later.\nCode: CANC:\tCancel:\tDefinition: The user has aborted the transaction on the PED keyboard, for instance during PIN entering.\nCode: DEVO:\tDeviceOut:\tDefinition: Device out of order.\nCode: ICAR:\tInsertedCard:\tDefinition: If the Input Device request a NotifyCardInputFlag and the Customer enters a card in the card reader without answers to the Input command, the POI abort the Input command processing, and answer a dedicated ErrorCondition value in the Input response message.\nCode: WIPG:\tInProgress:\tDefinition: The transaction is still in progress and then the command cannot be processed.\nCode: LOUT:\tLoggedOut:\tDefinition: Not logged in.\nCode: NALW:\tNotAllowed:\tDefinition: A service request is sent during a Service dialogue. A combination of services not possible to provide. During the DeviceInitialisationCardReader message processing, the user has entered a card which has to be protected by the POI, and cannot be processed with this device request from the external, and then the Sale System.\nCode: TNFD:\tNotFound:\tDefinition: The transaction is not found (e.g. for a reversal or a repeat).\nCode: PAYR:\tPaymentRestriction:\tDefinition: Some sale items are not payable by the card proposed by the Customer.\nCode: REFU:\tRefusal:\tDefinition: The transaction is refused by the host or by the local rules associated to the card or the POI.\nCode: UNVD:\tUnavailableDevice:\tDefinition: The hardware is not available (absent, not configured...).\nCode: UNVS:\tUnavailableService:\tDefinition: The service is not available (not implemented, not configured, protocol version too old...).\nCode: IVCA:\tInvalidCard:\tDefinition: The card entered by the Customer cannot be processed by the POI because this card is not configured in the system.\nCode: NHOS:\tUnreachableHost:\tDefinition: Acquirer or any host is unreachable or has not answered to an online request, so is considered as temporary unavailable. Depending on the Sale context, the request could be repeated (to be compared with \"Refusal\").\nCode: WPIN:\tWrongPIN:\tDefinition: The user has entered the PIN on the PED keyboard and the verification fails.",
            "enum": [
                "ABRT",
                "BUSY",
                "CANC",
                "DEVO",
                "WPIN",
                "NHOS",
                "UNVS",
                "UNVD",
                "REFU",
                "PAYR",
                "TNFD",
                "NALW",
                "LOUT",
                "IVCA",
                "ICAR",
                "WIPG"
            ],
            "type": "string"
        },
        "RetailerService5Code": {
            "description": "List of specific services for SessionManagementResponse.\nCode: FSPQ:\tFinancialPaymentRequest:\tDefinition: The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...).\nCode: FSRQ:\tFinancialReversalRequest:\tDefinition: The Sale System requests to the POI System to perform a reversal partial or complete to cancel a former payment service.\nCode: FSIQ:\tFinancialBalanceInquiryRequest:\tDefinition: The Sale System requests to the POI System to perform balance inquiry on the main account.\nCode: FSBQ:\tFinancialBatchRequest:\tDefinition: The Batch message pair is used to request or get the result of transactions (payment, loyalty and reversal) performed without connection to the Sale system (Payment delivery).\nCode: FSLQ:\tFinancialLoyaltyRequest:\tDefinition: The Sale System requests to the POI System a loyalty service like loading or redeem.\nCode: FSVQ:\tFinancialStoredValueRequest:\tDefinition: The Sale System requests to the POI System to manage a stored value card or account (eg. Load, Payment, Reimbursement).\nCode: FSEQ:\tFinancialEnableServiceRequest:\tDefinition: The Sale System requests to the POI System to enable a service on its side.\nCode: FSAQ:\tFinancialCardAcquisitionRequest:\tDefinition: The Sale System requests to the POI System to handle a card data acquisition on the card reader.\nCode: FSCQ:\tFinancialReconciliationRequest:\tDefinition: The Sale System request to the POI System different kinds of transaction reconciliation. \nCode: FSPP:\tFinancialPaymentResponse:\tDefinition: The POI System sends a response to a payment request (Purchase/refund/PWCB/MOTO Payment/...).\nCode: FSRP:\tFinancialReversalResponse:\tDefinition: The POI System sends a response to a reversal request.\nCode: FSIP:\tFinancialBalanceInquiryResponse:\tDefinition: The POI System sends a response to a Balance Inquiry request.\nCode: FSBP:\tFinancialBatchResponse:\tDefinition: The POI System sends a response to a batch processing request.\nCode: FSLP:\tFinancialLoyaltyResponse:\tDefinition: The POI System sends a response to a loyalty processing request.\nCode: FSVP:\tFinancialStoredValueResponse:\tDefinition: The POI System sends a response to a stored value card or account request.\nCode: FSEP:\tFinancialEnableServiceResponse:\tDefinition: The POI System sends a response after enabling or not some service.\nCode: FSAP:\tFinancialCardAcquisitionResponse:\tDefinition: The POI System sends a response to a card data acquisition request.\nCode: FSCP:\tFinancialReconciliationResponse:\tDefinition: The POI System sends a response to a reconciliation request.\nCode: ADAQ:\tAdministrativeAdminRequest:\tDefinition: An administrative request, to select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.\nCode: SMIQ:\tAdministrativeSessionManagementLoginRequest:\tDefinition: The Sale System requests a login to the POI System.\nCode: SMOQ:\tAdministrativeSessionManagementLogoutRequest:\tDefinition: The Sale System requests a logout to the POI System.\nCode: SMDQ:\tAdministrativeSessionManagementDiagnosisRequest:\tDefinition: The Sale System requests a session diagnosis to the POI System.\nCode: RPTQ:\tAdministrativeReportTransactionRequest:\tDefinition: The Sale System requests to the POI System a report on a list of transactions.\nCode: RPAQ:\tAdministrativeReportGetTotalsRequest:\tDefinition: The Sale System requests to the POI System a report on the totals figures of the POI system.\nCode: ADAP:\tAdministrativeAdminResponse:\tDefinition: The POI System responds to an administrative request.\nCode: SMIP:\tAdministrativeSessionManagementLoginResponse:\tDefinition: The POI System responds to a login request.\nCode: SMOP:\tAdministrativeSessionManagementLogoutResponse:\tDefinition: The POI System responds to a logout request.\nCode: SMDP:\tAdministrativeSessionManagementDiagnosisResponse:\tDefinition: The POI System responds to a diagnosis request.\nCode: RPTP:\tAdministrativeReportTransactionResponse:\tDefinition: The POI System responds to a transaction report request.\nCode: RPAP:\tAdministrativeReportGetTotalsResponse:\tDefinition: The POI System responds to a totals figures request.\nCode: SSAB:\tSystemAbort:\tDefinition: Abort a former request or message by the sale system.\nCode: SSEN:\tSystemEventNotification:\tDefinition: Send an Event notification to the other party.\nCode: SSRR:\tSystemMessageRejection:\tDefinition: Send a rejection for a previous message.\nCode: SSSQ:\tSystemMessageStatusRequest:\tDefinition: The Sale System requests to the POI System the status of a previous transaction.\nCode: SSSP:\tSystemMessageStatusResponse:\tDefinition: The POI System responds to a message status request.\nCode: DINQ:\tDeviceInputRequest:\tDefinition: One system requests to the other System to get data input. \nCode: DDYQ:\tDeviceDisplayRequest:\tDefinition: One System requests the other to display a message for cashier or customer.\nCode: DPRQ:\tDevicePrintRequest:\tDefinition: One system requests to the other System to print data.\nCode: DSOQ:\tDevicePlaySoundRequest:\tDefinition: One system requests to the Other System to play a sound.\nCode: DSIQ:\tDeviceSecureInputRequest:\tDefinition: One system requests to the Other System to securely get data input (e.g. for PIN).\nCode: DCIQ:\tDeviceInitialisationCardReaderRequest:\tDefinition: Service to send parameters to use when card reader initializes a new communication with the card.\nCode: DCAQ:\tDeviceSendApplicationProtocolDataUnitCardReaderRequest:\tDefinition: A service to send commands to a card.\nCode: DCPQ:\tDevicePowerOffCardReaderRequest:\tDefinition: The Sale system requests to the POI System to power off the card reader.\nCode: DCOQ:\tDeviceTransmissionMessageRequest:\tDefinition: The Sale system requests to the POI System to transmit a message (for instance to a mobile server).\nCode: DINO:\tDeviceInputNotification:\tDefinition: One system sends a notification to the POI System to update a input request.\nCode: DDYP:\tDeviceDisplayResponse:\tDefinition: One system responds to the other system for a display request.\nCode: DINP:\tDeviceInputResponse:\tDefinition: One system responds to the other System for a input request.\nCode: DPRP:\tDevicePrintResponse:\tDefinition: One system responds to the other System for a print request.\nCode: DSOP:\tDevicePlaySoundResponse:\tDefinition: One system responds to the other System for a play sound request.\nCode: DSIP:\tDeviceSecureInputResponse:\tDefinition: One system responds to the other System for secure data input.\nCode: DCIP:\tDeviceInitialisationCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader initialisation.\nCode: DCAP:\tDeviceSendApplicationProtocolDataUnitCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader Application Protocol Data Unit sending.\nCode: DCPP:\tDevicePowerOffCardRequestResponse:\tDefinition: The POI system responds to the Sale System for a card reader power off.\nCode: DCOP:\tDeviceTransmissionMessageResponse:\tDefinition: The POI system responds to the Sale System after a message transmission.",
            "enum": [
                "SMIP",
                "SMOP",
                "SMDP"
            ],
            "type": "string"
        },
        "RetailerService9Code": {
            "description": "List of specific services for DeviceResponse.\nCode: FSPQ:\tFinancialPaymentRequest:\tDefinition: The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...).\nCode: FSRQ:\tFinancialReversalRequest:\tDefinition: The Sale System requests to the POI System to perform a reversal partial or complete to cancel a former payment service.\nCode: FSIQ:\tFinancialBalanceInquiryRequest:\tDefinition: The Sale System requests to the POI System to perform balance inquiry on the main account.\nCode: FSBQ:\tFinancialBatchRequest:\tDefinition: The Batch message pair is used to request or get the result of transactions (payment, loyalty and reversal) performed without connection to the Sale system (Payment delivery).\nCode: FSLQ:\tFinancialLoyaltyRequest:\tDefinition: The Sale System requests to the POI System a loyalty service like loading or redeem.\nCode: FSVQ:\tFinancialStoredValueRequest:\tDefinition: The Sale System requests to the POI System to manage a stored value card or account (eg. Load, Payment, Reimbursement).\nCode: FSEQ:\tFinancialEnableServiceRequest:\tDefinition: The Sale System requests to the POI System to enable a service on its side.\nCode: FSAQ:\tFinancialCardAcquisitionRequest:\tDefinition: The Sale System requests to the POI System to handle a card data acquisition on the card reader.\nCode: FSCQ:\tFinancialReconciliationRequest:\tDefinition: The Sale System request to the POI System different kinds of transaction reconciliation. \nCode: FSPP:\tFinancialPaymentResponse:\tDefinition: The POI System sends a response to a payment request (Purchase/refund/PWCB/MOTO Payment/...).\nCode: FSRP:\tFinancialReversalResponse:\tDefinition: The POI System sends a response to a reversal request.\nCode: FSIP:\tFinancialBalanceInquiryResponse:\tDefinition: The POI System sends a response to a Balance Inquiry request.\nCode: FSBP:\tFinancialBatchResponse:\tDefinition: The POI System sends a response to a batch processing request.\nCode: FSLP:\tFinancialLoyaltyResponse:\tDefinition: The POI System sends a response to a loyalty processing request.\nCode: FSVP:\tFinancialStoredValueResponse:\tDefinition: The POI System sends a response to a stored value card or account request.\nCode: FSEP:\tFinancialEnableServiceResponse:\tDefinition: The POI System sends a response after enabling or not some service.\nCode: FSAP:\tFinancialCardAcquisitionResponse:\tDefinition: The POI System sends a response to a card data acquisition request.\nCode: FSCP:\tFinancialReconciliationResponse:\tDefinition: The POI System sends a response to a reconciliation request.\nCode: ADAQ:\tAdministrativeAdminRequest:\tDefinition: An administrative request, to select and start customised administrative services provided by the POI, using a \"menu\" for an interactive or software interface, initiated by the Sale system.\nCode: SMIQ:\tAdministrativeSessionManagementLoginRequest:\tDefinition: The Sale System requests a login to the POI System.\nCode: SMOQ:\tAdministrativeSessionManagementLogoutRequest:\tDefinition: The Sale System requests a logout to the POI System.\nCode: SMDQ:\tAdministrativeSessionManagementDiagnosisRequest:\tDefinition: The Sale System requests a session diagnosis to the POI System.\nCode: RPTQ:\tAdministrativeReportTransactionRequest:\tDefinition: The Sale System requests to the POI System a report on a list of transactions.\nCode: RPAQ:\tAdministrativeReportGetTotalsRequest:\tDefinition: The Sale System requests to the POI System a report on the totals figures of the POI system.\nCode: ADAP:\tAdministrativeAdminResponse:\tDefinition: The POI System responds to an administrative request.\nCode: SMIP:\tAdministrativeSessionManagementLoginResponse:\tDefinition: The POI System responds to a login request.\nCode: SMOP:\tAdministrativeSessionManagementLogoutResponse:\tDefinition: The POI System responds to a logout request.\nCode: SMDP:\tAdministrativeSessionManagementDiagnosisResponse:\tDefinition: The POI System responds to a diagnosis request.\nCode: RPTP:\tAdministrativeReportTransactionResponse:\tDefinition: The POI System responds to a transaction report request.\nCode: RPAP:\tAdministrativeReportGetTotalsResponse:\tDefinition: The POI System responds to a totals figures request.\nCode: SSAB:\tSystemAbort:\tDefinition: Abort a former request or message by the sale system.\nCode: SSEN:\tSystemEventNotification:\tDefinition: Send an Event notification to the other party.\nCode: SSRR:\tSystemMessageRejection:\tDefinition: Send a rejection for a previous message.\nCode: SSSQ:\tSystemMessageStatusRequest:\tDefinition: The Sale System requests to the POI System the status of a previous transaction.\nCode: SSSP:\tSystemMessageStatusResponse:\tDefinition: The POI System responds to a message status request.\nCode: DINQ:\tDeviceInputRequest:\tDefinition: One system requests to the other System to get data input. \nCode: DDYQ:\tDeviceDisplayRequest:\tDefinition: One System requests the other to display a message for cashier or customer.\nCode: DPRQ:\tDevicePrintRequest:\tDefinition: One system requests to the other System to print data.\nCode: DSOQ:\tDevicePlaySoundRequest:\tDefinition: One system requests to the Other System to play a sound.\nCode: DSIQ:\tDeviceSecureInputRequest:\tDefinition: One system requests to the Other System to securely get data input (e.g. for PIN).\nCode: DCIQ:\tDeviceInitialisationCardReaderRequest:\tDefinition: Service to send parameters to use when card reader initializes a new communication with the card.\nCode: DCAQ:\tDeviceSendApplicationProtocolDataUnitCardReaderRequest:\tDefinition: A service to send commands to a card.\nCode: DCPQ:\tDevicePowerOffCardReaderRequest:\tDefinition: The Sale system requests to the POI System to power off the card reader.\nCode: DCOQ:\tDeviceTransmissionMessageRequest:\tDefinition: The Sale system requests to the POI System to transmit a message (for instance to a mobile server).\nCode: DINO:\tDeviceInputNotification:\tDefinition: One system sends a notification to the POI System to update a input request.\nCode: DDYP:\tDeviceDisplayResponse:\tDefinition: One system responds to the other system for a display request.\nCode: DINP:\tDeviceInputResponse:\tDefinition: One system responds to the other System for a input request.\nCode: DPRP:\tDevicePrintResponse:\tDefinition: One system responds to the other System for a print request.\nCode: DSOP:\tDevicePlaySoundResponse:\tDefinition: One system responds to the other System for a play sound request.\nCode: DSIP:\tDeviceSecureInputResponse:\tDefinition: One system responds to the other System for secure data input.\nCode: DCIP:\tDeviceInitialisationCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader initialisation.\nCode: DCAP:\tDeviceSendApplicationProtocolDataUnitCardReaderResponse:\tDefinition: The POI system responds to the Sale System for a card reader Application Protocol Data Unit sending.\nCode: DCPP:\tDevicePowerOffCardRequestResponse:\tDefinition: The POI system responds to the Sale System for a card reader power off.\nCode: DCOP:\tDeviceTransmissionMessageResponse:\tDefinition: The POI system responds to the Sale System after a message transmission.",
            "enum": [
                "DDYP",
                "DINP",
                "DPRP",
                "DSOP",
                "DSIP",
                "DCIP",
                "DCAP",
                "DCPP",
                "DCOP"
            ],
            "type": "string"
        },
        "SaleCapabilities1Code": {
            "description": "Hardware capabilities of the Sale Terminal.\nCode: CHST:\tCashierStatus:\tDefinition: To display to the Cashier a new state on which the POI is entering. \tFor instance, during a payment, the POI could display to the Cashier that POI request an authorisation to the host acquirer.\nCode: CHER:\tCashierError:\tDefinition: To display to the Cashier information related to an error situation occurring on the POI.\nCode: CHDI:\tCashierDisplay:\tDefinition: Standard Cashier display interface (to ask question, or to show information). \nCode: POIR:\tPOIReplication:\tDefinition: Information displayed on the Cardholder POI interface, replicated on the Cashier interface.\nCode: CHIN:\tCashierInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element). The output device attached to this input device is the CashierDisplay device.\nCode: CUAS:\tCustomerAssistance:\tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.\nCode: CUDI:\tCustomerDisplay:\tDefinition: Standard Customer display interface used by the POI System to ask question, or to show information to the Customer inside a Service dialogue.\nCode: CUER:\tCustomerError:\tDefinition: To display to the Customer information is related to an error situation occurring on the Sale Terminal during a Sale transaction.\nCode: CUIN:\tCustomerInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element).\nCode: PRRP:\tPrinterReceipt:\tDefinition: Printer for the Payment receipt.\nCode: PRDC:\tPrinterDocument:\tDefinition: When the POI System wants to print specific document (check, dynamic currency conversion ...).\nCode: PRVC:\tPrinterVoucher:\tDefinition: Coupons, voucher or special ticket generated by the POI and to be printed. ",
            "enum": [
                "CHDI",
                "CHER",
                "CHIN",
                "CHST",
                "CUDI",
                "CUAS",
                "CUER",
                "CUIN",
                "POIR",
                "PRDC",
                "PRRP",
                "PRVC"
            ],
            "type": "string"
        },
        "SaleCapabilities2Code": {
            "description": "Type of the Logical device located on a Sale Terminal or a POI Terminal, in term of class of information to output (display, print or store), or input (keyboard) for the Cashier \r\nor the Customer.\nCode: CHST:\tCashierStatus:\tDefinition: To display to the Cashier a new state on which the POI is entering. \tFor instance, during a payment, the POI could display to the Cashier that POI request an authorisation to the host acquirer.\nCode: CHER:\tCashierError:\tDefinition: To display to the Cashier information related to an error situation occurring on the POI.\nCode: CHDI:\tCashierDisplay:\tDefinition: Standard Cashier display interface (to ask question, or to show information). \nCode: POIR:\tPOIReplication:\tDefinition: Information displayed on the Cardholder POI interface, replicated on the Cashier interface.\nCode: CHIN:\tCashierInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element). The output device attached to this input device is the CashierDisplay device.\nCode: CUAS:\tCustomerAssistance:\tDefinition: Input of the Cardholder POI interface which can be entered by the Cashier to assist the Customer.\nCode: CUDI:\tCustomerDisplay:\tDefinition: Standard Customer display interface used by the POI System to ask question, or to show information to the Customer inside a Service dialogue.\nCode: CUER:\tCustomerError:\tDefinition: To display to the Customer information is related to an error situation occurring on the Sale Terminal during a Sale transaction.\nCode: CUIN:\tCustomerInput:\tDefinition: Any kind of keyboard allowing all or part of the commands \tof the Input message request from the Sale System to the POI System (InputCommand data element).\nCode: PRRP:\tPrinterReceipt:\tDefinition: Printer for the Payment receipt.\nCode: PRDC:\tPrinterDocument:\tDefinition: When the POI System wants to print specific document (check, dynamic currency conversion ...).\nCode: PRVC:\tPrinterVoucher:\tDefinition: Coupons, voucher or special ticket generated by the POI and to be printed. ",
            "enum": [
                "CHIN",
                "CUIN"
            ],
            "type": "string"
        },
        "SaleTokenScope1Code": {
            "description": "Scope of the token that identifies the payment mean of the customer.\nCode: SNGL:\tSingleUse:\tDefinition: The token is generated to recognise  a customer during the lifetime of a transaction.\nCode: MULT:\tMultipleUse:\tDefinition: The token is generated to recognise a customer for a longer period.",
            "enum": [
                "MULT",
                "SNGL"
            ],
            "type": "string"
        },
        "StoredValueAccountType1Code": {
            "description": "Type of stored value account.\nCode: GIFT:\tGiftCard:\tDefinition: Payment mean issued by retailers or banks as a substitute to a non-monetary gift. Usually, this Stored Value item is used only once.\nCode: PHON:\tPhoneCard:\tDefinition: Stored value instrument used to pay telephone services (e.g. card or identifier).\nCode: OTHR:\tOtherPrepaidAccount:\tDefinition: Other non listed stored value instrument.\nCode: GCER:\tGiftCertificate:\tDefinition: Certificate to be given to a customer. Usually one shot voucher.\nCode: CARD:\tSmartCardTag:\tDefinition: Stored value account hold on the chip of a smart card. \nCode: OLVC:\tOnlineVoucher:\tDefinition: Voucher that can be used online once or in several times.\nCode: CWVC:\tCarwashVoucher:\tDefinition: Car wash specific account.\nCode: MLVC:\tMealVoucher:\tDefinition: Meal and check voucher for restaurants.\nCode: MERC:\tMerchantAccount:\tDefinition: Prepaid account open with a merchant or big retailers.\nCode: TRVL:\tTravel:\tDefinition: Travel prepaid account.\nCode: ELMY:\tElectronicMoneyAccount:\tDefinition: Account supporting e-money issued by an electronic money issuer.\nCode: BNKA:\tBankPrepaidAccount:\tDefinition: Prepaid account managed by a financial institution for low income customers.\nCode: CPYA:\tCompanyPrepaidAccount:\tDefinition: Specific prepaid account for companies or professionals expenses.",
            "enum": [
                "BNKA",
                "CWVC",
                "CPYA",
                "ELMY",
                "GIFT",
                "GCER",
                "MLVC",
                "OLVC",
                "MERC",
                "OTHR",
                "PHON",
                "CARD",
                "TRVL"
            ],
            "type": "string"
        },
        "SupportedPaymentOption2Code": {
            "description": "Specifies the options supported for a payment transaction.\nCode: PART:\tPartialApproval:\tDefinition: The entity supports a partial approval of the payment transaction.\nCode: MSRV:\tPaymentApprovalOnly:\tDefinition: The entity supports the approval of the payment service along with the decline of additional requested services (as cash-back).\nCode: INSI:\tIssuerInstalment:\tDefinition: The sender support IssuerInstalment proposals to the Cardholder.\nCode: PINQ:\tPINRequest:\tDefinition: The sender is able to support Single Tap transaction.",
            "enum": [
                "PART",
                "MSRV",
                "INSI",
                "PINQ"
            ],
            "type": "string"
        },
        "TerminalManagementAction5Code": {
            "description": "Types of terminal management action to be performed by a point of interaction.\nCode: ACTV:\tActivate:\tDefinition: Request to activate the element identified inside the message exchange.\nCode: DCTV:\tDeactivate:\tDefinition: Request to deactivate the element identified inside the message exchange.\nCode: DELT:\tDelete:\tDefinition: Request to delete the element identified inside the message exchange.\nCode: DWNL:\tDownload:\tDefinition: Request to download the element identified inside the message exchange.\nCode: INST:\tInstall:\tDefinition: Request to install the element identified inside the message exchange.\nCode: RSTR:\tRestart:\tDefinition: Request to restart the element identified inside the message exchange.\nCode: UPLD:\tUpload:\tDefinition: Request to upload the element identified inside the message exchange.\nCode: UPDT:\tUpdate:\tDefinition: Request to update the element identified inside the message exchange.\nCode: CREA:\tCreate:\tDefinition: Request to create or add the element identified inside the message exchange.\nCode: BIND:\tBind:\tDefinition: Request sent to a POI to bind with a server.\nCode: UBND:\tUnbind:\tDefinition: Request sent to a POI to unbind with a server.\nCode: RBND:\tRebind:\tDefinition: Request sent to a POI to rebind with a server.\nCode: DEVR:\tDeviceRequest:\tDefinition: Request to execute a device request.",
            "enum": [
                "DCTV",
                "DELT",
                "DWNL",
                "INST",
                "RSTR",
                "UPLD",
                "UPDT",
                "BIND",
                "RBND",
                "UBND",
                "ACTV",
                "DEVR"
            ],
            "example": "ACTV",
            "type": "string"
        },
        "TerminalManagementActionResult5Code": {
            "description": "Final result of the processed terminal management action.\nCode: ACCD:\tAccessDenied:\tDefinition: Access is denied while performing the action.\nCode: CNTE:\tConnectionError:\tDefinition: Problem to connect while performing the action.\nCode: FMTE:\tFormatError:\tDefinition: Data transferred has a wrong format.\nCode: INVC:\tInvalidContent:\tDefinition: Content of the data is invalid.\nCode: LENE:\tLengthError:\tDefinition: Data transferred has a wrong length.\nCode: OVER:\tMemoryOverflow:\tDefinition: Memory to store the date exceeded.\nCode: MISS:\tMissingFile:\tDefinition: Data set to be maintained is missing.\nCode: NSUP:\tNotSupported:\tDefinition: Action is not supported.\nCode: SIGE:\tSignatureError:\tDefinition: Data transferred has a wrong digital signature.\nCode: SUCC:\tSuccess:\tDefinition: Action was successfully performed.\nCode: SYNE:\tSyntaxError:\tDefinition: Data transferred has a wrong syntax.\nCode: TIMO:\tTimeout:\tDefinition: Timeout expired during the data transfer.\nCode: UKDT:\tUnknownData:\tDefinition: Data set identification invalid.\nCode: UKRF:\tUnknownKeyReference:\tDefinition: Cryptographic key reference used for the data signature is not valid.\nCode: HRDW:\tHardware:\tDefinition: Hardware error.\nCode: SECR:\tSecurity:\tDefinition: Security error.\nCode: DPRU:\tDelegationParametersReceivedUnauthorized:\tDefinition: The content analysis of the AcceptorConfigurationUpdate reveals unexpected parameters.\nCode: IDMP:\tInvalidDelegationInManagementPlan:\tDefinition: One action of the AcceptorManagementPlan refers to an update unauthorized by the delegation.\nCode: INDP:\tInvalidDelegationProof:\tDefinition: Delegation Proof transmitted by the delegated TMS is not the one expected.\nCode: CMER:\tCommunicationError:\tDefinition: Error in communication once the connection has been established.\nCode: AERR:\tAnyError:\tDefinition: This code value means all TerminalManagementActionResultCode except \"Any Error\" and \"Unlisted Error\".\nCode: ULER:\tUnlistedError:\tDefinition: Any error that is not defined by a code value inside the TerminalManagementActionResultCode.\nCode: WARN:\tSuccessWithWarning:\tDefinition: Action was performed but some warnings arose.",
            "enum": [
                "ACCD",
                "CNTE",
                "FMTE",
                "INVC",
                "LENE",
                "OVER",
                "MISS",
                "NSUP",
                "SIGE",
                "WARN",
                "SYNE",
                "TIMO",
                "UKDT",
                "UKRF",
                "INDP",
                "IDMP",
                "DPRU",
                "AERR",
                "CMER",
                "ULER",
                "SUCC"
            ],
            "example": "ACCD",
            "type": "string"
        },
        "TrackFormat1Code": {
            "description": "Use to identify format of a track on a card or other documents like checks.\nCode: ISOF:\tISOFormat:\tDefinition: ISO card track format - ISO 7813 - ISO 4909.\nCode: JIS1:\tJISIFormat:\tDefinition: Japanese track format I.\nCode: JIS2:\tJISIIFormat:\tDefinition: Japanese track format II.\nCode: AAMV:\tAAMVAFormat:\tDefinition: American driver license.\nCode: CMC7:\tCMC7CheckFormat:\tDefinition: Magnetic Ink Character Recognition, using the CMC-7 font - ISO 1004 Line at the bottom of a check containing the bank account and the check number.\nCode: E13B:\tE13BCheckFormat:\tDefinition: Magnetic Ink Character Recognition, using the E-13B font) Line at the bottom of a check containing the bank account and the check number.",
            "enum": [
                "AAMV",
                "CMC7",
                "E13B",
                "ISOF",
                "JIS1",
                "JIS2"
            ],
            "type": "string"
        },
        "TransactionChannel5Code": {
            "description": "Identifies the type of the communication channels used by the cardholder to the acceptor system.\nCode: MAIL:\tMailOrder:\tDefinition: Mail order.\nCode: TLPH:\tTelephoneOrder:\tDefinition: Telephone order.\nCode: ECOM:\tElectronicCommerce:\tDefinition: Electronic commerce.\nCode: TVPY:\tTelevisionPayment:\tDefinition: Payment on television.\nCode: BRAN:\tOfficeOrBranch:\tDefinition: Office or branch.\nCode: HOBA:\tHomeBanking:\tDefinition: Home banking.\nCode: FIAD:\tFinancialAdvisor:\tDefinition: Financial advisor.\nCode: MOBL:\tMobilePayment:\tDefinition: Payment performed through a cardholder mobile device.\nCode: SECM:\tSecuredElectronicCommerce:\tDefinition: Electronic commerce with cardholder authentication.\nCode: MPOS:\tMobilePOS:\tDefinition: Payment performed through a merchant mobile device.",
            "enum": [
                "MAIL",
                "TLPH",
                "ECOM",
                "TVPY",
                "SECM",
                "MOBL",
                "MPOS"
            ],
            "example": "MAIL",
            "type": "string"
        },
        "TransactionEnvironment1Code": {
            "description": "Indicates the environment of the transaction.\nCode: MERC:\tMerchant:\tDefinition: Merchant environment.\nCode: PRIV:\tPrivate:\tDefinition: Private environment.\nCode: PUBL:\tPublic:\tDefinition: Public environment.\nCode: BRCH:\tBranch:\tDefinition: Bank environment.\nCode: OTHR:\tOther:\tDefinition: Other environments, for instance a mall or an airport.",
            "enum": [
                "MERC",
                "PRIV",
                "PUBL"
            ],
            "example": "MERC",
            "type": "string"
        },
        "TrueFalseIndicator": {
            "type": "boolean",
            "description": "A flag indicating a True or False value."
        },
        "UserInterface4Code": {
            "description": "Destination of the message.\nCode: CDSP:\tCardholderDisplay:\tDefinition: Cardholder display or interface.\nCode: CRCP:\tCardholderReceipt:\tDefinition: Cardholder receipt.\nCode: MDSP:\tMerchantDisplay:\tDefinition: Merchant display or interface.\nCode: MRCP:\tMerchantReceipt:\tDefinition: Merchant receipt.\nCode: ACQU:\tAcquirer:\tDefinition: Acquirer.\nCode: ISSR:\tIssuer:\tDefinition: Issuer.\nCode: AGNT:\tAgent:\tDefinition: Agent.\nCode: CRDO:\tOtherCardholderInterface:\tDefinition: Other interface of the cardholder, for instance e-mail or smartphone message.\nCode: CHAP:\tCardholderApplication:\tDefinition: Information dedicated to a software application related to a device belonging to the cardholder.\nCode: CLRA:\tClearingAgentApplication:\tDefinition: Data dedicated to an application maintained by a clearing agent.\nCode: CLRL:\tClearingAgentLog:\tDefinition: Data dedicated to a log maintained by the clearing agent.\nCode: DSPU:\tDispute:\tDefinition: Interface used in case of disputes or chargebacks.\nCode: FILE:\tFile:\tDefinition: File used to store the message.\nCode: LOGF:\tLog:\tDefinition: Information dedicated to a log file.\nCode: MRAP:\tMerchantApplication:\tDefinition: Information dedicated to a software application related to a device belonging to the merchant.\nCode: OTAI:\tOtherAcquirerInterface:\tDefinition: Other type of acquirer interface.\nCode: OCAI:\tOtherClearingAgentInterface:\tDefinition: Data dedicated to another interface maintained by the clearing agent.\nCode: OTII:\tOtherIssuerInterface:\tDefinition: Other type of issuer interface.\nCode: MRIN:\tOtherMerchantInterface:\tDefinition: Other interface of the merchant for instance e-mail or smartphone message.\nCode: OTHN:\tOtherNational:\tDefinition: Other type of interface defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other type of interface defined at private level.\nCode: OSAI:\tOtherSettlementAgentInterface:\tDefinition: Other settlement agent interface.\nCode: STLI:\tSettlementAgent:\tDefinition: Settlement agent interface.\nCode: TUCR:\tTopUpCredit:\tDefinition: Credit information related to a top-up account.",
            "enum": [
                "CDSP",
                "CRCP",
                "MDSP",
                "MRCP",
                "CRDO"
            ],
            "type": "string"
        },
        "Verification1Code": {
            "description": "Result of the verification.\nCode: ERRR:\tTechnicalError:\tDefinition: Device or entity to perform the verification was unavailable.\nCode: SUCC:\tSuccessful:\tDefinition: Verification was successful.\nCode: PART:\tPartialMatch:\tDefinition: Verification was partially successful.\nCode: NOVF:\tNotPerformed:\tDefinition: Verification has not been performed.\nCode: MISS:\tMissing:\tDefinition: Information required to perform the verification was missing.\nCode: FAIL:\tFailed:\tDefinition: Verification failed.\nCode: FUTA:\tFurtherAction:\tDefinition: Further action required.\nCode: OTHN:\tOtherNational:\tDefinition: Other result of verification defined at national level.\nCode: OTHP:\tOtherPrivate:\tDefinition: Other result of verification defined at private level.\nCode: NOSP:\tNotSupported:\tDefinition: Not support the verification type",
            "enum": [
                "FAIL",
                "MISS",
                "NOVF",
                "PART",
                "SUCC",
                "ERRR"
            ],
            "type": "string"
        }
    }
}