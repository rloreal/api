/*
 * nexo retailer API
 * API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: romain.loreal@lorealconsulting.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lorealconsulting.nexoRetailerAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Data related to the cardholder.&lt;br/&gt;
 */
@Schema(description = "Data related to the cardholder.<br/>")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-09T14:21:17.741236018+02:00[Europe/Paris]")

public class PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder {
  @SerializedName("Authentication")
  private Object authentication = null;

  @SerializedName("BillingAddress")
  private PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress billingAddress = null;

  @SerializedName("Identification")
  private PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification identification = null;

  @SerializedName("Language")
  private Object language = null;

  @SerializedName("MobileData")
  private Object mobileData = null;

  @SerializedName("Name")
  private Object name = null;

  @SerializedName("PersonalData")
  private Object personalData = null;

  @SerializedName("ShippingAddress")
  private PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress shippingAddress = null;

  @SerializedName("TripNumber")
  private Object tripNumber = null;

  @SerializedName("TransactionVerificationResult")
  private Object transactionVerificationResult = null;

  @SerializedName("Vehicle")
  private PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle vehicle = null;

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder authentication(Object authentication) {
    this.authentication = authentication;
    return this;
  }

   /**
   * Method and data intended to be used for this transaction to authenticate the cardholder and its card.
   * @return authentication
  **/
  @Schema(description = "Method and data intended to be used for this transaction to authenticate the cardholder and its card.")
  public Object getAuthentication() {
    return authentication;
  }

  public void setAuthentication(Object authentication) {
    this.authentication = authentication;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder billingAddress(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress billingAddress) {
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress getBillingAddress() {
    return billingAddress;
  }

  public void setBillingAddress(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress billingAddress) {
    this.billingAddress = billingAddress;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder identification(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification identification) {
    this.identification = identification;
    return this;
  }

   /**
   * Get identification
   * @return identification
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification getIdentification() {
    return identification;
  }

  public void setIdentification(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification identification) {
    this.identification = identification;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder language(Object language) {
    this.language = language;
    return this;
  }

   /**
   * Specifies a language.&lt;br/&gt;
   * @return language
  **/
  @Schema(example = "ENG", description = "Specifies a language.<br/>")
  public Object getLanguage() {
    return language;
  }

  public void setLanguage(Object language) {
    this.language = language;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder mobileData(Object mobileData) {
    this.mobileData = mobileData;
    return this;
  }

   /**
   * Data related to the mobile of stakeholder.
   * @return mobileData
  **/
  @Schema(description = "Data related to the mobile of stakeholder.")
  public Object getMobileData() {
    return mobileData;
  }

  public void setMobileData(Object mobileData) {
    this.mobileData = mobileData;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder name(Object name) {
    this.name = name;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 45 characters.&lt;br/&gt;
   * @return name
  **/
  @Schema(description = "Specifies a character string with a maximum length of 45 characters.<br/>")
  public Object getName() {
    return name;
  }

  public void setName(Object name) {
    this.name = name;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder personalData(Object personalData) {
    this.personalData = personalData;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 70characters.&lt;br/&gt;
   * @return personalData
  **/
  @Schema(description = "Specifies a character string with a maximum length of 70characters.<br/>")
  public Object getPersonalData() {
    return personalData;
  }

  public void setPersonalData(Object personalData) {
    this.personalData = personalData;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder shippingAddress(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder tripNumber(Object tripNumber) {
    this.tripNumber = tripNumber;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 35 characters.&lt;br/&gt;
   * @return tripNumber
  **/
  @Schema(description = "Specifies a character string with a maximum length of 35 characters.<br/>")
  public Object getTripNumber() {
    return tripNumber;
  }

  public void setTripNumber(Object tripNumber) {
    this.tripNumber = tripNumber;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder transactionVerificationResult(Object transactionVerificationResult) {
    this.transactionVerificationResult = transactionVerificationResult;
    return this;
  }

   /**
   * Result of performed verifications for the transaction.
   * @return transactionVerificationResult
  **/
  @Schema(description = "Result of performed verifications for the transaction.")
  public Object getTransactionVerificationResult() {
    return transactionVerificationResult;
  }

  public void setTransactionVerificationResult(Object transactionVerificationResult) {
    this.transactionVerificationResult = transactionVerificationResult;
  }

  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder vehicle(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle vehicle) {
    this.vehicle = vehicle;
    return this;
  }

   /**
   * Get vehicle
   * @return vehicle
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle getVehicle() {
    return vehicle;
  }

  public void setVehicle(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle vehicle) {
    this.vehicle = vehicle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder poipoiIdfinancialServiceServiceRequestEnvironmentCardholder = (PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder) o;
    return Objects.equals(this.authentication, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.authentication) &&
        Objects.equals(this.billingAddress, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.billingAddress) &&
        Objects.equals(this.identification, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.identification) &&
        Objects.equals(this.language, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.language) &&
        Objects.equals(this.mobileData, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.mobileData) &&
        Objects.equals(this.name, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.name) &&
        Objects.equals(this.personalData, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.personalData) &&
        Objects.equals(this.shippingAddress, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.shippingAddress) &&
        Objects.equals(this.tripNumber, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.tripNumber) &&
        Objects.equals(this.transactionVerificationResult, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.transactionVerificationResult) &&
        Objects.equals(this.vehicle, poipoiIdfinancialServiceServiceRequestEnvironmentCardholder.vehicle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authentication, billingAddress, identification, language, mobileData, name, personalData, shippingAddress, tripNumber, transactionVerificationResult, vehicle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder {\n");
    
    sb.append("    authentication: ").append(toIndentedString(authentication)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    identification: ").append(toIndentedString(identification)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    mobileData: ").append(toIndentedString(mobileData)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalData: ").append(toIndentedString(personalData)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    tripNumber: ").append(toIndentedString(tripNumber)).append("\n");
    sb.append("    transactionVerificationResult: ").append(toIndentedString(transactionVerificationResult)).append("\n");
    sb.append("    vehicle: ").append(toIndentedString(vehicle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
