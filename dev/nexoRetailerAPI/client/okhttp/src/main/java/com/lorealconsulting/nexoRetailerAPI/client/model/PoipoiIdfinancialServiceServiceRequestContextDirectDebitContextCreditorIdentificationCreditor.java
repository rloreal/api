/*
 * nexo retailer API
 * API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: romain.loreal@lorealconsulting.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lorealconsulting.nexoRetailerAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddress;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorProprietaryIdentification;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Identification of a party.&lt;br/&gt;
 */
@Schema(description = "Identification of a party.<br/>")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-09T14:21:17.741236018+02:00[Europe/Paris]")

public class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor {
  @SerializedName("AnyBIC")
  private Object anyBIC = null;

  @SerializedName("NameAndAddress")
  private PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddress nameAndAddress = null;

  @SerializedName("ProprietaryIdentification")
  private PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorProprietaryIdentification proprietaryIdentification = null;

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor anyBIC(Object anyBIC) {
    this.anyBIC = anyBIC;
    return this;
  }

   /**
   * Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \&quot;Banking - Banking telecommunication messages - Business identifier code (BIC)\&quot;.&lt;br/&gt;
   * @return anyBIC
  **/
  @Schema(example = "CHASUS33", description = "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362: 2014 - \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".<br/>")
  public Object getAnyBIC() {
    return anyBIC;
  }

  public void setAnyBIC(Object anyBIC) {
    this.anyBIC = anyBIC;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor nameAndAddress(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddress nameAndAddress) {
    this.nameAndAddress = nameAndAddress;
    return this;
  }

   /**
   * Get nameAndAddress
   * @return nameAndAddress
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddress getNameAndAddress() {
    return nameAndAddress;
  }

  public void setNameAndAddress(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddress nameAndAddress) {
    this.nameAndAddress = nameAndAddress;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor proprietaryIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorProprietaryIdentification proprietaryIdentification) {
    this.proprietaryIdentification = proprietaryIdentification;
    return this;
  }

   /**
   * Get proprietaryIdentification
   * @return proprietaryIdentification
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorProprietaryIdentification getProprietaryIdentification() {
    return proprietaryIdentification;
  }

  public void setProprietaryIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorProprietaryIdentification proprietaryIdentification) {
    this.proprietaryIdentification = proprietaryIdentification;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor = (PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor) o;
    return Objects.equals(this.anyBIC, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor.anyBIC) &&
        Objects.equals(this.nameAndAddress, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor.nameAndAddress) &&
        Objects.equals(this.proprietaryIdentification, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor.proprietaryIdentification);
  }

  @Override
  public int hashCode() {
    return Objects.hash(anyBIC, nameAndAddress, proprietaryIdentification);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditor {\n");
    
    sb.append("    anyBIC: ").append(toIndentedString(anyBIC)).append("\n");
    sb.append("    nameAndAddress: ").append(toIndentedString(nameAndAddress)).append("\n");
    sb.append("    proprietaryIdentification: ").append(toIndentedString(proprietaryIdentification)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
