/*
 * nexo retailer API
 * API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: romain.loreal@lorealconsulting.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lorealconsulting.nexoRetailerAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Address of a party expressed in a formal structure, usually according to the country&#x27;s postal services specifications.&lt;br/&gt;
 */
@Schema(description = "Address of a party expressed in a formal structure, usually according to the country's postal services specifications.<br/>")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-09T14:21:17.741236018+02:00[Europe/Paris]")

public class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress {
  @SerializedName("Country")
  private Object country = null;

  @SerializedName("CountrySubDivision")
  private Object countrySubDivision = null;

  @SerializedName("PostCodeIdentification")
  private Object postCodeIdentification = null;

  @SerializedName("StreetName")
  private Object streetName = null;

  @SerializedName("TownName")
  private Object townName = null;

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress country(Object country) {
    this.country = country;
    return this;
  }

   /**
   * Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).&lt;br/&gt;
   * @return country
  **/
  @Schema(example = "BE", required = true, description = "Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).<br/>")
  public Object getCountry() {
    return country;
  }

  public void setCountry(Object country) {
    this.country = country;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress countrySubDivision(Object countrySubDivision) {
    this.countrySubDivision = countrySubDivision;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 35 characters.&lt;br/&gt;
   * @return countrySubDivision
  **/
  @Schema(description = "Specifies a character string with a maximum length of 35 characters.<br/>")
  public Object getCountrySubDivision() {
    return countrySubDivision;
  }

  public void setCountrySubDivision(Object countrySubDivision) {
    this.countrySubDivision = countrySubDivision;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress postCodeIdentification(Object postCodeIdentification) {
    this.postCodeIdentification = postCodeIdentification;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 16 characters.&lt;br/&gt;
   * @return postCodeIdentification
  **/
  @Schema(required = true, description = "Specifies a character string with a maximum length of 16 characters.<br/>")
  public Object getPostCodeIdentification() {
    return postCodeIdentification;
  }

  public void setPostCodeIdentification(Object postCodeIdentification) {
    this.postCodeIdentification = postCodeIdentification;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress streetName(Object streetName) {
    this.streetName = streetName;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 70characters.&lt;br/&gt;
   * @return streetName
  **/
  @Schema(description = "Specifies a character string with a maximum length of 70characters.<br/>")
  public Object getStreetName() {
    return streetName;
  }

  public void setStreetName(Object streetName) {
    this.streetName = streetName;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress townName(Object townName) {
    this.townName = townName;
    return this;
  }

   /**
   * Specifies a character string with a maximum length of 35 characters.&lt;br/&gt;
   * @return townName
  **/
  @Schema(required = true, description = "Specifies a character string with a maximum length of 35 characters.<br/>")
  public Object getTownName() {
    return townName;
  }

  public void setTownName(Object townName) {
    this.townName = townName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress = (PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress) o;
    return Objects.equals(this.country, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress.country) &&
        Objects.equals(this.countrySubDivision, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress.countrySubDivision) &&
        Objects.equals(this.postCodeIdentification, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress.postCodeIdentification) &&
        Objects.equals(this.streetName, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress.streetName) &&
        Objects.equals(this.townName, poipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress.townName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(country, countrySubDivision, postCodeIdentification, streetName, townName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentificationCreditorNameAndAddressAddress {\n");
    
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    countrySubDivision: ").append(toIndentedString(countrySubDivision)).append("\n");
    sb.append("    postCodeIdentification: ").append(toIndentedString(postCodeIdentification)).append("\n");
    sb.append("    streetName: ").append(toIndentedString(streetName)).append("\n");
    sb.append("    townName: ").append(toIndentedString(townName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
