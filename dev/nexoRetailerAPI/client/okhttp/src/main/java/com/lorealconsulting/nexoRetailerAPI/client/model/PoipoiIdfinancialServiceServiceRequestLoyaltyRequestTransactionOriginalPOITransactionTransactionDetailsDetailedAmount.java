/*
 * nexo retailer API
 * API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: romain.loreal@lorealconsulting.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lorealconsulting.nexoRetailerAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Detailed amounts associated with the total amount of transaction.&lt;br/&gt;
 */
@Schema(description = "Detailed amounts associated with the total amount of transaction.<br/>")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-09T14:21:17.741236018+02:00[Europe/Paris]")

public class PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount {
  @SerializedName("AmountGoodsAndServices")
  private Object amountGoodsAndServices = null;

  @SerializedName("CashBack")
  private Object cashBack = null;

  @SerializedName("Fees")
  private Object fees = null;

  @SerializedName("Gratuity")
  private Object gratuity = null;

  @SerializedName("Rebate")
  private Object rebate = null;

  @SerializedName("Surcharge")
  private Object surcharge = null;

  @SerializedName("ValueAddedTax")
  private Object valueAddedTax = null;

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount amountGoodsAndServices(Object amountGoodsAndServices) {
    this.amountGoodsAndServices = amountGoodsAndServices;
    return this;
  }

   /**
   * Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.&lt;br/&gt;
   * @return amountGoodsAndServices
  **/
  @Schema(example = "500000", description = "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>")
  public Object getAmountGoodsAndServices() {
    return amountGoodsAndServices;
  }

  public void setAmountGoodsAndServices(Object amountGoodsAndServices) {
    this.amountGoodsAndServices = amountGoodsAndServices;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount cashBack(Object cashBack) {
    this.cashBack = cashBack;
    return this;
  }

   /**
   * Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.&lt;br/&gt;
   * @return cashBack
  **/
  @Schema(example = "500000", description = "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>")
  public Object getCashBack() {
    return cashBack;
  }

  public void setCashBack(Object cashBack) {
    this.cashBack = cashBack;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount fees(Object fees) {
    this.fees = fees;
    return this;
  }

   /**
   * Fees amount.
   * @return fees
  **/
  @Schema(description = "Fees amount.")
  public Object getFees() {
    return fees;
  }

  public void setFees(Object fees) {
    this.fees = fees;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount gratuity(Object gratuity) {
    this.gratuity = gratuity;
    return this;
  }

   /**
   * Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.&lt;br/&gt;
   * @return gratuity
  **/
  @Schema(example = "500000", description = "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>")
  public Object getGratuity() {
    return gratuity;
  }

  public void setGratuity(Object gratuity) {
    this.gratuity = gratuity;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount rebate(Object rebate) {
    this.rebate = rebate;
    return this;
  }

   /**
   * Global rebate of the transaction. This amount is counted as a negative amount.
   * @return rebate
  **/
  @Schema(description = "Global rebate of the transaction. This amount is counted as a negative amount.")
  public Object getRebate() {
    return rebate;
  }

  public void setRebate(Object rebate) {
    this.rebate = rebate;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount surcharge(Object surcharge) {
    this.surcharge = surcharge;
    return this;
  }

   /**
   * Additional charge paid by the cardholder. For example airline credit card surcharge.
   * @return surcharge
  **/
  @Schema(description = "Additional charge paid by the cardholder. For example airline credit card surcharge.")
  public Object getSurcharge() {
    return surcharge;
  }

  public void setSurcharge(Object surcharge) {
    this.surcharge = surcharge;
  }

  public PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount valueAddedTax(Object valueAddedTax) {
    this.valueAddedTax = valueAddedTax;
    return this;
  }

   /**
   * Value added tax amount.
   * @return valueAddedTax
  **/
  @Schema(description = "Value added tax amount.")
  public Object getValueAddedTax() {
    return valueAddedTax;
  }

  public void setValueAddedTax(Object valueAddedTax) {
    this.valueAddedTax = valueAddedTax;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount = (PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount) o;
    return Objects.equals(this.amountGoodsAndServices, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.amountGoodsAndServices) &&
        Objects.equals(this.cashBack, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.cashBack) &&
        Objects.equals(this.fees, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.fees) &&
        Objects.equals(this.gratuity, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.gratuity) &&
        Objects.equals(this.rebate, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.rebate) &&
        Objects.equals(this.surcharge, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.surcharge) &&
        Objects.equals(this.valueAddedTax, poipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount.valueAddedTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amountGoodsAndServices, cashBack, fees, gratuity, rebate, surcharge, valueAddedTax);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount {\n");
    
    sb.append("    amountGoodsAndServices: ").append(toIndentedString(amountGoodsAndServices)).append("\n");
    sb.append("    cashBack: ").append(toIndentedString(cashBack)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    gratuity: ").append(toIndentedString(gratuity)).append("\n");
    sb.append("    rebate: ").append(toIndentedString(rebate)).append("\n");
    sb.append("    surcharge: ").append(toIndentedString(surcharge)).append("\n");
    sb.append("    valueAddedTax: ").append(toIndentedString(valueAddedTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
