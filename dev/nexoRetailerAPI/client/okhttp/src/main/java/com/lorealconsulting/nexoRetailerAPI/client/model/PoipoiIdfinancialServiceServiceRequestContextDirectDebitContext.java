/*
 * nexo retailer API
 * API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ 
 *
 * OpenAPI spec version: 0.1.0
 * Contact: romain.loreal@lorealconsulting.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.lorealconsulting.nexoRetailerAPI.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentification;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextDebtorIdentification;
import com.lorealconsulting.nexoRetailerAPI.client.model.PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextMandateRelatedInformation;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Element containing all information needed for a card initiating direct debit.&lt;br/&gt;
 */
@Schema(description = "Element containing all information needed for a card initiating direct debit.<br/>")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-09-09T14:21:17.741236018+02:00[Europe/Paris]")

public class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext {
  @SerializedName("CreditorIdentification")
  private PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentification creditorIdentification = null;

  @SerializedName("DebtorIdentification")
  private PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextDebtorIdentification debtorIdentification = null;

  @SerializedName("MandateRelatedInformation")
  private PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextMandateRelatedInformation mandateRelatedInformation = null;

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext creditorIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentification creditorIdentification) {
    this.creditorIdentification = creditorIdentification;
    return this;
  }

   /**
   * Get creditorIdentification
   * @return creditorIdentification
  **/
  @Schema(required = true, description = "")
  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentification getCreditorIdentification() {
    return creditorIdentification;
  }

  public void setCreditorIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextCreditorIdentification creditorIdentification) {
    this.creditorIdentification = creditorIdentification;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext debtorIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextDebtorIdentification debtorIdentification) {
    this.debtorIdentification = debtorIdentification;
    return this;
  }

   /**
   * Get debtorIdentification
   * @return debtorIdentification
  **/
  @Schema(description = "")
  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextDebtorIdentification getDebtorIdentification() {
    return debtorIdentification;
  }

  public void setDebtorIdentification(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextDebtorIdentification debtorIdentification) {
    this.debtorIdentification = debtorIdentification;
  }

  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext mandateRelatedInformation(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextMandateRelatedInformation mandateRelatedInformation) {
    this.mandateRelatedInformation = mandateRelatedInformation;
    return this;
  }

   /**
   * Get mandateRelatedInformation
   * @return mandateRelatedInformation
  **/
  @Schema(required = true, description = "")
  public PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextMandateRelatedInformation getMandateRelatedInformation() {
    return mandateRelatedInformation;
  }

  public void setMandateRelatedInformation(PoipoiIdfinancialServiceServiceRequestContextDirectDebitContextMandateRelatedInformation mandateRelatedInformation) {
    this.mandateRelatedInformation = mandateRelatedInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext poipoiIdfinancialServiceServiceRequestContextDirectDebitContext = (PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext) o;
    return Objects.equals(this.creditorIdentification, poipoiIdfinancialServiceServiceRequestContextDirectDebitContext.creditorIdentification) &&
        Objects.equals(this.debtorIdentification, poipoiIdfinancialServiceServiceRequestContextDirectDebitContext.debtorIdentification) &&
        Objects.equals(this.mandateRelatedInformation, poipoiIdfinancialServiceServiceRequestContextDirectDebitContext.mandateRelatedInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creditorIdentification, debtorIdentification, mandateRelatedInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PoipoiIdfinancialServiceServiceRequestContextDirectDebitContext {\n");
    
    sb.append("    creditorIdentification: ").append(toIndentedString(creditorIdentification)).append("\n");
    sb.append("    debtorIdentification: ").append(toIndentedString(debtorIdentification)).append("\n");
    sb.append("    mandateRelatedInformation: ").append(toIndentedString(mandateRelatedInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
