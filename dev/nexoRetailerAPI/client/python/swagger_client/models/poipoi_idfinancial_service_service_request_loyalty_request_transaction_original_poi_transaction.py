# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_service': 'object',
        'additional_transaction_data': 'object',
        'authorisation_result': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionAuthorisationResult',
        'card_programme_applied': 'object',
        'card_programme_proposed': 'object',
        'customer_consent': 'object',
        'customer_order': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestLoyaltyAccountRequestCustomerOrder',
        'customer_token': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionCustomerToken',
        'issuer_cit_identification': 'object',
        'issuer_reference_data': 'object',
        'last_transaction_flag': 'object',
        'merchant_cit_identification': 'object',
        'merchant_category_code': 'object',
        'merchant_reference_data': 'object',
        'original_transaction': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionOriginalTransaction',
        'reconciliation_identification': 'object',
        'sale_reference_identification': 'object',
        'sale_to_acquirer_data': 'object',
        'sale_to_issuer_data': 'object',
        'sale_to_poi_data': 'object',
        'service_attribute': 'object',
        'transaction_capture': 'object',
        'transaction_details': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails',
        'transaction_identification': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification',
        'transaction_type': 'object'
    }

    attribute_map = {
        'additional_service': 'AdditionalService',
        'additional_transaction_data': 'AdditionalTransactionData',
        'authorisation_result': 'AuthorisationResult',
        'card_programme_applied': 'CardProgrammeApplied',
        'card_programme_proposed': 'CardProgrammeProposed',
        'customer_consent': 'CustomerConsent',
        'customer_order': 'CustomerOrder',
        'customer_token': 'CustomerToken',
        'issuer_cit_identification': 'IssuerCITIdentification',
        'issuer_reference_data': 'IssuerReferenceData',
        'last_transaction_flag': 'LastTransactionFlag',
        'merchant_cit_identification': 'MerchantCITIdentification',
        'merchant_category_code': 'MerchantCategoryCode',
        'merchant_reference_data': 'MerchantReferenceData',
        'original_transaction': 'OriginalTransaction',
        'reconciliation_identification': 'ReconciliationIdentification',
        'sale_reference_identification': 'SaleReferenceIdentification',
        'sale_to_acquirer_data': 'SaleToAcquirerData',
        'sale_to_issuer_data': 'SaleToIssuerData',
        'sale_to_poi_data': 'SaleToPOIData',
        'service_attribute': 'ServiceAttribute',
        'transaction_capture': 'TransactionCapture',
        'transaction_details': 'TransactionDetails',
        'transaction_identification': 'TransactionIdentification',
        'transaction_type': 'TransactionType'
    }

    def __init__(self, additional_service=None, additional_transaction_data=None, authorisation_result=None, card_programme_applied=None, card_programme_proposed=None, customer_consent=None, customer_order=None, customer_token=None, issuer_cit_identification=None, issuer_reference_data=None, last_transaction_flag=None, merchant_cit_identification=None, merchant_category_code=None, merchant_reference_data=None, original_transaction=None, reconciliation_identification=None, sale_reference_identification=None, sale_to_acquirer_data=None, sale_to_issuer_data=None, sale_to_poi_data=None, service_attribute=None, transaction_capture=None, transaction_details=None, transaction_identification=None, transaction_type=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction - a model defined in Swagger"""  # noqa: E501
        self._additional_service = None
        self._additional_transaction_data = None
        self._authorisation_result = None
        self._card_programme_applied = None
        self._card_programme_proposed = None
        self._customer_consent = None
        self._customer_order = None
        self._customer_token = None
        self._issuer_cit_identification = None
        self._issuer_reference_data = None
        self._last_transaction_flag = None
        self._merchant_cit_identification = None
        self._merchant_category_code = None
        self._merchant_reference_data = None
        self._original_transaction = None
        self._reconciliation_identification = None
        self._sale_reference_identification = None
        self._sale_to_acquirer_data = None
        self._sale_to_issuer_data = None
        self._sale_to_poi_data = None
        self._service_attribute = None
        self._transaction_capture = None
        self._transaction_details = None
        self._transaction_identification = None
        self._transaction_type = None
        self.discriminator = None
        if additional_service is not None:
            self.additional_service = additional_service
        if additional_transaction_data is not None:
            self.additional_transaction_data = additional_transaction_data
        if authorisation_result is not None:
            self.authorisation_result = authorisation_result
        if card_programme_applied is not None:
            self.card_programme_applied = card_programme_applied
        if card_programme_proposed is not None:
            self.card_programme_proposed = card_programme_proposed
        if customer_consent is not None:
            self.customer_consent = customer_consent
        if customer_order is not None:
            self.customer_order = customer_order
        if customer_token is not None:
            self.customer_token = customer_token
        if issuer_cit_identification is not None:
            self.issuer_cit_identification = issuer_cit_identification
        if issuer_reference_data is not None:
            self.issuer_reference_data = issuer_reference_data
        if last_transaction_flag is not None:
            self.last_transaction_flag = last_transaction_flag
        if merchant_cit_identification is not None:
            self.merchant_cit_identification = merchant_cit_identification
        if merchant_category_code is not None:
            self.merchant_category_code = merchant_category_code
        if merchant_reference_data is not None:
            self.merchant_reference_data = merchant_reference_data
        if original_transaction is not None:
            self.original_transaction = original_transaction
        if reconciliation_identification is not None:
            self.reconciliation_identification = reconciliation_identification
        if sale_reference_identification is not None:
            self.sale_reference_identification = sale_reference_identification
        if sale_to_acquirer_data is not None:
            self.sale_to_acquirer_data = sale_to_acquirer_data
        if sale_to_issuer_data is not None:
            self.sale_to_issuer_data = sale_to_issuer_data
        if sale_to_poi_data is not None:
            self.sale_to_poi_data = sale_to_poi_data
        if service_attribute is not None:
            self.service_attribute = service_attribute
        if transaction_capture is not None:
            self.transaction_capture = transaction_capture
        self.transaction_details = transaction_details
        self.transaction_identification = transaction_identification
        self.transaction_type = transaction_type

    @property
    def additional_service(self):
        """Gets the additional_service of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Service in addition to the main service.  # noqa: E501

        :return: The additional_service of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._additional_service

    @additional_service.setter
    def additional_service(self, additional_service):
        """Sets the additional_service of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Service in addition to the main service.  # noqa: E501

        :param additional_service: The additional_service of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._additional_service = additional_service

    @property
    def additional_transaction_data(self):
        """Gets the additional_transaction_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Additional information related to the transaction.  # noqa: E501

        :return: The additional_transaction_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._additional_transaction_data

    @additional_transaction_data.setter
    def additional_transaction_data(self, additional_transaction_data):
        """Sets the additional_transaction_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Additional information related to the transaction.  # noqa: E501

        :param additional_transaction_data: The additional_transaction_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._additional_transaction_data = additional_transaction_data

    @property
    def authorisation_result(self):
        """Gets the authorisation_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The authorisation_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionAuthorisationResult
        """
        return self._authorisation_result

    @authorisation_result.setter
    def authorisation_result(self, authorisation_result):
        """Sets the authorisation_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param authorisation_result: The authorisation_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionAuthorisationResult
        """

        self._authorisation_result = authorisation_result

    @property
    def card_programme_applied(self):
        """Gets the card_programme_applied of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The card_programme_applied of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._card_programme_applied

    @card_programme_applied.setter
    def card_programme_applied(self, card_programme_applied):
        """Sets the card_programme_applied of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param card_programme_applied: The card_programme_applied of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._card_programme_applied = card_programme_applied

    @property
    def card_programme_proposed(self):
        """Gets the card_programme_proposed of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies the card program proposed by a retailer to a cardholder among a series of payment programmes offered by the retailer.  # noqa: E501

        :return: The card_programme_proposed of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._card_programme_proposed

    @card_programme_proposed.setter
    def card_programme_proposed(self, card_programme_proposed):
        """Sets the card_programme_proposed of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies the card program proposed by a retailer to a cardholder among a series of payment programmes offered by the retailer.  # noqa: E501

        :param card_programme_proposed: The card_programme_proposed of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._card_programme_proposed = card_programme_proposed

    @property
    def customer_consent(self):
        """Gets the customer_consent of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        A flag indicating a True or False value.<br/>  # noqa: E501

        :return: The customer_consent of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._customer_consent

    @customer_consent.setter
    def customer_consent(self, customer_consent):
        """Sets the customer_consent of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        A flag indicating a True or False value.<br/>  # noqa: E501

        :param customer_consent: The customer_consent of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._customer_consent = customer_consent

    @property
    def customer_order(self):
        """Gets the customer_order of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The customer_order of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestLoyaltyAccountRequestCustomerOrder
        """
        return self._customer_order

    @customer_order.setter
    def customer_order(self, customer_order):
        """Sets the customer_order of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param customer_order: The customer_order of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestLoyaltyAccountRequestCustomerOrder
        """

        self._customer_order = customer_order

    @property
    def customer_token(self):
        """Gets the customer_token of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The customer_token of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionCustomerToken
        """
        return self._customer_token

    @customer_token.setter
    def customer_token(self, customer_token):
        """Sets the customer_token of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param customer_token: The customer_token of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionCustomerToken
        """

        self._customer_token = customer_token

    @property
    def issuer_cit_identification(self):
        """Gets the issuer_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :return: The issuer_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._issuer_cit_identification

    @issuer_cit_identification.setter
    def issuer_cit_identification(self, issuer_cit_identification):
        """Sets the issuer_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :param issuer_cit_identification: The issuer_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._issuer_cit_identification = issuer_cit_identification

    @property
    def issuer_reference_data(self):
        """Gets the issuer_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :return: The issuer_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._issuer_reference_data

    @issuer_reference_data.setter
    def issuer_reference_data(self, issuer_reference_data):
        """Sets the issuer_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :param issuer_reference_data: The issuer_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._issuer_reference_data = issuer_reference_data

    @property
    def last_transaction_flag(self):
        """Gets the last_transaction_flag of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        A flag indicating a True or False value.<br/>  # noqa: E501

        :return: The last_transaction_flag of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._last_transaction_flag

    @last_transaction_flag.setter
    def last_transaction_flag(self, last_transaction_flag):
        """Sets the last_transaction_flag of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        A flag indicating a True or False value.<br/>  # noqa: E501

        :param last_transaction_flag: The last_transaction_flag of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._last_transaction_flag = last_transaction_flag

    @property
    def merchant_cit_identification(self):
        """Gets the merchant_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :return: The merchant_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._merchant_cit_identification

    @merchant_cit_identification.setter
    def merchant_cit_identification(self, merchant_cit_identification):
        """Sets the merchant_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :param merchant_cit_identification: The merchant_cit_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._merchant_cit_identification = merchant_cit_identification

    @property
    def merchant_category_code(self):
        """Gets the merchant_category_code of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a minimum length of 3 characters, and a maximum length of 4 characters.<br/>  # noqa: E501

        :return: The merchant_category_code of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._merchant_category_code

    @merchant_category_code.setter
    def merchant_category_code(self, merchant_category_code):
        """Sets the merchant_category_code of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a minimum length of 3 characters, and a maximum length of 4 characters.<br/>  # noqa: E501

        :param merchant_category_code: The merchant_category_code of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._merchant_category_code = merchant_category_code

    @property
    def merchant_reference_data(self):
        """Gets the merchant_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The merchant_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._merchant_reference_data

    @merchant_reference_data.setter
    def merchant_reference_data(self, merchant_reference_data):
        """Sets the merchant_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param merchant_reference_data: The merchant_reference_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._merchant_reference_data = merchant_reference_data

    @property
    def original_transaction(self):
        """Gets the original_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The original_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionOriginalTransaction
        """
        return self._original_transaction

    @original_transaction.setter
    def original_transaction(self, original_transaction):
        """Sets the original_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param original_transaction: The original_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionOriginalTransaction
        """

        self._original_transaction = original_transaction

    @property
    def reconciliation_identification(self):
        """Gets the reconciliation_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The reconciliation_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._reconciliation_identification

    @reconciliation_identification.setter
    def reconciliation_identification(self, reconciliation_identification):
        """Sets the reconciliation_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param reconciliation_identification: The reconciliation_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._reconciliation_identification = reconciliation_identification

    @property
    def sale_reference_identification(self):
        """Gets the sale_reference_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The sale_reference_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._sale_reference_identification

    @sale_reference_identification.setter
    def sale_reference_identification(self, sale_reference_identification):
        """Sets the sale_reference_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param sale_reference_identification: The sale_reference_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._sale_reference_identification = sale_reference_identification

    @property
    def sale_to_acquirer_data(self):
        """Gets the sale_to_acquirer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The sale_to_acquirer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._sale_to_acquirer_data

    @sale_to_acquirer_data.setter
    def sale_to_acquirer_data(self, sale_to_acquirer_data):
        """Sets the sale_to_acquirer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param sale_to_acquirer_data: The sale_to_acquirer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._sale_to_acquirer_data = sale_to_acquirer_data

    @property
    def sale_to_issuer_data(self):
        """Gets the sale_to_issuer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The sale_to_issuer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._sale_to_issuer_data

    @sale_to_issuer_data.setter
    def sale_to_issuer_data(self, sale_to_issuer_data):
        """Sets the sale_to_issuer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param sale_to_issuer_data: The sale_to_issuer_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._sale_to_issuer_data = sale_to_issuer_data

    @property
    def sale_to_poi_data(self):
        """Gets the sale_to_poi_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The sale_to_poi_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._sale_to_poi_data

    @sale_to_poi_data.setter
    def sale_to_poi_data(self, sale_to_poi_data):
        """Sets the sale_to_poi_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param sale_to_poi_data: The sale_to_poi_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._sale_to_poi_data = sale_to_poi_data

    @property
    def service_attribute(self):
        """Gets the service_attribute of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Additional attributes of the service provided by the card payment transaction.<br/>- **IRES: InitialReservation**  : *Initial reservation.*<br/>- **URES: UpdateReservation**  : *Update reservation.*<br/>- **PRES: PaymentReservation**  : *Payment after reservation.*<br/>- **ARES: AdditionalPayment**  : *Additional payment after reservation.*<br/>- **FREC: FirstRecurring**  : *Initial recurring payment.*<br/>- **RREC: FollowingRecurring**  : *Repeat recurring payment.*<br/>- **GOPT: GuaranteeOfPayment**  : *Acceptor claims for guarantee of payment.*<br/>  # noqa: E501

        :return: The service_attribute of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._service_attribute

    @service_attribute.setter
    def service_attribute(self, service_attribute):
        """Sets the service_attribute of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Additional attributes of the service provided by the card payment transaction.<br/>- **IRES: InitialReservation**  : *Initial reservation.*<br/>- **URES: UpdateReservation**  : *Update reservation.*<br/>- **PRES: PaymentReservation**  : *Payment after reservation.*<br/>- **ARES: AdditionalPayment**  : *Additional payment after reservation.*<br/>- **FREC: FirstRecurring**  : *Initial recurring payment.*<br/>- **RREC: FollowingRecurring**  : *Repeat recurring payment.*<br/>- **GOPT: GuaranteeOfPayment**  : *Acceptor claims for guarantee of payment.*<br/>  # noqa: E501

        :param service_attribute: The service_attribute of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._service_attribute = service_attribute

    @property
    def transaction_capture(self):
        """Gets the transaction_capture of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        A flag indicating a True or False value.<br/>  # noqa: E501

        :return: The transaction_capture of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._transaction_capture

    @transaction_capture.setter
    def transaction_capture(self, transaction_capture):
        """Sets the transaction_capture of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        A flag indicating a True or False value.<br/>  # noqa: E501

        :param transaction_capture: The transaction_capture of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """

        self._transaction_capture = transaction_capture

    @property
    def transaction_details(self):
        """Gets the transaction_details of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The transaction_details of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails
        """
        return self._transaction_details

    @transaction_details.setter
    def transaction_details(self, transaction_details):
        """Sets the transaction_details of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param transaction_details: The transaction_details of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails
        """
        if transaction_details is None:
            raise ValueError("Invalid value for `transaction_details`, must not be `None`")  # noqa: E501

        self._transaction_details = transaction_details

    @property
    def transaction_identification(self):
        """Gets the transaction_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501


        :return: The transaction_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        return self._transaction_identification

    @transaction_identification.setter
    def transaction_identification(self, transaction_identification):
        """Sets the transaction_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.


        :param transaction_identification: The transaction_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        if transaction_identification is None:
            raise ValueError("Invalid value for `transaction_identification`, must not be `None`")  # noqa: E501

        self._transaction_identification = transaction_identification

    @property
    def transaction_type(self):
        """Gets the transaction_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501

        Main service provided during the card payment transaction.<br/>- **BALC: Balance**  : *Balance enquiry.*<br/>- **CACT: CardActivation**  : *Card activation.*<br/>- **CRDP: CardPayment**  : *Card payment.*<br/>- **CAFH: CardsFundTransferPush**  : *Transfer of funds to a card or an account.*<br/>- **CAVR: CardVerification**  : *Card verification.*<br/>- **CSHW: CashAdvance**  : *Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.*<br/>- **CSHD: CashDeposit**  : *Cash deposit.*<br/>- **DEFR: DeferredPayment**  : *Deferred payment.*<br/>- **LOAD: Loading**  : *Loading or reloading non-financial account.*<br/>- **ORCR: OriginalCredit**  : *Original credit.*<br/>- **PINC: PINChange**  : *PIN (Personal Identification Number) change.*<br/>- **QUCH: QuasiCash**  : *Quasi-cash.*<br/>- **RFND: Refund**  : *Refund transaction.*<br/>- **RESA: Reservation**  : *Reservation (pre-authorisation).*<br/>- **VALC: ValidityCheck**  : *Card validity check.*<br/>- **UNLD: Unloading**  : *Unloading non-financial account.*<br/>- **CAFT: CardsFundTransfer**  : *Transfer of funds to and/or from a card account.*<br/>- **CAFL: CardsFundTransferPull**  : *Transfer of funds from a card or an account.*<br/>  # noqa: E501

        :return: The transaction_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :rtype: object
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.

        Main service provided during the card payment transaction.<br/>- **BALC: Balance**  : *Balance enquiry.*<br/>- **CACT: CardActivation**  : *Card activation.*<br/>- **CRDP: CardPayment**  : *Card payment.*<br/>- **CAFH: CardsFundTransferPush**  : *Transfer of funds to a card or an account.*<br/>- **CAVR: CardVerification**  : *Card verification.*<br/>- **CSHW: CashAdvance**  : *Cash advance or withdrawals on a POI (Point Of Interaction), or at a bank counter.*<br/>- **CSHD: CashDeposit**  : *Cash deposit.*<br/>- **DEFR: DeferredPayment**  : *Deferred payment.*<br/>- **LOAD: Loading**  : *Loading or reloading non-financial account.*<br/>- **ORCR: OriginalCredit**  : *Original credit.*<br/>- **PINC: PINChange**  : *PIN (Personal Identification Number) change.*<br/>- **QUCH: QuasiCash**  : *Quasi-cash.*<br/>- **RFND: Refund**  : *Refund transaction.*<br/>- **RESA: Reservation**  : *Reservation (pre-authorisation).*<br/>- **VALC: ValidityCheck**  : *Card validity check.*<br/>- **UNLD: Unloading**  : *Unloading non-financial account.*<br/>- **CAFT: CardsFundTransfer**  : *Transfer of funds to and/or from a card account.*<br/>- **CAFL: CardsFundTransferPull**  : *Transfer of funds from a card or an account.*<br/>  # noqa: E501

        :param transaction_type: The transaction_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction.  # noqa: E501
        :type: object
        """
        if transaction_type is None:
            raise ValueError("Invalid value for `transaction_type`, must not be `None`")  # noqa: E501

        self._transaction_type = transaction_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransaction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
