# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'authentication': 'object',
        'billing_address': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress',
        'identification': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification',
        'language': 'object',
        'mobile_data': 'object',
        'name': 'object',
        'personal_data': 'object',
        'shipping_address': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress',
        'trip_number': 'object',
        'transaction_verification_result': 'object',
        'vehicle': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle'
    }

    attribute_map = {
        'authentication': 'Authentication',
        'billing_address': 'BillingAddress',
        'identification': 'Identification',
        'language': 'Language',
        'mobile_data': 'MobileData',
        'name': 'Name',
        'personal_data': 'PersonalData',
        'shipping_address': 'ShippingAddress',
        'trip_number': 'TripNumber',
        'transaction_verification_result': 'TransactionVerificationResult',
        'vehicle': 'Vehicle'
    }

    def __init__(self, authentication=None, billing_address=None, identification=None, language=None, mobile_data=None, name=None, personal_data=None, shipping_address=None, trip_number=None, transaction_verification_result=None, vehicle=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder - a model defined in Swagger"""  # noqa: E501
        self._authentication = None
        self._billing_address = None
        self._identification = None
        self._language = None
        self._mobile_data = None
        self._name = None
        self._personal_data = None
        self._shipping_address = None
        self._trip_number = None
        self._transaction_verification_result = None
        self._vehicle = None
        self.discriminator = None
        if authentication is not None:
            self.authentication = authentication
        if billing_address is not None:
            self.billing_address = billing_address
        if identification is not None:
            self.identification = identification
        if language is not None:
            self.language = language
        if mobile_data is not None:
            self.mobile_data = mobile_data
        if name is not None:
            self.name = name
        if personal_data is not None:
            self.personal_data = personal_data
        if shipping_address is not None:
            self.shipping_address = shipping_address
        if trip_number is not None:
            self.trip_number = trip_number
        if transaction_verification_result is not None:
            self.transaction_verification_result = transaction_verification_result
        if vehicle is not None:
            self.vehicle = vehicle

    @property
    def authentication(self):
        """Gets the authentication of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Method and data intended to be used for this transaction to authenticate the cardholder and its card.  # noqa: E501

        :return: The authentication of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._authentication

    @authentication.setter
    def authentication(self, authentication):
        """Sets the authentication of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Method and data intended to be used for this transaction to authenticate the cardholder and its card.  # noqa: E501

        :param authentication: The authentication of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._authentication = authentication

    @property
    def billing_address(self):
        """Gets the billing_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501


        :return: The billing_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.


        :param billing_address: The billing_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress
        """

        self._billing_address = billing_address

    @property
    def identification(self):
        """Gets the identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501


        :return: The identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification
        """
        return self._identification

    @identification.setter
    def identification(self, identification):
        """Sets the identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.


        :param identification: The identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderIdentification
        """

        self._identification = identification

    @property
    def language(self):
        """Gets the language of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Specifies a language.<br/>  # noqa: E501

        :return: The language of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Specifies a language.<br/>  # noqa: E501

        :param language: The language of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._language = language

    @property
    def mobile_data(self):
        """Gets the mobile_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Data related to the mobile of stakeholder.  # noqa: E501

        :return: The mobile_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._mobile_data

    @mobile_data.setter
    def mobile_data(self, mobile_data):
        """Sets the mobile_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Data related to the mobile of stakeholder.  # noqa: E501

        :param mobile_data: The mobile_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._mobile_data = mobile_data

    @property
    def name(self):
        """Gets the name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Specifies a character string with a maximum length of 45 characters.<br/>  # noqa: E501

        :return: The name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Specifies a character string with a maximum length of 45 characters.<br/>  # noqa: E501

        :param name: The name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._name = name

    @property
    def personal_data(self):
        """Gets the personal_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The personal_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._personal_data

    @personal_data.setter
    def personal_data(self, personal_data):
        """Sets the personal_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param personal_data: The personal_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._personal_data = personal_data

    @property
    def shipping_address(self):
        """Gets the shipping_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501


        :return: The shipping_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.


        :param shipping_address: The shipping_address of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress
        """

        self._shipping_address = shipping_address

    @property
    def trip_number(self):
        """Gets the trip_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The trip_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._trip_number

    @trip_number.setter
    def trip_number(self, trip_number):
        """Sets the trip_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param trip_number: The trip_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._trip_number = trip_number

    @property
    def transaction_verification_result(self):
        """Gets the transaction_verification_result of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501

        Result of performed verifications for the transaction.  # noqa: E501

        :return: The transaction_verification_result of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: object
        """
        return self._transaction_verification_result

    @transaction_verification_result.setter
    def transaction_verification_result(self, transaction_verification_result):
        """Sets the transaction_verification_result of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.

        Result of performed verifications for the transaction.  # noqa: E501

        :param transaction_verification_result: The transaction_verification_result of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: object
        """

        self._transaction_verification_result = transaction_verification_result

    @property
    def vehicle(self):
        """Gets the vehicle of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501


        :return: The vehicle of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle
        """
        return self._vehicle

    @vehicle.setter
    def vehicle(self, vehicle):
        """Sets the vehicle of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.


        :param vehicle: The vehicle of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderVehicle
        """

        self._vehicle = vehicle

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestEnvironmentCardholder):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
