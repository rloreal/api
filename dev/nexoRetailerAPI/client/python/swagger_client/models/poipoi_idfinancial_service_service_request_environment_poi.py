# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestEnvironmentPOI(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'component': 'object',
        'capabilities': 'PoipoiIdfinancialServiceServiceRequestEnvironmentPOICapabilities',
        'group_identification': 'object',
        'identification': 'PoipoiIdfinancialServiceHeaderInitiatingParty',
        'system_name': 'object',
        'terminal_integration': 'object',
        'time_zone': 'object'
    }

    attribute_map = {
        'component': 'Component',
        'capabilities': 'Capabilities',
        'group_identification': 'GroupIdentification',
        'identification': 'Identification',
        'system_name': 'SystemName',
        'terminal_integration': 'TerminalIntegration',
        'time_zone': 'TimeZone'
    }

    def __init__(self, component=None, capabilities=None, group_identification=None, identification=None, system_name=None, terminal_integration=None, time_zone=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestEnvironmentPOI - a model defined in Swagger"""  # noqa: E501
        self._component = None
        self._capabilities = None
        self._group_identification = None
        self._identification = None
        self._system_name = None
        self._terminal_integration = None
        self._time_zone = None
        self.discriminator = None
        if component is not None:
            self.component = component
        if capabilities is not None:
            self.capabilities = capabilities
        if group_identification is not None:
            self.group_identification = group_identification
        self.identification = identification
        if system_name is not None:
            self.system_name = system_name
        if terminal_integration is not None:
            self.terminal_integration = terminal_integration
        if time_zone is not None:
            self.time_zone = time_zone

    @property
    def component(self):
        """Gets the component of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501

        Data related to a component of the POI (Point Of Interaction) performing the transaction.  # noqa: E501

        :return: The component of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: object
        """
        return self._component

    @component.setter
    def component(self, component):
        """Sets the component of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.

        Data related to a component of the POI (Point Of Interaction) performing the transaction.  # noqa: E501

        :param component: The component of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: object
        """

        self._component = component

    @property
    def capabilities(self):
        """Gets the capabilities of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501


        :return: The capabilities of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentPOICapabilities
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities):
        """Sets the capabilities of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.


        :param capabilities: The capabilities of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentPOICapabilities
        """

        self._capabilities = capabilities

    @property
    def group_identification(self):
        """Gets the group_identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The group_identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: object
        """
        return self._group_identification

    @group_identification.setter
    def group_identification(self, group_identification):
        """Sets the group_identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param group_identification: The group_identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: object
        """

        self._group_identification = group_identification

    @property
    def identification(self):
        """Gets the identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501


        :return: The identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceHeaderInitiatingParty
        """
        return self._identification

    @identification.setter
    def identification(self, identification):
        """Sets the identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.


        :param identification: The identification of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: PoipoiIdfinancialServiceHeaderInitiatingParty
        """
        if identification is None:
            raise ValueError("Invalid value for `identification`, must not be `None`")  # noqa: E501

        self._identification = identification

    @property
    def system_name(self):
        """Gets the system_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The system_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: object
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name):
        """Sets the system_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param system_name: The system_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: object
        """

        self._system_name = system_name

    @property
    def terminal_integration(self):
        """Gets the terminal_integration of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501

        Indicates the type of integration of the POI terminal in the sale environment.<br/>- **INDR: Indoor**  : *Indoor terminal.*<br/>- **IPMP: InsidePump**  : *Terminal incorporated in the pump dispensing petrol.*<br/>- **MPOI: MultiplePOITerminal**  : *Multiple terminals linked to a unique sale terminal.*<br/>- **MPMP: MultiplePump**  : *Outdoor terminal serving several petrol pumps.*<br/>- **MSLE: MultipleSaleTerminal**  : *Terminal serving multiple sale terminals.*<br/>- **SSLE: SingleSaleTerminal**  : *Terminal linked to a unique sale terminal.*<br/>- **VNDG: VendingMachine**  : *Terminal integrated in a vending machine.*<br/>  # noqa: E501

        :return: The terminal_integration of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: object
        """
        return self._terminal_integration

    @terminal_integration.setter
    def terminal_integration(self, terminal_integration):
        """Sets the terminal_integration of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.

        Indicates the type of integration of the POI terminal in the sale environment.<br/>- **INDR: Indoor**  : *Indoor terminal.*<br/>- **IPMP: InsidePump**  : *Terminal incorporated in the pump dispensing petrol.*<br/>- **MPOI: MultiplePOITerminal**  : *Multiple terminals linked to a unique sale terminal.*<br/>- **MPMP: MultiplePump**  : *Outdoor terminal serving several petrol pumps.*<br/>- **MSLE: MultipleSaleTerminal**  : *Terminal serving multiple sale terminals.*<br/>- **SSLE: SingleSaleTerminal**  : *Terminal linked to a unique sale terminal.*<br/>- **VNDG: VendingMachine**  : *Terminal integrated in a vending machine.*<br/>  # noqa: E501

        :param terminal_integration: The terminal_integration of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: object
        """

        self._terminal_integration = terminal_integration

    @property
    def time_zone(self):
        """Gets the time_zone of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The time_zone of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :rtype: object
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param time_zone: The time_zone of this PoipoiIdfinancialServiceServiceRequestEnvironmentPOI.  # noqa: E501
        :type: object
        """

        self._time_zone = time_zone

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestEnvironmentPOI, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestEnvironmentPOI):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
