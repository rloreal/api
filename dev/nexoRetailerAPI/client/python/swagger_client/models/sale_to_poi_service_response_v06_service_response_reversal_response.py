# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class SaleToPOIServiceResponseV06ServiceResponseReversalResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'issuer_reference_data': 'object',
        'poi_reconciliation_identification': 'object',
        'poi_transaction_identification': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification',
        'receipt_v07': 'object',
        'reversed_amount': 'object',
        'reversal_transaction_result': 'SaleToPOIServiceResponseV06ServiceResponseReversalResponseReversalTransactionResult',
        'sale_reference_identification': 'object',
        'sale_transaction_identification': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification'
    }

    attribute_map = {
        'issuer_reference_data': 'IssuerReferenceData',
        'poi_reconciliation_identification': 'POIReconciliationIdentification',
        'poi_transaction_identification': 'POITransactionIdentification',
        'receipt_v07': 'ReceiptV07',
        'reversed_amount': 'ReversedAmount',
        'reversal_transaction_result': 'ReversalTransactionResult',
        'sale_reference_identification': 'SaleReferenceIdentification',
        'sale_transaction_identification': 'SaleTransactionIdentification'
    }

    def __init__(self, issuer_reference_data=None, poi_reconciliation_identification=None, poi_transaction_identification=None, receipt_v07=None, reversed_amount=None, reversal_transaction_result=None, sale_reference_identification=None, sale_transaction_identification=None):  # noqa: E501
        """SaleToPOIServiceResponseV06ServiceResponseReversalResponse - a model defined in Swagger"""  # noqa: E501
        self._issuer_reference_data = None
        self._poi_reconciliation_identification = None
        self._poi_transaction_identification = None
        self._receipt_v07 = None
        self._reversed_amount = None
        self._reversal_transaction_result = None
        self._sale_reference_identification = None
        self._sale_transaction_identification = None
        self.discriminator = None
        if issuer_reference_data is not None:
            self.issuer_reference_data = issuer_reference_data
        if poi_reconciliation_identification is not None:
            self.poi_reconciliation_identification = poi_reconciliation_identification
        self.poi_transaction_identification = poi_transaction_identification
        if receipt_v07 is not None:
            self.receipt_v07 = receipt_v07
        if reversed_amount is not None:
            self.reversed_amount = reversed_amount
        self.reversal_transaction_result = reversal_transaction_result
        if sale_reference_identification is not None:
            self.sale_reference_identification = sale_reference_identification
        self.sale_transaction_identification = sale_transaction_identification

    @property
    def issuer_reference_data(self):
        """Gets the issuer_reference_data of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :return: The issuer_reference_data of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: object
        """
        return self._issuer_reference_data

    @issuer_reference_data.setter
    def issuer_reference_data(self, issuer_reference_data):
        """Sets the issuer_reference_data of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.

        Specifies a character string with a maximum length of 140 characters.<br/>  # noqa: E501

        :param issuer_reference_data: The issuer_reference_data of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: object
        """

        self._issuer_reference_data = issuer_reference_data

    @property
    def poi_reconciliation_identification(self):
        """Gets the poi_reconciliation_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The poi_reconciliation_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: object
        """
        return self._poi_reconciliation_identification

    @poi_reconciliation_identification.setter
    def poi_reconciliation_identification(self, poi_reconciliation_identification):
        """Sets the poi_reconciliation_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param poi_reconciliation_identification: The poi_reconciliation_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: object
        """

        self._poi_reconciliation_identification = poi_reconciliation_identification

    @property
    def poi_transaction_identification(self):
        """Gets the poi_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501


        :return: The poi_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        return self._poi_transaction_identification

    @poi_transaction_identification.setter
    def poi_transaction_identification(self, poi_transaction_identification):
        """Sets the poi_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.


        :param poi_transaction_identification: The poi_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        if poi_transaction_identification is None:
            raise ValueError("Invalid value for `poi_transaction_identification`, must not be `None`")  # noqa: E501

        self._poi_transaction_identification = poi_transaction_identification

    @property
    def receipt_v07(self):
        """Gets the receipt_v07 of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501

        Scope  The Receipt message is sent by the transaction administrator to a member of the system. It is sent to acknowledge the receipt of one or multiple messages sent previously.  The Receipt message is an application receipt acknowledgement and conveys information about the processing of the original message(s).  Usage  The Receipt message is used when the exchange of messages takes place in an asynchronous manner.  This may happen, for instance, when an action is requested from the transaction administrator (a deletion, modification or cancellation). The transaction administrator will first acknowledge the request (with a Receipt message) and then execute it.  The message can contain information based on the following elements: reference of the message(s) it acknowledges, the status code (optional) and further explanation:  - reference of the message it acknowledges  - potentially, a status code and an explanation.  # noqa: E501

        :return: The receipt_v07 of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: object
        """
        return self._receipt_v07

    @receipt_v07.setter
    def receipt_v07(self, receipt_v07):
        """Sets the receipt_v07 of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.

        Scope  The Receipt message is sent by the transaction administrator to a member of the system. It is sent to acknowledge the receipt of one or multiple messages sent previously.  The Receipt message is an application receipt acknowledgement and conveys information about the processing of the original message(s).  Usage  The Receipt message is used when the exchange of messages takes place in an asynchronous manner.  This may happen, for instance, when an action is requested from the transaction administrator (a deletion, modification or cancellation). The transaction administrator will first acknowledge the request (with a Receipt message) and then execute it.  The message can contain information based on the following elements: reference of the message(s) it acknowledges, the status code (optional) and further explanation:  - reference of the message it acknowledges  - potentially, a status code and an explanation.  # noqa: E501

        :param receipt_v07: The receipt_v07 of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: object
        """

        self._receipt_v07 = receipt_v07

    @property
    def reversed_amount(self):
        """Gets the reversed_amount of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The reversed_amount of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: object
        """
        return self._reversed_amount

    @reversed_amount.setter
    def reversed_amount(self, reversed_amount):
        """Sets the reversed_amount of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param reversed_amount: The reversed_amount of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: object
        """

        self._reversed_amount = reversed_amount

    @property
    def reversal_transaction_result(self):
        """Gets the reversal_transaction_result of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501


        :return: The reversal_transaction_result of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: SaleToPOIServiceResponseV06ServiceResponseReversalResponseReversalTransactionResult
        """
        return self._reversal_transaction_result

    @reversal_transaction_result.setter
    def reversal_transaction_result(self, reversal_transaction_result):
        """Sets the reversal_transaction_result of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.


        :param reversal_transaction_result: The reversal_transaction_result of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: SaleToPOIServiceResponseV06ServiceResponseReversalResponseReversalTransactionResult
        """
        if reversal_transaction_result is None:
            raise ValueError("Invalid value for `reversal_transaction_result`, must not be `None`")  # noqa: E501

        self._reversal_transaction_result = reversal_transaction_result

    @property
    def sale_reference_identification(self):
        """Gets the sale_reference_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The sale_reference_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: object
        """
        return self._sale_reference_identification

    @sale_reference_identification.setter
    def sale_reference_identification(self, sale_reference_identification):
        """Sets the sale_reference_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param sale_reference_identification: The sale_reference_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: object
        """

        self._sale_reference_identification = sale_reference_identification

    @property
    def sale_transaction_identification(self):
        """Gets the sale_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501


        :return: The sale_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        return self._sale_transaction_identification

    @sale_transaction_identification.setter
    def sale_transaction_identification(self, sale_transaction_identification):
        """Sets the sale_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.


        :param sale_transaction_identification: The sale_transaction_identification of this SaleToPOIServiceResponseV06ServiceResponseReversalResponse.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestSaleTransactionIdentification
        """
        if sale_transaction_identification is None:
            raise ValueError("Invalid value for `sale_transaction_identification`, must not be `None`")  # noqa: E501

        self._sale_transaction_identification = sale_transaction_identification

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SaleToPOIServiceResponseV06ServiceResponseReversalResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaleToPOIServiceResponseV06ServiceResponseReversalResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
