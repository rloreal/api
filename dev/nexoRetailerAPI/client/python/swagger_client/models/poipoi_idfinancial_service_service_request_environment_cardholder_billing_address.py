# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address_line': 'object',
        'address_type': 'object',
        'building_number': 'object',
        'country_code': 'object',
        'country_sub_division': 'object',
        'department': 'object',
        'post_code': 'object',
        'street_name': 'object',
        'sub_department': 'object',
        'town_name': 'object'
    }

    attribute_map = {
        'address_line': 'AddressLine',
        'address_type': 'AddressType',
        'building_number': 'BuildingNumber',
        'country_code': 'CountryCode',
        'country_sub_division': 'CountrySubDivision',
        'department': 'Department',
        'post_code': 'PostCode',
        'street_name': 'StreetName',
        'sub_department': 'SubDepartment',
        'town_name': 'TownName'
    }

    def __init__(self, address_line=None, address_type=None, building_number=None, country_code=None, country_sub_division=None, department=None, post_code=None, street_name=None, sub_department=None, town_name=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress - a model defined in Swagger"""  # noqa: E501
        self._address_line = None
        self._address_type = None
        self._building_number = None
        self._country_code = None
        self._country_sub_division = None
        self._department = None
        self._post_code = None
        self._street_name = None
        self._sub_department = None
        self._town_name = None
        self.discriminator = None
        if address_line is not None:
            self.address_line = address_line
        if address_type is not None:
            self.address_type = address_type
        if building_number is not None:
            self.building_number = building_number
        if country_code is not None:
            self.country_code = country_code
        if country_sub_division is not None:
            self.country_sub_division = country_sub_division
        if department is not None:
            self.department = department
        if post_code is not None:
            self.post_code = post_code
        if street_name is not None:
            self.street_name = street_name
        if sub_department is not None:
            self.sub_department = sub_department
        if town_name is not None:
            self.town_name = town_name

    @property
    def address_line(self):
        """Gets the address_line of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Information that locates and identifies a specific address, as defined by postal services, presented in free format text.  # noqa: E501

        :return: The address_line of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._address_line

    @address_line.setter
    def address_line(self, address_line):
        """Sets the address_line of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Information that locates and identifies a specific address, as defined by postal services, presented in free format text.  # noqa: E501

        :param address_line: The address_line of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._address_line = address_line

    @property
    def address_type(self):
        """Gets the address_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies the type of address.<br/>- **ADDR: Postal**  : *Address is the complete postal address.*<br/>- **PBOX: POBox**  : *Address is a postal office (PO) box.*<br/>- **HOME: Residential**  : *Address is the home address.*<br/>- **BIZZ: Business**  : *Address is the business address.*<br/>- **MLTO: MailTo**  : *Address is the address to which mail is sent.*<br/>- **DLVY: DeliveryTo**  : *Address is the address to which delivery is to take place.*<br/>  # noqa: E501

        :return: The address_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._address_type

    @address_type.setter
    def address_type(self, address_type):
        """Sets the address_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies the type of address.<br/>- **ADDR: Postal**  : *Address is the complete postal address.*<br/>- **PBOX: POBox**  : *Address is a postal office (PO) box.*<br/>- **HOME: Residential**  : *Address is the home address.*<br/>- **BIZZ: Business**  : *Address is the business address.*<br/>- **MLTO: MailTo**  : *Address is the address to which mail is sent.*<br/>- **DLVY: DeliveryTo**  : *Address is the address to which delivery is to take place.*<br/>  # noqa: E501

        :param address_type: The address_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._address_type = address_type

    @property
    def building_number(self):
        """Gets the building_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 16 characters.<br/>  # noqa: E501

        :return: The building_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._building_number

    @building_number.setter
    def building_number(self, building_number):
        """Sets the building_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 16 characters.<br/>  # noqa: E501

        :param building_number: The building_number of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._building_number = building_number

    @property
    def country_code(self):
        """Gets the country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies an alpha string with a minimum length of 2 characters and a maximum length of 3 characters.<br/>  # noqa: E501

        :return: The country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies an alpha string with a minimum length of 2 characters and a maximum length of 3 characters.<br/>  # noqa: E501

        :param country_code: The country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._country_code = country_code

    @property
    def country_sub_division(self):
        """Gets the country_sub_division of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Identifies a subdivision of a country such as state, region, county.  # noqa: E501

        :return: The country_sub_division of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._country_sub_division

    @country_sub_division.setter
    def country_sub_division(self, country_sub_division):
        """Sets the country_sub_division of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Identifies a subdivision of a country such as state, region, county.  # noqa: E501

        :param country_sub_division: The country_sub_division of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._country_sub_division = country_sub_division

    @property
    def department(self):
        """Gets the department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param department: The department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._department = department

    @property
    def post_code(self):
        """Gets the post_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 16 characters.<br/>  # noqa: E501

        :return: The post_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._post_code

    @post_code.setter
    def post_code(self, post_code):
        """Sets the post_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 16 characters.<br/>  # noqa: E501

        :param post_code: The post_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._post_code = post_code

    @property
    def street_name(self):
        """Gets the street_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The street_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._street_name

    @street_name.setter
    def street_name(self, street_name):
        """Sets the street_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param street_name: The street_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._street_name = street_name

    @property
    def sub_department(self):
        """Gets the sub_department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The sub_department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._sub_department

    @sub_department.setter
    def sub_department(self, sub_department):
        """Sets the sub_department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param sub_department: The sub_department of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._sub_department = sub_department

    @property
    def town_name(self):
        """Gets the town_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The town_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :rtype: object
        """
        return self._town_name

    @town_name.setter
    def town_name(self, town_name):
        """Sets the town_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param town_name: The town_name of this PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress.  # noqa: E501
        :type: object
        """

        self._town_name = town_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestEnvironmentCardholderBillingAddress):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
