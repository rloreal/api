# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestEnvironmentCard(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'additional_card_data': 'object',
        'allowed_product': 'object',
        'card_brand': 'object',
        'card_currency_code': 'object',
        'card_country_code': 'object',
        'card_product_profile': 'object',
        'card_product_sub_type': 'object',
        'card_product_type': 'object',
        'international_card': 'object',
        'issuer_bin': 'object',
        'masked_pan': 'object',
        'plain_card_data': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardPlainCardData',
        'payment_account_reference': 'object',
        'protected_card_data': 'PoipoiIdfinancialServiceServiceRequestEnvironmentCardProtectedCardData',
        'private_card_data': 'object',
        'service_option': 'object'
    }

    attribute_map = {
        'additional_card_data': 'AdditionalCardData',
        'allowed_product': 'AllowedProduct',
        'card_brand': 'CardBrand',
        'card_currency_code': 'CardCurrencyCode',
        'card_country_code': 'CardCountryCode',
        'card_product_profile': 'CardProductProfile',
        'card_product_sub_type': 'CardProductSubType',
        'card_product_type': 'CardProductType',
        'international_card': 'InternationalCard',
        'issuer_bin': 'IssuerBIN',
        'masked_pan': 'MaskedPAN',
        'plain_card_data': 'PlainCardData',
        'payment_account_reference': 'PaymentAccountReference',
        'protected_card_data': 'ProtectedCardData',
        'private_card_data': 'PrivateCardData',
        'service_option': 'ServiceOption'
    }

    def __init__(self, additional_card_data=None, allowed_product=None, card_brand=None, card_currency_code=None, card_country_code=None, card_product_profile=None, card_product_sub_type=None, card_product_type=None, international_card=None, issuer_bin=None, masked_pan=None, plain_card_data=None, payment_account_reference=None, protected_card_data=None, private_card_data=None, service_option=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestEnvironmentCard - a model defined in Swagger"""  # noqa: E501
        self._additional_card_data = None
        self._allowed_product = None
        self._card_brand = None
        self._card_currency_code = None
        self._card_country_code = None
        self._card_product_profile = None
        self._card_product_sub_type = None
        self._card_product_type = None
        self._international_card = None
        self._issuer_bin = None
        self._masked_pan = None
        self._plain_card_data = None
        self._payment_account_reference = None
        self._protected_card_data = None
        self._private_card_data = None
        self._service_option = None
        self.discriminator = None
        if additional_card_data is not None:
            self.additional_card_data = additional_card_data
        if allowed_product is not None:
            self.allowed_product = allowed_product
        if card_brand is not None:
            self.card_brand = card_brand
        if card_currency_code is not None:
            self.card_currency_code = card_currency_code
        if card_country_code is not None:
            self.card_country_code = card_country_code
        if card_product_profile is not None:
            self.card_product_profile = card_product_profile
        if card_product_sub_type is not None:
            self.card_product_sub_type = card_product_sub_type
        if card_product_type is not None:
            self.card_product_type = card_product_type
        if international_card is not None:
            self.international_card = international_card
        if issuer_bin is not None:
            self.issuer_bin = issuer_bin
        if masked_pan is not None:
            self.masked_pan = masked_pan
        if plain_card_data is not None:
            self.plain_card_data = plain_card_data
        if payment_account_reference is not None:
            self.payment_account_reference = payment_account_reference
        if protected_card_data is not None:
            self.protected_card_data = protected_card_data
        if private_card_data is not None:
            self.private_card_data = private_card_data
        if service_option is not None:
            self.service_option = service_option

    @property
    def additional_card_data(self):
        """Gets the additional_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The additional_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._additional_card_data

    @additional_card_data.setter
    def additional_card_data(self, additional_card_data):
        """Sets the additional_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param additional_card_data: The additional_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._additional_card_data = additional_card_data

    @property
    def allowed_product(self):
        """Gets the allowed_product of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Product that can be purchased with the card.  # noqa: E501

        :return: The allowed_product of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._allowed_product

    @allowed_product.setter
    def allowed_product(self, allowed_product):
        """Sets the allowed_product of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Product that can be purchased with the card.  # noqa: E501

        :param allowed_product: The allowed_product of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._allowed_product = allowed_product

    @property
    def card_brand(self):
        """Gets the card_brand of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The card_brand of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_brand

    @card_brand.setter
    def card_brand(self, card_brand):
        """Sets the card_brand of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param card_brand: The card_brand of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_brand = card_brand

    @property
    def card_currency_code(self):
        """Gets the card_currency_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies an alphanumeric string with a length of exact 3 characters.<br/>  # noqa: E501

        :return: The card_currency_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_currency_code

    @card_currency_code.setter
    def card_currency_code(self, card_currency_code):
        """Sets the card_currency_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies an alphanumeric string with a length of exact 3 characters.<br/>  # noqa: E501

        :param card_currency_code: The card_currency_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_currency_code = card_currency_code

    @property
    def card_country_code(self):
        """Gets the card_country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 3 characters.<br/>  # noqa: E501

        :return: The card_country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_country_code

    @card_country_code.setter
    def card_country_code(self, card_country_code):
        """Sets the card_country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 3 characters.<br/>  # noqa: E501

        :param card_country_code: The card_country_code of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_country_code = card_country_code

    @property
    def card_product_profile(self):
        """Gets the card_product_profile of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The card_product_profile of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_product_profile

    @card_product_profile.setter
    def card_product_profile(self, card_product_profile):
        """Sets the card_product_profile of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param card_product_profile: The card_product_profile of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_product_profile = card_product_profile

    @property
    def card_product_sub_type(self):
        """Gets the card_product_sub_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The card_product_sub_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_product_sub_type

    @card_product_sub_type.setter
    def card_product_sub_type(self, card_product_sub_type):
        """Sets the card_product_sub_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param card_product_sub_type: The card_product_sub_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_product_sub_type = card_product_sub_type

    @property
    def card_product_type(self):
        """Gets the card_product_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Type of card product.<br/>- **COMM: CommercialCard**  : *Cards issued as a means of business expenditure, for instance business card or corporate card. The user could be a company, an individual for business expenses or a self employed for business purposes.*<br/>- **CONS: ConsumerCard**  : *Cards issued as a means of personal expenditure. The user is always an individual.*<br/>  # noqa: E501

        :return: The card_product_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._card_product_type

    @card_product_type.setter
    def card_product_type(self, card_product_type):
        """Sets the card_product_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Type of card product.<br/>- **COMM: CommercialCard**  : *Cards issued as a means of business expenditure, for instance business card or corporate card. The user could be a company, an individual for business expenses or a self employed for business purposes.*<br/>- **CONS: ConsumerCard**  : *Cards issued as a means of personal expenditure. The user is always an individual.*<br/>  # noqa: E501

        :param card_product_type: The card_product_type of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._card_product_type = card_product_type

    @property
    def international_card(self):
        """Gets the international_card of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        A flag indicating a True or False value.<br/>  # noqa: E501

        :return: The international_card of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._international_card

    @international_card.setter
    def international_card(self, international_card):
        """Sets the international_card of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        A flag indicating a True or False value.<br/>  # noqa: E501

        :param international_card: The international_card of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._international_card = international_card

    @property
    def issuer_bin(self):
        """Gets the issuer_bin of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a numeric string with a maximum length of 15 digits.<br/>  # noqa: E501

        :return: The issuer_bin of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._issuer_bin

    @issuer_bin.setter
    def issuer_bin(self, issuer_bin):
        """Sets the issuer_bin of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a numeric string with a maximum length of 15 digits.<br/>  # noqa: E501

        :param issuer_bin: The issuer_bin of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._issuer_bin = issuer_bin

    @property
    def masked_pan(self):
        """Gets the masked_pan of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 30 characters.<br/>  # noqa: E501

        :return: The masked_pan of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._masked_pan

    @masked_pan.setter
    def masked_pan(self, masked_pan):
        """Sets the masked_pan of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 30 characters.<br/>  # noqa: E501

        :param masked_pan: The masked_pan of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._masked_pan = masked_pan

    @property
    def plain_card_data(self):
        """Gets the plain_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501


        :return: The plain_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardPlainCardData
        """
        return self._plain_card_data

    @plain_card_data.setter
    def plain_card_data(self, plain_card_data):
        """Sets the plain_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.


        :param plain_card_data: The plain_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardPlainCardData
        """

        self._plain_card_data = plain_card_data

    @property
    def payment_account_reference(self):
        """Gets the payment_account_reference of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :return: The payment_account_reference of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._payment_account_reference

    @payment_account_reference.setter
    def payment_account_reference(self, payment_account_reference):
        """Sets the payment_account_reference of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 70characters.<br/>  # noqa: E501

        :param payment_account_reference: The payment_account_reference of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._payment_account_reference = payment_account_reference

    @property
    def protected_card_data(self):
        """Gets the protected_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501


        :return: The protected_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironmentCardProtectedCardData
        """
        return self._protected_card_data

    @protected_card_data.setter
    def protected_card_data(self, protected_card_data):
        """Sets the protected_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.


        :param protected_card_data: The protected_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironmentCardProtectedCardData
        """

        self._protected_card_data = protected_card_data

    @property
    def private_card_data(self):
        """Gets the private_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Binary data of 100K maximum.<br/>  # noqa: E501

        :return: The private_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._private_card_data

    @private_card_data.setter
    def private_card_data(self, private_card_data):
        """Sets the private_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Binary data of 100K maximum.<br/>  # noqa: E501

        :param private_card_data: The private_card_data of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._private_card_data = private_card_data

    @property
    def service_option(self):
        """Gets the service_option of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The service_option of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :rtype: object
        """
        return self._service_option

    @service_option.setter
    def service_option(self, service_option):
        """Sets the service_option of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param service_option: The service_option of this PoipoiIdfinancialServiceServiceRequestEnvironmentCard.  # noqa: E501
        :type: object
        """

        self._service_option = service_option

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestEnvironmentCard, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestEnvironmentCard):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
