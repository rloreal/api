# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'balance_inquiry_request': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequest',
        'batch_request': 'PoipoiIdfinancialServiceServiceRequestBatchRequest',
        'card_acquisition_request': 'PoipoiIdfinancialServiceServiceRequestCardAcquisitionRequest',
        'context': 'PoipoiIdfinancialServiceServiceRequestContext',
        'environment': 'PoipoiIdfinancialServiceServiceRequestEnvironment',
        'loyalty_request': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequest',
        'enable_service_request': 'PoipoiIdfinancialServiceServiceRequestEnableServiceRequest',
        'payment_request': 'PoipoiIdfinancialServiceServiceRequestPaymentRequest',
        'reversal_request': 'PoipoiIdfinancialServiceServiceRequestReversalRequest',
        'supplementary_data': 'object',
        'stored_value_request': 'PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestStoredValueAccountRequest',
        'service_content': 'object'
    }

    attribute_map = {
        'balance_inquiry_request': 'BalanceInquiryRequest',
        'batch_request': 'BatchRequest',
        'card_acquisition_request': 'CardAcquisitionRequest',
        'context': 'Context',
        'environment': 'Environment',
        'loyalty_request': 'LoyaltyRequest',
        'enable_service_request': 'EnableServiceRequest',
        'payment_request': 'PaymentRequest',
        'reversal_request': 'ReversalRequest',
        'supplementary_data': 'SupplementaryData',
        'stored_value_request': 'StoredValueRequest',
        'service_content': 'ServiceContent'
    }

    def __init__(self, balance_inquiry_request=None, batch_request=None, card_acquisition_request=None, context=None, environment=None, loyalty_request=None, enable_service_request=None, payment_request=None, reversal_request=None, supplementary_data=None, stored_value_request=None, service_content=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequest - a model defined in Swagger"""  # noqa: E501
        self._balance_inquiry_request = None
        self._batch_request = None
        self._card_acquisition_request = None
        self._context = None
        self._environment = None
        self._loyalty_request = None
        self._enable_service_request = None
        self._payment_request = None
        self._reversal_request = None
        self._supplementary_data = None
        self._stored_value_request = None
        self._service_content = None
        self.discriminator = None
        if balance_inquiry_request is not None:
            self.balance_inquiry_request = balance_inquiry_request
        if batch_request is not None:
            self.batch_request = batch_request
        if card_acquisition_request is not None:
            self.card_acquisition_request = card_acquisition_request
        self.context = context
        self.environment = environment
        if loyalty_request is not None:
            self.loyalty_request = loyalty_request
        if enable_service_request is not None:
            self.enable_service_request = enable_service_request
        if payment_request is not None:
            self.payment_request = payment_request
        if reversal_request is not None:
            self.reversal_request = reversal_request
        if supplementary_data is not None:
            self.supplementary_data = supplementary_data
        if stored_value_request is not None:
            self.stored_value_request = stored_value_request
        self.service_content = service_content

    @property
    def balance_inquiry_request(self):
        """Gets the balance_inquiry_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The balance_inquiry_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequest
        """
        return self._balance_inquiry_request

    @balance_inquiry_request.setter
    def balance_inquiry_request(self, balance_inquiry_request):
        """Sets the balance_inquiry_request of this PoipoiIdfinancialServiceServiceRequest.


        :param balance_inquiry_request: The balance_inquiry_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequest
        """

        self._balance_inquiry_request = balance_inquiry_request

    @property
    def batch_request(self):
        """Gets the batch_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The batch_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBatchRequest
        """
        return self._batch_request

    @batch_request.setter
    def batch_request(self, batch_request):
        """Sets the batch_request of this PoipoiIdfinancialServiceServiceRequest.


        :param batch_request: The batch_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBatchRequest
        """

        self._batch_request = batch_request

    @property
    def card_acquisition_request(self):
        """Gets the card_acquisition_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The card_acquisition_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestCardAcquisitionRequest
        """
        return self._card_acquisition_request

    @card_acquisition_request.setter
    def card_acquisition_request(self, card_acquisition_request):
        """Sets the card_acquisition_request of this PoipoiIdfinancialServiceServiceRequest.


        :param card_acquisition_request: The card_acquisition_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestCardAcquisitionRequest
        """

        self._card_acquisition_request = card_acquisition_request

    @property
    def context(self):
        """Gets the context of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The context of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestContext
        """
        return self._context

    @context.setter
    def context(self, context):
        """Sets the context of this PoipoiIdfinancialServiceServiceRequest.


        :param context: The context of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestContext
        """
        if context is None:
            raise ValueError("Invalid value for `context`, must not be `None`")  # noqa: E501

        self._context = context

    @property
    def environment(self):
        """Gets the environment of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The environment of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnvironment
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this PoipoiIdfinancialServiceServiceRequest.


        :param environment: The environment of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnvironment
        """
        if environment is None:
            raise ValueError("Invalid value for `environment`, must not be `None`")  # noqa: E501

        self._environment = environment

    @property
    def loyalty_request(self):
        """Gets the loyalty_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The loyalty_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequest
        """
        return self._loyalty_request

    @loyalty_request.setter
    def loyalty_request(self, loyalty_request):
        """Sets the loyalty_request of this PoipoiIdfinancialServiceServiceRequest.


        :param loyalty_request: The loyalty_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequest
        """

        self._loyalty_request = loyalty_request

    @property
    def enable_service_request(self):
        """Gets the enable_service_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The enable_service_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestEnableServiceRequest
        """
        return self._enable_service_request

    @enable_service_request.setter
    def enable_service_request(self, enable_service_request):
        """Sets the enable_service_request of this PoipoiIdfinancialServiceServiceRequest.


        :param enable_service_request: The enable_service_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestEnableServiceRequest
        """

        self._enable_service_request = enable_service_request

    @property
    def payment_request(self):
        """Gets the payment_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The payment_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestPaymentRequest
        """
        return self._payment_request

    @payment_request.setter
    def payment_request(self, payment_request):
        """Sets the payment_request of this PoipoiIdfinancialServiceServiceRequest.


        :param payment_request: The payment_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestPaymentRequest
        """

        self._payment_request = payment_request

    @property
    def reversal_request(self):
        """Gets the reversal_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The reversal_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestReversalRequest
        """
        return self._reversal_request

    @reversal_request.setter
    def reversal_request(self, reversal_request):
        """Sets the reversal_request of this PoipoiIdfinancialServiceServiceRequest.


        :param reversal_request: The reversal_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestReversalRequest
        """

        self._reversal_request = reversal_request

    @property
    def supplementary_data(self):
        """Gets the supplementary_data of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501

        Additional information incorporated as an extension to the message.  # noqa: E501

        :return: The supplementary_data of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: object
        """
        return self._supplementary_data

    @supplementary_data.setter
    def supplementary_data(self, supplementary_data):
        """Sets the supplementary_data of this PoipoiIdfinancialServiceServiceRequest.

        Additional information incorporated as an extension to the message.  # noqa: E501

        :param supplementary_data: The supplementary_data of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: object
        """

        self._supplementary_data = supplementary_data

    @property
    def stored_value_request(self):
        """Gets the stored_value_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501


        :return: The stored_value_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestStoredValueAccountRequest
        """
        return self._stored_value_request

    @stored_value_request.setter
    def stored_value_request(self, stored_value_request):
        """Sets the stored_value_request of this PoipoiIdfinancialServiceServiceRequest.


        :param stored_value_request: The stored_value_request of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestBalanceInquiryRequestStoredValueAccountRequest
        """

        self._stored_value_request = stored_value_request

    @property
    def service_content(self):
        """Gets the service_content of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501

        List of specific services for ServiceRequest<br/>- **FSPQ: FinancialPaymentRequest**  : *The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...).*<br/>- **FSRQ: FinancialReversalRequest**  : *The Sale System requests to the POI System to perform a reversal partial or complete to cancel a former payment service.*<br/>- **FSIQ: FinancialBalanceInquiryRequest**  : *The Sale System requests to the POI System to perform balance inquiry on the main account.*<br/>- **FSBQ: FinancialBatchRequest**  : *The Batch message pair is used to request or get the result of transactions (payment, loyalty and reversal) performed without connection to the Sale system (Payment delivery).*<br/>- **FSLQ: FinancialLoyaltyRequest**  : *The Sale System requests to the POI System a loyalty service like loading or redeem.*<br/>- **FSVQ: FinancialStoredValueRequest**  : *The Sale System requests to the POI System to manage a stored value card or account (eg. Load, Payment, Reimbursement).*<br/>- **FSEQ: FinancialEnableServiceRequest**  : *The Sale System requests to the POI System to enable a service on its side.*<br/>- **FSAQ: FinancialCardAcquisitionRequest**  : *The Sale System requests to the POI System to handle a card data acquisition on the card reader.*<br/>- **FSCQ: FinancialReconciliationRequest**  : *The Sale System request to the POI System different kinds of transaction reconciliation. *<br/>  # noqa: E501

        :return: The service_content of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :rtype: object
        """
        return self._service_content

    @service_content.setter
    def service_content(self, service_content):
        """Sets the service_content of this PoipoiIdfinancialServiceServiceRequest.

        List of specific services for ServiceRequest<br/>- **FSPQ: FinancialPaymentRequest**  : *The Sale System requests to the POI System to perform a payment(Purchase/Refund/PWCB/MOTO Payment/...).*<br/>- **FSRQ: FinancialReversalRequest**  : *The Sale System requests to the POI System to perform a reversal partial or complete to cancel a former payment service.*<br/>- **FSIQ: FinancialBalanceInquiryRequest**  : *The Sale System requests to the POI System to perform balance inquiry on the main account.*<br/>- **FSBQ: FinancialBatchRequest**  : *The Batch message pair is used to request or get the result of transactions (payment, loyalty and reversal) performed without connection to the Sale system (Payment delivery).*<br/>- **FSLQ: FinancialLoyaltyRequest**  : *The Sale System requests to the POI System a loyalty service like loading or redeem.*<br/>- **FSVQ: FinancialStoredValueRequest**  : *The Sale System requests to the POI System to manage a stored value card or account (eg. Load, Payment, Reimbursement).*<br/>- **FSEQ: FinancialEnableServiceRequest**  : *The Sale System requests to the POI System to enable a service on its side.*<br/>- **FSAQ: FinancialCardAcquisitionRequest**  : *The Sale System requests to the POI System to handle a card data acquisition on the card reader.*<br/>- **FSCQ: FinancialReconciliationRequest**  : *The Sale System request to the POI System different kinds of transaction reconciliation. *<br/>  # noqa: E501

        :param service_content: The service_content of this PoipoiIdfinancialServiceServiceRequest.  # noqa: E501
        :type: object
        """
        if service_content is None:
            raise ValueError("Invalid value for `service_content`, must not be `None`")  # noqa: E501

        self._service_content = service_content

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
