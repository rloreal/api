# coding: utf-8

"""
    nexo retailer API

    API defining resources for interactions between POI and POS, using underlying nexo messages  ### Check out its awesome features:  * simply declare POS and POI * send requests to POI * monitor activity ðŸ˜Ž * Receive real-time information about transaction executionsðŸ“ˆ   # noqa: E501

    OpenAPI spec version: 0.1.0
    Contact: romain.loreal@lorealconsulting.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_type': 'object',
        'additional_information': 'object',
        'aggregation_transaction': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsAggregationTransaction',
        'amount_qualifier': 'object',
        'authorised_amount': 'object',
        'currency': 'object',
        'currency_conversion_result': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsCurrencyConversionResult',
        'cumulative_amount': 'object',
        'completion_sequence_counter': 'object',
        'completion_sequence_number': 'object',
        'delivery_location': 'object',
        'detailed_amount': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount',
        'icc_related_data': 'object',
        'instalment': 'object',
        'invoice_amount': 'object',
        'on_line_reason': 'object',
        'product_code_set_identification': 'object',
        'recurring': 'PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsRecurring',
        're_submission_counter': 'object',
        'requested_amount': 'object',
        'sale_item': 'object',
        'total_amount': 'object',
        'total_authorised_amount': 'object',
        'unattended_level_category': 'object',
        'validity_date': 'object'
    }

    attribute_map = {
        'account_type': 'AccountType',
        'additional_information': 'AdditionalInformation',
        'aggregation_transaction': 'AggregationTransaction',
        'amount_qualifier': 'AmountQualifier',
        'authorised_amount': 'AuthorisedAmount',
        'currency': 'Currency',
        'currency_conversion_result': 'CurrencyConversionResult',
        'cumulative_amount': 'CumulativeAmount',
        'completion_sequence_counter': 'CompletionSequenceCounter',
        'completion_sequence_number': 'CompletionSequenceNumber',
        'delivery_location': 'DeliveryLocation',
        'detailed_amount': 'DetailedAmount',
        'icc_related_data': 'ICCRelatedData',
        'instalment': 'Instalment',
        'invoice_amount': 'InvoiceAmount',
        'on_line_reason': 'OnLineReason',
        'product_code_set_identification': 'ProductCodeSetIdentification',
        'recurring': 'Recurring',
        're_submission_counter': 'ReSubmissionCounter',
        'requested_amount': 'RequestedAmount',
        'sale_item': 'SaleItem',
        'total_amount': 'TotalAmount',
        'total_authorised_amount': 'TotalAuthorisedAmount',
        'unattended_level_category': 'UnattendedLevelCategory',
        'validity_date': 'ValidityDate'
    }

    def __init__(self, account_type=None, additional_information=None, aggregation_transaction=None, amount_qualifier=None, authorised_amount=None, currency=None, currency_conversion_result=None, cumulative_amount=None, completion_sequence_counter=None, completion_sequence_number=None, delivery_location=None, detailed_amount=None, icc_related_data=None, instalment=None, invoice_amount=None, on_line_reason=None, product_code_set_identification=None, recurring=None, re_submission_counter=None, requested_amount=None, sale_item=None, total_amount=None, total_authorised_amount=None, unattended_level_category=None, validity_date=None):  # noqa: E501
        """PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails - a model defined in Swagger"""  # noqa: E501
        self._account_type = None
        self._additional_information = None
        self._aggregation_transaction = None
        self._amount_qualifier = None
        self._authorised_amount = None
        self._currency = None
        self._currency_conversion_result = None
        self._cumulative_amount = None
        self._completion_sequence_counter = None
        self._completion_sequence_number = None
        self._delivery_location = None
        self._detailed_amount = None
        self._icc_related_data = None
        self._instalment = None
        self._invoice_amount = None
        self._on_line_reason = None
        self._product_code_set_identification = None
        self._recurring = None
        self._re_submission_counter = None
        self._requested_amount = None
        self._sale_item = None
        self._total_amount = None
        self._total_authorised_amount = None
        self._unattended_level_category = None
        self._validity_date = None
        self.discriminator = None
        if account_type is not None:
            self.account_type = account_type
        if additional_information is not None:
            self.additional_information = additional_information
        if aggregation_transaction is not None:
            self.aggregation_transaction = aggregation_transaction
        if amount_qualifier is not None:
            self.amount_qualifier = amount_qualifier
        if authorised_amount is not None:
            self.authorised_amount = authorised_amount
        if currency is not None:
            self.currency = currency
        if currency_conversion_result is not None:
            self.currency_conversion_result = currency_conversion_result
        if cumulative_amount is not None:
            self.cumulative_amount = cumulative_amount
        if completion_sequence_counter is not None:
            self.completion_sequence_counter = completion_sequence_counter
        if completion_sequence_number is not None:
            self.completion_sequence_number = completion_sequence_number
        if delivery_location is not None:
            self.delivery_location = delivery_location
        if detailed_amount is not None:
            self.detailed_amount = detailed_amount
        if icc_related_data is not None:
            self.icc_related_data = icc_related_data
        if instalment is not None:
            self.instalment = instalment
        if invoice_amount is not None:
            self.invoice_amount = invoice_amount
        if on_line_reason is not None:
            self.on_line_reason = on_line_reason
        if product_code_set_identification is not None:
            self.product_code_set_identification = product_code_set_identification
        if recurring is not None:
            self.recurring = recurring
        if re_submission_counter is not None:
            self.re_submission_counter = re_submission_counter
        if requested_amount is not None:
            self.requested_amount = requested_amount
        if sale_item is not None:
            self.sale_item = sale_item
        self.total_amount = total_amount
        if total_authorised_amount is not None:
            self.total_authorised_amount = total_authorised_amount
        if unattended_level_category is not None:
            self.unattended_level_category = unattended_level_category
        if validity_date is not None:
            self.validity_date = validity_date

    @property
    def account_type(self):
        """Gets the account_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Type of cardholder account used for the transaction.<br/>- **CTDP: CertificateOfDeposit**  : *Certificate of deposit saving account.*<br/>- **CHCK: Checking**  : *Checking account.*<br/>- **CRDT: CreditCard**  : *Credit card account.*<br/>- **CURR: Current**  : *Current account.*<br/>- **CDBT: DebitCard**  : *Debit card account.*<br/>- **DFLT: Default**  : *Default account.*<br/>- **EPRS: EpurseCard**  : *Electronic purse card account.*<br/>- **HEQL: HomeEquityLoan**  : *Home equity loan credit account.*<br/>- **ISTL: InstalmentLoan**  : *Instalment loan credit account.*<br/>- **INVS: Investment**  : *Investment account.*<br/>- **LCDT: LineOfCredit**  : *Line of credit account.*<br/>- **MBNW: MobilePhoneAccount**  : *Mobile Station Integrated Services Digital Network Number (MSISDN).*<br/>- **MNMK: MoneyMarket**  : *Money market saving account.*<br/>- **MNMC: MoneyMarketChecking**  : *Money market checking account.*<br/>- **MTGL: MortgageLoan**  : *Mortgage loan credit account.*<br/>- **RTRM: RetirementAccount**  : *Retirement account.*<br/>- **RVLV: RevolvingLoanAccount**  : *Revolving loan account.*<br/>- **SVNG: Savings**  : *Savings account.*<br/>- **STBD: StockOrBond**  : *Stock or bond investment account.*<br/>- **UVRL: Universal**  : *Universal account.*<br/>- **PRPD: PrePaid**  : *Pre-paid account.*<br/>- **FLTC: FleetCard**  : *Fleet card account.*<br/>  # noqa: E501

        :return: The account_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Type of cardholder account used for the transaction.<br/>- **CTDP: CertificateOfDeposit**  : *Certificate of deposit saving account.*<br/>- **CHCK: Checking**  : *Checking account.*<br/>- **CRDT: CreditCard**  : *Credit card account.*<br/>- **CURR: Current**  : *Current account.*<br/>- **CDBT: DebitCard**  : *Debit card account.*<br/>- **DFLT: Default**  : *Default account.*<br/>- **EPRS: EpurseCard**  : *Electronic purse card account.*<br/>- **HEQL: HomeEquityLoan**  : *Home equity loan credit account.*<br/>- **ISTL: InstalmentLoan**  : *Instalment loan credit account.*<br/>- **INVS: Investment**  : *Investment account.*<br/>- **LCDT: LineOfCredit**  : *Line of credit account.*<br/>- **MBNW: MobilePhoneAccount**  : *Mobile Station Integrated Services Digital Network Number (MSISDN).*<br/>- **MNMK: MoneyMarket**  : *Money market saving account.*<br/>- **MNMC: MoneyMarketChecking**  : *Money market checking account.*<br/>- **MTGL: MortgageLoan**  : *Mortgage loan credit account.*<br/>- **RTRM: RetirementAccount**  : *Retirement account.*<br/>- **RVLV: RevolvingLoanAccount**  : *Revolving loan account.*<br/>- **SVNG: Savings**  : *Savings account.*<br/>- **STBD: StockOrBond**  : *Stock or bond investment account.*<br/>- **UVRL: Universal**  : *Universal account.*<br/>- **PRPD: PrePaid**  : *Pre-paid account.*<br/>- **FLTC: FleetCard**  : *Fleet card account.*<br/>  # noqa: E501

        :param account_type: The account_type of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._account_type = account_type

    @property
    def additional_information(self):
        """Gets the additional_information of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Additional information related to the transaction like an Invoice or IndustryData (for example  hospitality, lodging, transportation).  # noqa: E501

        :return: The additional_information of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Additional information related to the transaction like an Invoice or IndustryData (for example  hospitality, lodging, transportation).  # noqa: E501

        :param additional_information: The additional_information of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._additional_information = additional_information

    @property
    def aggregation_transaction(self):
        """Gets the aggregation_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501


        :return: The aggregation_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsAggregationTransaction
        """
        return self._aggregation_transaction

    @aggregation_transaction.setter
    def aggregation_transaction(self, aggregation_transaction):
        """Sets the aggregation_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.


        :param aggregation_transaction: The aggregation_transaction of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsAggregationTransaction
        """

        self._aggregation_transaction = aggregation_transaction

    @property
    def amount_qualifier(self):
        """Gets the amount_qualifier of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Qualifies the amount associated with the transaction.<br/>- **ACTL: Actual**  : *Actual amount.*<br/>- **ESTM: Estimated**  : *Estimated amount (the final amount could be above or below).*<br/>- **MAXI: Maximum**  : *Maximum amount (the final amount must be less or equal).*<br/>- **DFLT: Default**  : *Default amount.*<br/>- **RPLT: Replacement**  : *Replacement amount.*<br/>- **INCR: Incremental**  : *Incremental amount for reservation.*<br/>- **DECR: Decremental**  : *Decremental amount for reservation.*<br/>- **RESD: Reserved**  : *Reserved or updated reserved amount for reservation.*<br/>  # noqa: E501

        :return: The amount_qualifier of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._amount_qualifier

    @amount_qualifier.setter
    def amount_qualifier(self, amount_qualifier):
        """Sets the amount_qualifier of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Qualifies the amount associated with the transaction.<br/>- **ACTL: Actual**  : *Actual amount.*<br/>- **ESTM: Estimated**  : *Estimated amount (the final amount could be above or below).*<br/>- **MAXI: Maximum**  : *Maximum amount (the final amount must be less or equal).*<br/>- **DFLT: Default**  : *Default amount.*<br/>- **RPLT: Replacement**  : *Replacement amount.*<br/>- **INCR: Incremental**  : *Incremental amount for reservation.*<br/>- **DECR: Decremental**  : *Decremental amount for reservation.*<br/>- **RESD: Reserved**  : *Reserved or updated reserved amount for reservation.*<br/>  # noqa: E501

        :param amount_qualifier: The amount_qualifier of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._amount_qualifier = amount_qualifier

    @property
    def authorised_amount(self):
        """Gets the authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._authorised_amount

    @authorised_amount.setter
    def authorised_amount(self, authorised_amount):
        """Sets the authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param authorised_amount: The authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._authorised_amount = authorised_amount

    @property
    def currency(self):
        """Gets the currency of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".<br/>  # noqa: E501

        :return: The currency of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".<br/>  # noqa: E501

        :param currency: The currency of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._currency = currency

    @property
    def currency_conversion_result(self):
        """Gets the currency_conversion_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501


        :return: The currency_conversion_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsCurrencyConversionResult
        """
        return self._currency_conversion_result

    @currency_conversion_result.setter
    def currency_conversion_result(self, currency_conversion_result):
        """Sets the currency_conversion_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.


        :param currency_conversion_result: The currency_conversion_result of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsCurrencyConversionResult
        """

        self._currency_conversion_result = currency_conversion_result

    @property
    def cumulative_amount(self):
        """Gets the cumulative_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The cumulative_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._cumulative_amount

    @cumulative_amount.setter
    def cumulative_amount(self, cumulative_amount):
        """Sets the cumulative_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param cumulative_amount: The cumulative_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._cumulative_amount = cumulative_amount

    @property
    def completion_sequence_counter(self):
        """Gets the completion_sequence_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :return: The completion_sequence_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._completion_sequence_counter

    @completion_sequence_counter.setter
    def completion_sequence_counter(self, completion_sequence_counter):
        """Sets the completion_sequence_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :param completion_sequence_counter: The completion_sequence_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._completion_sequence_counter = completion_sequence_counter

    @property
    def completion_sequence_number(self):
        """Gets the completion_sequence_number of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :return: The completion_sequence_number of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._completion_sequence_number

    @completion_sequence_number.setter
    def completion_sequence_number(self, completion_sequence_number):
        """Sets the completion_sequence_number of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :param completion_sequence_number: The completion_sequence_number of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._completion_sequence_number = completion_sequence_number

    @property
    def delivery_location(self):
        """Gets the delivery_location of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :return: The delivery_location of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._delivery_location

    @delivery_location.setter
    def delivery_location(self, delivery_location):
        """Sets the delivery_location of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Specifies a character string with a maximum length of 35 characters.<br/>  # noqa: E501

        :param delivery_location: The delivery_location of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._delivery_location = delivery_location

    @property
    def detailed_amount(self):
        """Gets the detailed_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501


        :return: The detailed_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount
        """
        return self._detailed_amount

    @detailed_amount.setter
    def detailed_amount(self, detailed_amount):
        """Sets the detailed_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.


        :param detailed_amount: The detailed_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsDetailedAmount
        """

        self._detailed_amount = detailed_amount

    @property
    def icc_related_data(self):
        """Gets the icc_related_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Specifies a binary string with a maximum length of 10000 binary bytes.<br/>  # noqa: E501

        :return: The icc_related_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._icc_related_data

    @icc_related_data.setter
    def icc_related_data(self, icc_related_data):
        """Sets the icc_related_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Specifies a binary string with a maximum length of 10000 binary bytes.<br/>  # noqa: E501

        :param icc_related_data: The icc_related_data of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._icc_related_data = icc_related_data

    @property
    def instalment(self):
        """Gets the instalment of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Data related to a financial loan (instalment).  # noqa: E501

        :return: The instalment of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._instalment

    @instalment.setter
    def instalment(self, instalment):
        """Sets the instalment of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Data related to a financial loan (instalment).  # noqa: E501

        :param instalment: The instalment of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._instalment = instalment

    @property
    def invoice_amount(self):
        """Gets the invoice_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The invoice_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._invoice_amount

    @invoice_amount.setter
    def invoice_amount(self, invoice_amount):
        """Sets the invoice_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param invoice_amount: The invoice_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._invoice_amount = invoice_amount

    @property
    def on_line_reason(self):
        """Gets the on_line_reason of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Reason to process an online authorisation.  # noqa: E501

        :return: The on_line_reason of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._on_line_reason

    @on_line_reason.setter
    def on_line_reason(self, on_line_reason):
        """Sets the on_line_reason of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Reason to process an online authorisation.  # noqa: E501

        :param on_line_reason: The on_line_reason of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._on_line_reason = on_line_reason

    @property
    def product_code_set_identification(self):
        """Gets the product_code_set_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Specifies a character string with a maximum length of 10 characters.<br/>  # noqa: E501

        :return: The product_code_set_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._product_code_set_identification

    @product_code_set_identification.setter
    def product_code_set_identification(self, product_code_set_identification):
        """Sets the product_code_set_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Specifies a character string with a maximum length of 10 characters.<br/>  # noqa: E501

        :param product_code_set_identification: The product_code_set_identification of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._product_code_set_identification = product_code_set_identification

    @property
    def recurring(self):
        """Gets the recurring of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501


        :return: The recurring of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsRecurring
        """
        return self._recurring

    @recurring.setter
    def recurring(self, recurring):
        """Sets the recurring of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.


        :param recurring: The recurring of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetailsRecurring
        """

        self._recurring = recurring

    @property
    def re_submission_counter(self):
        """Gets the re_submission_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :return: The re_submission_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._re_submission_counter

    @re_submission_counter.setter
    def re_submission_counter(self, re_submission_counter):
        """Sets the re_submission_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of objects represented as a positive integer.<br/>  # noqa: E501

        :param re_submission_counter: The re_submission_counter of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._re_submission_counter = re_submission_counter

    @property
    def requested_amount(self):
        """Gets the requested_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The requested_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._requested_amount

    @requested_amount.setter
    def requested_amount(self, requested_amount):
        """Sets the requested_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param requested_amount: The requested_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._requested_amount = requested_amount

    @property
    def sale_item(self):
        """Gets the sale_item of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Item purchased with the transaction.  # noqa: E501

        :return: The sale_item of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._sale_item

    @sale_item.setter
    def sale_item(self, sale_item):
        """Sets the sale_item of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Item purchased with the transaction.  # noqa: E501

        :param sale_item: The sale_item of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._sale_item = sale_item

    @property
    def total_amount(self):
        """Gets the total_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The total_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._total_amount

    @total_amount.setter
    def total_amount(self, total_amount):
        """Sets the total_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param total_amount: The total_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """
        if total_amount is None:
            raise ValueError("Invalid value for `total_amount`, must not be `None`")  # noqa: E501

        self._total_amount = total_amount

    @property
    def total_authorised_amount(self):
        """Gets the total_authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :return: The total_authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._total_authorised_amount

    @total_authorised_amount.setter
    def total_authorised_amount(self, total_authorised_amount):
        """Sets the total_authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot. Note: a zero amount is considered a positive amount.<br/>  # noqa: E501

        :param total_authorised_amount: The total_authorised_amount of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._total_authorised_amount = total_authorised_amount

    @property
    def unattended_level_category(self):
        """Gets the unattended_level_category of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        Specifies a numeric string with a maximum length of 35 digits.<br/>  # noqa: E501

        :return: The unattended_level_category of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._unattended_level_category

    @unattended_level_category.setter
    def unattended_level_category(self, unattended_level_category):
        """Sets the unattended_level_category of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        Specifies a numeric string with a maximum length of 35 digits.<br/>  # noqa: E501

        :param unattended_level_category: The unattended_level_category of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._unattended_level_category = unattended_level_category

    @property
    def validity_date(self):
        """Gets the validity_date of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501

        A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.<br/>  # noqa: E501

        :return: The validity_date of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :rtype: object
        """
        return self._validity_date

    @validity_date.setter
    def validity_date(self, validity_date):
        """Sets the validity_date of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.

        A particular point in the progression of time in a calendar year expressed in the YYYY-MM-DD format. This representation is defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.<br/>  # noqa: E501

        :param validity_date: The validity_date of this PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails.  # noqa: E501
        :type: object
        """

        self._validity_date = validity_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoipoiIdfinancialServiceServiceRequestLoyaltyRequestTransactionOriginalPOITransactionTransactionDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
